<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="474" onload="init(evt)" viewBox="0 0 1200 474" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="474" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o /root/work/trade/system/profile.svg --pid 12022</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="463.00"> </text><svg id="frames" x="10" width="1180" total_samples="4122"><g><title>wrapper (pandas/tseries/offsets.py:69) (8 samples, 0.19%)</title><rect x="0.0243%" y="340" width="0.1941%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="8"/><text x="0.2743%" y="350.50"></text></g><g><title>apply (pandas/tseries/offsets.py:996) (5 samples, 0.12%)</title><rect x="0.3639%" y="356" width="0.1213%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="5"/><text x="0.6139%" y="366.50"></text></g><g><title>wrapper (pandas/tseries/offsets.py:71) (13 samples, 0.32%)</title><rect x="0.2183%" y="340" width="0.3154%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="13"/><text x="0.4683%" y="350.50"></text></g><g><title>generate_range (pandas/tseries/offsets.py:2971) (25 samples, 0.61%)</title><rect x="0.0243%" y="324" width="0.6065%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="25"/><text x="0.2743%" y="334.50"></text></g><g><title>__init__ (trading_calendars/trading_calendar.py:109) (27 samples, 0.66%)</title><rect x="0.0000%" y="228" width="0.6550%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="27"/><text x="0.2500%" y="238.50"></text></g><g><title>date_range (pandas/core/indexes/datetimes.py:2057) (27 samples, 0.66%)</title><rect x="0.0000%" y="244" width="0.6550%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="27"/><text x="0.2500%" y="254.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (27 samples, 0.66%)</title><rect x="0.0000%" y="260" width="0.6550%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="27"/><text x="0.2500%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:324) (27 samples, 0.66%)</title><rect x="0.0000%" y="276" width="0.6550%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="27"/><text x="0.2500%" y="286.50"></text></g><g><title>_generate (pandas/core/indexes/datetimes.py:531) (27 samples, 0.66%)</title><rect x="0.0000%" y="292" width="0.6550%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="27"/><text x="0.2500%" y="302.50"></text></g><g><title>_generate_regular_range (pandas/core/indexes/datetimes.py:2009) (27 samples, 0.66%)</title><rect x="0.0000%" y="308" width="0.6550%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="27"/><text x="0.2500%" y="318.50"></text></g><g><title>invoke (click/core.py:1665) (34 samples, 0.82%)</title><rect x="0.0000%" y="116" width="0.8248%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="34"/><text x="0.2500%" y="126.50"></text></g><g><title>invoke (click/core.py:1404) (34 samples, 0.82%)</title><rect x="0.0000%" y="132" width="0.8248%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="34"/><text x="0.2500%" y="142.50"></text></g><g><title>invoke (click/core.py:763) (34 samples, 0.82%)</title><rect x="0.0000%" y="148" width="0.8248%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="34"/><text x="0.2500%" y="158.50"></text></g><g><title>new_func (click/decorators.py:26) (34 samples, 0.82%)</title><rect x="0.0000%" y="164" width="0.8248%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="34"/><text x="0.2500%" y="174.50"></text></g><g><title>main (zipline/__main__.py:60) (34 samples, 0.82%)</title><rect x="0.0000%" y="180" width="0.8248%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="34"/><text x="0.2500%" y="190.50"></text></g><g><title>load_extensions (zipline/utils/run_algo.py:280) (34 samples, 0.82%)</title><rect x="0.0000%" y="196" width="0.8248%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="34"/><text x="0.2500%" y="206.50"></text></g><g><title>&lt;module&gt; (extension.py:348) (34 samples, 0.82%)</title><rect x="0.0000%" y="212" width="0.8248%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="34"/><text x="0.2500%" y="222.50"></text></g><g><title>__init__ (trading_calendars/trading_calendar.py:189) (7 samples, 0.17%)</title><rect x="0.6550%" y="228" width="0.1698%" height="15" fill="rgb(210,31,41)" fg:x="27" fg:w="7"/><text x="0.9050%" y="238.50"></text></g><g><title>__get__ (trading_calendars/utils/memoize.py:49) (7 samples, 0.17%)</title><rect x="0.6550%" y="244" width="0.1698%" height="15" fill="rgb(221,200,47)" fg:x="27" fg:w="7"/><text x="0.9050%" y="254.50"></text></g><g><title>all_minutes (trading_calendars/trading_calendar.py:942) (7 samples, 0.17%)</title><rect x="0.6550%" y="260" width="0.1698%" height="15" fill="rgb(226,26,5)" fg:x="27" fg:w="7"/><text x="0.9050%" y="270.50"></text></g><g><title>ingest (zipline/data/bundles/core.py:410) (7 samples, 0.17%)</title><rect x="0.8248%" y="180" width="0.1698%" height="15" fill="rgb(249,33,26)" fg:x="34" fg:w="7"/><text x="1.0748%" y="190.50"></text></g><g><title>__init__ (zipline/data/minute_bars.py:469) (7 samples, 0.17%)</title><rect x="0.8248%" y="196" width="0.1698%" height="15" fill="rgb(235,183,28)" fg:x="34" fg:w="7"/><text x="1.0748%" y="206.50"></text></g><g><title>parse_csv_metadata (extension.py:115) (5 samples, 0.12%)</title><rect x="1.0189%" y="212" width="0.1213%" height="15" fill="rgb(221,5,38)" fg:x="42" fg:w="5"/><text x="1.2689%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/indexes/datetimelike.py:272) (7 samples, 0.17%)</title><rect x="1.3343%" y="244" width="0.1698%" height="15" fill="rgb(247,18,42)" fg:x="55" fg:w="7"/><text x="1.5843%" y="254.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/indexes/datetimes.py:554) (6 samples, 0.15%)</title><rect x="1.3586%" y="260" width="0.1456%" height="15" fill="rgb(241,131,45)" fg:x="56" fg:w="6"/><text x="1.6086%" y="270.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:252) (5 samples, 0.12%)</title><rect x="1.6497%" y="244" width="0.1213%" height="15" fill="rgb(249,31,29)" fg:x="68" fg:w="5"/><text x="1.8997%" y="254.50"></text></g><g><title>parse_csv_metadata (extension.py:116) (45 samples, 1.09%)</title><rect x="1.1402%" y="212" width="1.0917%" height="15" fill="rgb(225,111,53)" fg:x="47" fg:w="45"/><text x="1.3902%" y="222.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:382) (39 samples, 0.95%)</title><rect x="1.2858%" y="228" width="0.9461%" height="15" fill="rgb(238,160,17)" fg:x="53" fg:w="39"/><text x="1.5358%" y="238.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:298) (15 samples, 0.36%)</title><rect x="1.8680%" y="244" width="0.3639%" height="15" fill="rgb(214,148,48)" fg:x="77" fg:w="15"/><text x="2.1180%" y="254.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (13 samples, 0.32%)</title><rect x="1.9165%" y="260" width="0.3154%" height="15" fill="rgb(232,36,49)" fg:x="79" fg:w="13"/><text x="2.1665%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:391) (5 samples, 0.12%)</title><rect x="2.7414%" y="276" width="0.1213%" height="15" fill="rgb(209,103,24)" fg:x="113" fg:w="5"/><text x="2.9914%" y="286.50"></text></g><g><title>parse_csv_metadata (extension.py:117) (27 samples, 0.66%)</title><rect x="2.2319%" y="212" width="0.6550%" height="15" fill="rgb(229,88,8)" fg:x="92" fg:w="27"/><text x="2.4819%" y="222.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:382) (25 samples, 0.61%)</title><rect x="2.2804%" y="228" width="0.6065%" height="15" fill="rgb(213,181,19)" fg:x="94" fg:w="25"/><text x="2.5304%" y="238.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:298) (10 samples, 0.24%)</title><rect x="2.6443%" y="244" width="0.2426%" height="15" fill="rgb(254,191,54)" fg:x="109" fg:w="10"/><text x="2.8943%" y="254.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (10 samples, 0.24%)</title><rect x="2.6443%" y="260" width="0.2426%" height="15" fill="rgb(241,83,37)" fg:x="109" fg:w="10"/><text x="2.8943%" y="270.50"></text></g><g><title>parse_csv_metadata (extension.py:119) (19 samples, 0.46%)</title><rect x="2.8869%" y="212" width="0.4609%" height="15" fill="rgb(233,36,39)" fg:x="119" fg:w="19"/><text x="3.1369%" y="222.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:193) (10 samples, 0.24%)</title><rect x="3.3964%" y="228" width="0.2426%" height="15" fill="rgb(226,3,54)" fg:x="140" fg:w="10"/><text x="3.6464%" y="238.50"></text></g><g><title>_get_setitem_indexer (pandas/core/indexing.py:179) (6 samples, 0.15%)</title><rect x="3.4934%" y="244" width="0.1456%" height="15" fill="rgb(245,192,40)" fg:x="144" fg:w="6"/><text x="3.7434%" y="254.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:468) (6 samples, 0.15%)</title><rect x="3.8574%" y="244" width="0.1456%" height="15" fill="rgb(238,167,29)" fg:x="159" fg:w="6"/><text x="4.1074%" y="254.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:577) (10 samples, 0.24%)</title><rect x="4.1000%" y="244" width="0.2426%" height="15" fill="rgb(232,182,51)" fg:x="169" fg:w="10"/><text x="4.3500%" y="254.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:602) (8 samples, 0.19%)</title><rect x="4.3426%" y="244" width="0.1941%" height="15" fill="rgb(231,60,39)" fg:x="179" fg:w="8"/><text x="4.5926%" y="254.50"></text></g><g><title>__iter__ (pandas/core/base.py:825) (8 samples, 0.19%)</title><rect x="4.3426%" y="260" width="0.1941%" height="15" fill="rgb(208,69,12)" fg:x="179" fg:w="8"/><text x="4.5926%" y="270.50"></text></g><g><title>get (pandas/core/internals.py:3843) (11 samples, 0.27%)</title><rect x="5.8952%" y="324" width="0.2669%" height="15" fill="rgb(235,93,37)" fg:x="243" fg:w="11"/><text x="6.1452%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (8 samples, 0.19%)</title><rect x="5.9680%" y="340" width="0.1941%" height="15" fill="rgb(213,116,39)" fg:x="246" fg:w="8"/><text x="6.2180%" y="350.50"></text></g><g><title>iget (pandas/core/internals.py:3871) (5 samples, 0.12%)</title><rect x="6.2348%" y="340" width="0.1213%" height="15" fill="rgb(222,207,29)" fg:x="257" fg:w="5"/><text x="6.4848%" y="350.50"></text></g><g><title>__init__ (pandas/core/internals.py:2081) (5 samples, 0.12%)</title><rect x="6.7686%" y="388" width="0.1213%" height="15" fill="rgb(206,96,30)" fg:x="279" fg:w="5"/><text x="7.0186%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:2082) (6 samples, 0.15%)</title><rect x="6.8899%" y="388" width="0.1456%" height="15" fill="rgb(218,138,4)" fg:x="284" fg:w="6"/><text x="7.1399%" y="398.50"></text></g><g><title>iget (pandas/core/internals.py:3880) (24 samples, 0.58%)</title><rect x="6.5260%" y="340" width="0.5822%" height="15" fill="rgb(250,191,14)" fg:x="269" fg:w="24"/><text x="6.7760%" y="350.50"></text></g><g><title>make_block_same_class (pandas/core/internals.py:224) (22 samples, 0.53%)</title><rect x="6.5745%" y="356" width="0.5337%" height="15" fill="rgb(239,60,40)" fg:x="271" fg:w="22"/><text x="6.8245%" y="366.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (16 samples, 0.39%)</title><rect x="6.7200%" y="372" width="0.3882%" height="15" fill="rgb(206,27,48)" fg:x="277" fg:w="16"/><text x="6.9700%" y="382.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (66 samples, 1.60%)</title><rect x="5.7254%" y="308" width="1.6012%" height="15" fill="rgb(225,35,8)" fg:x="236" fg:w="66"/><text x="5.9754%" y="318.50"></text></g><g><title>get (pandas/core/internals.py:3854) (48 samples, 1.16%)</title><rect x="6.1621%" y="324" width="1.1645%" height="15" fill="rgb(250,213,24)" fg:x="254" fg:w="48"/><text x="6.4121%" y="334.50"></text></g><g><title>iget (pandas/core/internals.py:3881) (9 samples, 0.22%)</title><rect x="7.1082%" y="340" width="0.2183%" height="15" fill="rgb(247,123,22)" fg:x="293" fg:w="9"/><text x="7.3582%" y="350.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2494) (12 samples, 0.29%)</title><rect x="7.3265%" y="324" width="0.2911%" height="15" fill="rgb(231,138,38)" fg:x="302" fg:w="12"/><text x="7.5765%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (6 samples, 0.15%)</title><rect x="7.4721%" y="340" width="0.1456%" height="15" fill="rgb(231,145,46)" fg:x="308" fg:w="6"/><text x="7.7221%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (6 samples, 0.15%)</title><rect x="7.9330%" y="372" width="0.1456%" height="15" fill="rgb(251,118,11)" fg:x="327" fg:w="6"/><text x="8.1830%" y="382.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3626) (9 samples, 0.22%)</title><rect x="8.1756%" y="388" width="0.2183%" height="15" fill="rgb(217,147,25)" fg:x="337" fg:w="9"/><text x="8.4256%" y="398.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (27 samples, 0.66%)</title><rect x="8.0786%" y="372" width="0.6550%" height="15" fill="rgb(247,81,37)" fg:x="333" fg:w="27"/><text x="8.3286%" y="382.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3636) (9 samples, 0.22%)</title><rect x="8.5153%" y="388" width="0.2183%" height="15" fill="rgb(209,12,38)" fg:x="351" fg:w="9"/><text x="8.7653%" y="398.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (63 samples, 1.53%)</title><rect x="7.3265%" y="308" width="1.5284%" height="15" fill="rgb(227,1,9)" fg:x="302" fg:w="63"/><text x="7.5765%" y="318.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (51 samples, 1.24%)</title><rect x="7.6177%" y="324" width="1.2373%" height="15" fill="rgb(248,47,43)" fg:x="314" fg:w="51"/><text x="7.8677%" y="334.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:2503) (49 samples, 1.19%)</title><rect x="7.6662%" y="340" width="1.1887%" height="15" fill="rgb(221,10,30)" fg:x="316" fg:w="49"/><text x="7.9162%" y="350.50"></text></g><g><title>from_array (pandas/core/series.py:282) (43 samples, 1.04%)</title><rect x="7.8117%" y="356" width="1.0432%" height="15" fill="rgb(210,229,1)" fg:x="322" fg:w="43"/><text x="8.0617%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:271) (5 samples, 0.12%)</title><rect x="8.7336%" y="372" width="0.1213%" height="15" fill="rgb(222,148,37)" fg:x="360" fg:w="5"/><text x="8.9836%" y="382.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1845) (7 samples, 0.17%)</title><rect x="8.9520%" y="308" width="0.1698%" height="15" fill="rgb(234,67,33)" fg:x="369" fg:w="7"/><text x="9.2020%" y="318.50"></text></g><g><title>_set_as_cached (pandas/core/generic.py:1855) (7 samples, 0.17%)</title><rect x="8.9520%" y="324" width="0.1698%" height="15" fill="rgb(247,98,35)" fg:x="369" fg:w="7"/><text x="9.2020%" y="334.50"></text></g><g><title>setter (pandas/core/indexing.py:516) (153 samples, 3.71%)</title><rect x="5.4585%" y="260" width="3.7118%" height="15" fill="rgb(247,138,52)" fg:x="225" fg:w="153"/><text x="5.7085%" y="270.50">sett..</text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (147 samples, 3.57%)</title><rect x="5.6041%" y="276" width="3.5662%" height="15" fill="rgb(213,79,30)" fg:x="231" fg:w="147"/><text x="5.8541%" y="286.50">__ge..</text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (144 samples, 3.49%)</title><rect x="5.6769%" y="292" width="3.4934%" height="15" fill="rgb(246,177,23)" fg:x="234" fg:w="144"/><text x="5.9269%" y="302.50">_ge..</text></g><g><title>setter (pandas/core/indexing.py:531) (6 samples, 0.15%)</title><rect x="9.1946%" y="260" width="0.1456%" height="15" fill="rgb(230,62,27)" fg:x="379" fg:w="6"/><text x="9.4446%" y="270.50"></text></g><g><title>_consolidate_inplace (pandas/core/generic.py:3677) (5 samples, 0.12%)</title><rect x="9.2188%" y="276" width="0.1213%" height="15" fill="rgb(216,154,8)" fg:x="380" fg:w="5"/><text x="9.4688%" y="286.50"></text></g><g><title>_simple_new (pandas/core/indexes/range.py:140) (10 samples, 0.24%)</title><rect x="10.2135%" y="388" width="0.2426%" height="15" fill="rgb(244,35,45)" fg:x="421" fg:w="10"/><text x="10.4635%" y="398.50"></text></g><g><title>__new__ (pandas/core/indexes/range.py:60) (18 samples, 0.44%)</title><rect x="10.0437%" y="372" width="0.4367%" height="15" fill="rgb(251,115,12)" fg:x="414" fg:w="18"/><text x="10.2937%" y="382.50"></text></g><g><title>view (pandas/core/indexes/base.py:744) (36 samples, 0.87%)</title><rect x="9.6798%" y="340" width="0.8734%" height="15" fill="rgb(240,54,50)" fg:x="399" fg:w="36"/><text x="9.9298%" y="350.50"></text></g><g><title>_shallow_copy (pandas/core/indexes/range.py:252) (34 samples, 0.82%)</title><rect x="9.7283%" y="356" width="0.8248%" height="15" fill="rgb(233,84,52)" fg:x="401" fg:w="34"/><text x="9.9783%" y="366.50"></text></g><g><title>copy (pandas/core/internals.py:3660) (42 samples, 1.02%)</title><rect x="9.5585%" y="292" width="1.0189%" height="15" fill="rgb(207,117,47)" fg:x="394" fg:w="42"/><text x="9.8085%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3660) (39 samples, 0.95%)</title><rect x="9.6312%" y="308" width="0.9461%" height="15" fill="rgb(249,43,39)" fg:x="397" fg:w="39"/><text x="9.8812%" y="318.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals.py:3659) (38 samples, 0.92%)</title><rect x="9.6555%" y="324" width="0.9219%" height="15" fill="rgb(209,38,44)" fg:x="398" fg:w="38"/><text x="9.9055%" y="334.50"></text></g><g><title>copy (pandas/core/internals.py:736) (88 samples, 2.13%)</title><rect x="10.8443%" y="324" width="2.1349%" height="15" fill="rgb(236,212,23)" fg:x="447" fg:w="88"/><text x="11.0943%" y="334.50">c..</text></g><g><title>__init__ (pandas/core/internals.py:2082) (9 samples, 0.22%)</title><rect x="13.2703%" y="372" width="0.2183%" height="15" fill="rgb(242,79,21)" fg:x="547" fg:w="9"/><text x="13.5203%" y="382.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (115 samples, 2.79%)</title><rect x="10.7472%" y="308" width="2.7899%" height="15" fill="rgb(211,96,35)" fg:x="443" fg:w="115"/><text x="10.9972%" y="318.50">ap..</text></g><g><title>copy (pandas/core/internals.py:737) (23 samples, 0.56%)</title><rect x="12.9791%" y="324" width="0.5580%" height="15" fill="rgb(253,215,40)" fg:x="535" fg:w="23"/><text x="13.2291%" y="334.50"></text></g><g><title>make_block_same_class (pandas/core/internals.py:224) (18 samples, 0.44%)</title><rect x="13.1004%" y="340" width="0.4367%" height="15" fill="rgb(211,81,21)" fg:x="540" fg:w="18"/><text x="13.3504%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (16 samples, 0.39%)</title><rect x="13.1490%" y="356" width="0.3882%" height="15" fill="rgb(208,190,38)" fg:x="542" fg:w="16"/><text x="13.3990%" y="366.50"></text></g><g><title>copy (pandas/core/generic.py:4026) (184 samples, 4.46%)</title><rect x="9.3401%" y="276" width="4.4639%" height="15" fill="rgb(235,213,38)" fg:x="385" fg:w="184"/><text x="9.5901%" y="286.50">copy ..</text></g><g><title>copy (pandas/core/internals.py:3664) (131 samples, 3.18%)</title><rect x="10.6259%" y="292" width="3.1781%" height="15" fill="rgb(237,122,38)" fg:x="438" fg:w="131"/><text x="10.8759%" y="302.50">cop..</text></g><g><title>apply (pandas/core/internals.py:3335) (8 samples, 0.19%)</title><rect x="13.6099%" y="308" width="0.1941%" height="15" fill="rgb(244,218,35)" fg:x="561" fg:w="8"/><text x="13.8599%" y="318.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:3597) (6 samples, 0.15%)</title><rect x="13.9495%" y="292" width="0.1456%" height="15" fill="rgb(240,68,47)" fg:x="575" fg:w="6"/><text x="14.1995%" y="302.50"></text></g><g><title>__init__ (pandas/core/generic.py:133) (5 samples, 0.12%)</title><rect x="14.3620%" y="308" width="0.1213%" height="15" fill="rgb(210,16,53)" fg:x="592" fg:w="5"/><text x="14.6120%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (12 samples, 0.29%)</title><rect x="14.2407%" y="292" width="0.2911%" height="15" fill="rgb(235,124,12)" fg:x="587" fg:w="12"/><text x="14.4907%" y="302.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3626) (9 samples, 0.22%)</title><rect x="14.5560%" y="308" width="0.2183%" height="15" fill="rgb(224,169,11)" fg:x="600" fg:w="9"/><text x="14.8060%" y="318.50"></text></g><g><title>name (pandas/core/series.py:338) (5 samples, 0.12%)</title><rect x="14.6531%" y="324" width="0.1213%" height="15" fill="rgb(250,166,2)" fg:x="604" fg:w="5"/><text x="14.9031%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (16 samples, 0.39%)</title><rect x="14.5318%" y="292" width="0.3882%" height="15" fill="rgb(242,216,29)" fg:x="599" fg:w="16"/><text x="14.7818%" y="302.50"></text></g><g><title>setter (pandas/core/indexing.py:532) (233 samples, 5.65%)</title><rect x="9.3401%" y="260" width="5.6526%" height="15" fill="rgb(230,116,27)" fg:x="385" fg:w="233"/><text x="9.5901%" y="270.50">setter ..</text></g><g><title>copy (pandas/core/generic.py:4027) (49 samples, 1.19%)</title><rect x="13.8040%" y="276" width="1.1887%" height="15" fill="rgb(228,99,48)" fg:x="569" fg:w="49"/><text x="14.0540%" y="286.50"></text></g><g><title>_try_coerce_args (pandas/core/internals.py:2186) (5 samples, 0.12%)</title><rect x="15.6235%" y="324" width="0.1213%" height="15" fill="rgb(253,11,6)" fg:x="644" fg:w="5"/><text x="15.8735%" y="334.50"></text></g><g><title>_try_coerce_args (pandas/core/internals.py:2520) (12 samples, 0.29%)</title><rect x="15.7448%" y="324" width="0.2911%" height="15" fill="rgb(247,143,39)" fg:x="649" fg:w="12"/><text x="15.9948%" y="334.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (12 samples, 0.29%)</title><rect x="15.7448%" y="340" width="0.2911%" height="15" fill="rgb(236,97,10)" fg:x="649" fg:w="12"/><text x="15.9948%" y="350.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:58) (9 samples, 0.22%)</title><rect x="15.8176%" y="356" width="0.2183%" height="15" fill="rgb(233,208,19)" fg:x="652" fg:w="9"/><text x="16.0676%" y="366.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:151) (7 samples, 0.17%)</title><rect x="15.8661%" y="372" width="0.1698%" height="15" fill="rgb(216,164,2)" fg:x="654" fg:w="7"/><text x="16.1161%" y="382.50"></text></g><g><title>_try_coerce_args (pandas/core/internals.py:2530) (6 samples, 0.15%)</title><rect x="16.1329%" y="324" width="0.1456%" height="15" fill="rgb(220,129,5)" fg:x="665" fg:w="6"/><text x="16.3829%" y="334.50"></text></g><g><title>setitem (pandas/core/internals.py:792) (31 samples, 0.75%)</title><rect x="15.5750%" y="308" width="0.7521%" height="15" fill="rgb(242,17,10)" fg:x="642" fg:w="31"/><text x="15.8250%" y="318.50"></text></g><g><title>setitem (pandas/core/internals.py:826) (10 samples, 0.24%)</title><rect x="16.3998%" y="308" width="0.2426%" height="15" fill="rgb(242,107,0)" fg:x="676" fg:w="10"/><text x="16.6498%" y="318.50"></text></g><g><title>setitem (pandas/core/internals.py:879) (10 samples, 0.24%)</title><rect x="16.8122%" y="308" width="0.2426%" height="15" fill="rgb(251,28,31)" fg:x="693" fg:w="10"/><text x="17.0622%" y="318.50"></text></g><g><title>_is_empty_indexer (pandas/core/internals.py:868) (10 samples, 0.24%)</title><rect x="16.8122%" y="324" width="0.2426%" height="15" fill="rgb(233,223,10)" fg:x="693" fg:w="10"/><text x="17.0622%" y="334.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (9 samples, 0.22%)</title><rect x="16.8365%" y="340" width="0.2183%" height="15" fill="rgb(215,21,27)" fg:x="694" fg:w="9"/><text x="17.0865%" y="350.50"></text></g><g><title>_try_cast_result (pandas/core/internals.py:667) (19 samples, 0.46%)</title><rect x="17.2246%" y="340" width="0.4609%" height="15" fill="rgb(232,23,21)" fg:x="710" fg:w="19"/><text x="17.4746%" y="350.50"></text></g><g><title>is_bool (pandas/core/internals.py:2089) (17 samples, 0.41%)</title><rect x="17.2732%" y="356" width="0.4124%" height="15" fill="rgb(244,5,23)" fg:x="712" fg:w="17"/><text x="17.5232%" y="366.50"></text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:103) (6 samples, 0.15%)</title><rect x="17.7584%" y="356" width="0.1456%" height="15" fill="rgb(226,81,46)" fg:x="732" fg:w="6"/><text x="18.0084%" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:71) (5 samples, 0.12%)</title><rect x="18.2436%" y="404" width="0.1213%" height="15" fill="rgb(247,70,30)" fg:x="752" fg:w="5"/><text x="18.4936%" y="414.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:76) (6 samples, 0.15%)</title><rect x="18.3891%" y="404" width="0.1456%" height="15" fill="rgb(212,68,19)" fg:x="758" fg:w="6"/><text x="18.6391%" y="414.50"></text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:110) (50 samples, 1.21%)</title><rect x="17.9282%" y="356" width="1.2130%" height="15" fill="rgb(240,187,13)" fg:x="739" fg:w="50"/><text x="18.1782%" y="366.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (45 samples, 1.09%)</title><rect x="18.0495%" y="372" width="1.0917%" height="15" fill="rgb(223,113,26)" fg:x="744" fg:w="45"/><text x="18.2995%" y="382.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:3000) (41 samples, 0.99%)</title><rect x="18.1465%" y="388" width="0.9947%" height="15" fill="rgb(206,192,2)" fg:x="748" fg:w="41"/><text x="18.3965%" y="398.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:87) (22 samples, 0.53%)</title><rect x="18.6075%" y="404" width="0.5337%" height="15" fill="rgb(241,108,4)" fg:x="767" fg:w="22"/><text x="18.8575%" y="414.50"></text></g><g><title>setitem (pandas/core/internals.py:904) (526 samples, 12.76%)</title><rect x="17.1033%" y="308" width="12.7608%" height="15" fill="rgb(247,173,49)" fg:x="705" fg:w="526"/><text x="17.3533%" y="318.50">setitem (pandas/cor..</text></g><g><title>_try_coerce_and_cast_result (pandas/core/internals.py:711) (523 samples, 12.69%)</title><rect x="17.1761%" y="324" width="12.6880%" height="15" fill="rgb(224,114,35)" fg:x="708" fg:w="523"/><text x="17.4261%" y="334.50">_try_coerce_and_cas..</text></g><g><title>_try_cast_result (pandas/core/internals.py:691) (502 samples, 12.18%)</title><rect x="17.6856%" y="340" width="12.1786%" height="15" fill="rgb(245,159,27)" fg:x="729" fg:w="502"/><text x="17.9356%" y="350.50">_try_cast_result (..</text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:82) (438 samples, 10.63%)</title><rect x="19.2382%" y="356" width="10.6259%" height="15" fill="rgb(245,172,44)" fg:x="793" fg:w="438"/><text x="19.4882%" y="366.50">maybe_downcast_t..</text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:264) (5 samples, 0.12%)</title><rect x="30.2523%" y="356" width="0.1213%" height="15" fill="rgb(236,23,11)" fg:x="1247" fg:w="5"/><text x="30.5023%" y="366.50"></text></g><g><title>make_block (pandas/core/internals.py:2944) (12 samples, 0.29%)</title><rect x="30.1795%" y="340" width="0.2911%" height="15" fill="rgb(205,117,38)" fg:x="1244" fg:w="12"/><text x="30.4295%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2948) (5 samples, 0.12%)</title><rect x="30.4706%" y="340" width="0.1213%" height="15" fill="rgb(237,72,25)" fg:x="1256" fg:w="5"/><text x="30.7206%" y="350.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:220) (5 samples, 0.12%)</title><rect x="30.4706%" y="356" width="0.1213%" height="15" fill="rgb(244,70,9)" fg:x="1256" fg:w="5"/><text x="30.7206%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:2082) (8 samples, 0.19%)</title><rect x="30.7375%" y="356" width="0.1941%" height="15" fill="rgb(217,125,39)" fg:x="1267" fg:w="8"/><text x="30.9875%" y="366.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (641 samples, 15.55%)</title><rect x="15.4294%" y="292" width="15.5507%" height="15" fill="rgb(235,36,10)" fg:x="636" fg:w="641"/><text x="15.6794%" y="302.50">apply (pandas/core/inter..</text></g><g><title>setitem (pandas/core/internals.py:905) (46 samples, 1.12%)</title><rect x="29.8641%" y="308" width="1.1160%" height="15" fill="rgb(251,123,47)" fg:x="1231" fg:w="46"/><text x="30.1141%" y="318.50"></text></g><g><title>make_block (pandas/core/internals.py:210) (42 samples, 1.02%)</title><rect x="29.9612%" y="324" width="1.0189%" height="15" fill="rgb(221,13,13)" fg:x="1235" fg:w="42"/><text x="30.2112%" y="334.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (16 samples, 0.39%)</title><rect x="30.5919%" y="340" width="0.3882%" height="15" fill="rgb(238,131,9)" fg:x="1261" fg:w="16"/><text x="30.8419%" y="350.50"></text></g><g><title>apply (pandas/core/internals.py:3335) (8 samples, 0.19%)</title><rect x="31.1257%" y="292" width="0.1941%" height="15" fill="rgb(211,50,8)" fg:x="1283" fg:w="8"/><text x="31.3757%" y="302.50"></text></g><g><title>setter (pandas/core/indexing.py:533) (675 samples, 16.38%)</title><rect x="14.9927%" y="260" width="16.3755%" height="15" fill="rgb(245,182,24)" fg:x="618" fg:w="675"/><text x="15.2427%" y="270.50">setter (pandas/core/index..</text></g><g><title>setitem (pandas/core/internals.py:3441) (667 samples, 16.18%)</title><rect x="15.1868%" y="276" width="16.1815%" height="15" fill="rgb(242,14,37)" fg:x="626" fg:w="667"/><text x="15.4368%" y="286.50">setitem (pandas/core/inte..</text></g><g><title>_maybe_update_cacher (pandas/core/generic.py:1911) (8 samples, 0.19%)</title><rect x="31.3925%" y="276" width="0.1941%" height="15" fill="rgb(246,228,12)" fg:x="1294" fg:w="8"/><text x="31.6425%" y="286.50"></text></g><g><title>_maybe_update_cacher (pandas/core/generic.py:1926) (7 samples, 0.17%)</title><rect x="31.6109%" y="276" width="0.1698%" height="15" fill="rgb(213,55,15)" fg:x="1303" fg:w="7"/><text x="31.8609%" y="286.50"></text></g><g><title>setter (pandas/core/indexing.py:534) (20 samples, 0.49%)</title><rect x="31.3683%" y="260" width="0.4852%" height="15" fill="rgb(209,9,3)" fg:x="1293" fg:w="20"/><text x="31.6183%" y="270.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (11 samples, 0.27%)</title><rect x="31.9748%" y="276" width="0.2669%" height="15" fill="rgb(230,59,30)" fg:x="1318" fg:w="11"/><text x="32.2248%" y="286.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1985) (8 samples, 0.19%)</title><rect x="32.0475%" y="292" width="0.1941%" height="15" fill="rgb(209,121,21)" fg:x="1321" fg:w="8"/><text x="32.2975%" y="302.50"></text></g><g><title>contains (pandas/core/indexes/base.py:1716) (5 samples, 0.12%)</title><rect x="32.1203%" y="308" width="0.1213%" height="15" fill="rgb(220,109,13)" fg:x="1324" fg:w="5"/><text x="32.3703%" y="318.50"></text></g><g><title>_set_item (pandas/core/frame.py:2584) (5 samples, 0.12%)</title><rect x="33.1393%" y="292" width="0.1213%" height="15" fill="rgb(232,18,1)" fg:x="1366" fg:w="5"/><text x="33.3893%" y="302.50"></text></g><g><title>reindexer (pandas/core/frame.py:2720) (11 samples, 0.27%)</title><rect x="33.3333%" y="324" width="0.2669%" height="15" fill="rgb(215,41,42)" fg:x="1374" fg:w="11"/><text x="33.5833%" y="334.50"></text></g><g><title>_sanitize_column (pandas/core/frame.py:2739) (71 samples, 1.72%)</title><rect x="33.3333%" y="308" width="1.7225%" height="15" fill="rgb(224,123,36)" fg:x="1374" fg:w="71"/><text x="33.5833%" y="318.50"></text></g><g><title>reindexer (pandas/core/frame.py:2721) (60 samples, 1.46%)</title><rect x="33.6002%" y="324" width="1.4556%" height="15" fill="rgb(240,125,3)" fg:x="1385" fg:w="60"/><text x="33.8502%" y="334.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1648) (6 samples, 0.15%)</title><rect x="35.1771%" y="324" width="0.1456%" height="15" fill="rgb(205,98,50)" fg:x="1450" fg:w="6"/><text x="35.4271%" y="334.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:148) (6 samples, 0.15%)</title><rect x="35.1771%" y="340" width="0.1456%" height="15" fill="rgb(205,185,37)" fg:x="1450" fg:w="6"/><text x="35.4271%" y="350.50"></text></g><g><title>_sanitize_column (pandas/core/frame.py:2783) (17 samples, 0.41%)</title><rect x="35.0558%" y="308" width="0.4124%" height="15" fill="rgb(238,207,15)" fg:x="1445" fg:w="17"/><text x="35.3058%" y="318.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1650) (6 samples, 0.15%)</title><rect x="35.3227%" y="324" width="0.1456%" height="15" fill="rgb(213,199,42)" fg:x="1456" fg:w="6"/><text x="35.5727%" y="334.50"></text></g><g><title>_sanitize_column (pandas/core/frame.py:2787) (8 samples, 0.19%)</title><rect x="35.4682%" y="308" width="0.1941%" height="15" fill="rgb(235,201,11)" fg:x="1462" fg:w="8"/><text x="35.7182%" y="318.50"></text></g><g><title>_set_item (pandas/core/frame.py:2585) (120 samples, 2.91%)</title><rect x="33.2606%" y="292" width="2.9112%" height="15" fill="rgb(207,46,11)" fg:x="1371" fg:w="120"/><text x="33.5106%" y="302.50">_s..</text></g><g><title>_sanitize_column (pandas/core/frame.py:2794) (16 samples, 0.39%)</title><rect x="35.7836%" y="308" width="0.3882%" height="15" fill="rgb(241,35,35)" fg:x="1475" fg:w="16"/><text x="36.0336%" y="318.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (9 samples, 0.22%)</title><rect x="35.9534%" y="324" width="0.2183%" height="15" fill="rgb(243,32,47)" fg:x="1482" fg:w="9"/><text x="36.2034%" y="334.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1648) (5 samples, 0.12%)</title><rect x="36.4386%" y="340" width="0.1213%" height="15" fill="rgb(247,202,23)" fg:x="1502" fg:w="5"/><text x="36.6886%" y="350.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:148) (5 samples, 0.12%)</title><rect x="36.4386%" y="356" width="0.1213%" height="15" fill="rgb(219,102,11)" fg:x="1502" fg:w="5"/><text x="36.6886%" y="366.50"></text></g><g><title>set (pandas/core/internals.py:3945) (11 samples, 0.27%)</title><rect x="36.3416%" y="324" width="0.2669%" height="15" fill="rgb(243,110,44)" fg:x="1498" fg:w="11"/><text x="36.5916%" y="334.50"></text></g><g><title>set (pandas/core/internals.py:3953) (5 samples, 0.12%)</title><rect x="36.6084%" y="324" width="0.1213%" height="15" fill="rgb(222,74,54)" fg:x="1509" fg:w="5"/><text x="36.8584%" y="334.50"></text></g><g><title>set (pandas/core/internals.py:3963) (12 samples, 0.29%)</title><rect x="36.7297%" y="324" width="0.2911%" height="15" fill="rgb(216,99,12)" fg:x="1514" fg:w="12"/><text x="36.9797%" y="334.50"></text></g><g><title>shape (pandas/core/internals.py:3060) (9 samples, 0.22%)</title><rect x="36.8025%" y="340" width="0.2183%" height="15" fill="rgb(226,22,26)" fg:x="1517" fg:w="9"/><text x="37.0525%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3968) (9 samples, 0.22%)</title><rect x="37.0209%" y="324" width="0.2183%" height="15" fill="rgb(217,163,10)" fg:x="1526" fg:w="9"/><text x="37.2709%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (8 samples, 0.19%)</title><rect x="37.0451%" y="340" width="0.1941%" height="15" fill="rgb(213,25,53)" fg:x="1527" fg:w="8"/><text x="37.2951%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3977) (8 samples, 0.19%)</title><rect x="37.2877%" y="324" width="0.1941%" height="15" fill="rgb(252,105,26)" fg:x="1537" fg:w="8"/><text x="37.5377%" y="334.50"></text></g><g><title>set (pandas/core/internals.py:3978) (10 samples, 0.24%)</title><rect x="37.4818%" y="324" width="0.2426%" height="15" fill="rgb(220,39,43)" fg:x="1545" fg:w="10"/><text x="37.7318%" y="334.50"></text></g><g><title>_get_blkno_placements (pandas/core/internals.py:5009) (15 samples, 0.36%)</title><rect x="37.8700%" y="340" width="0.3639%" height="15" fill="rgb(229,68,48)" fg:x="1561" fg:w="15"/><text x="38.1200%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3984) (22 samples, 0.53%)</title><rect x="37.7487%" y="324" width="0.5337%" height="15" fill="rgb(252,8,32)" fg:x="1556" fg:w="22"/><text x="37.9987%" y="334.50"></text></g><g><title>should_store (pandas/core/internals.py:2196) (12 samples, 0.29%)</title><rect x="38.4765%" y="340" width="0.2911%" height="15" fill="rgb(223,20,43)" fg:x="1586" fg:w="12"/><text x="38.7265%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3987) (19 samples, 0.46%)</title><rect x="38.3309%" y="324" width="0.4609%" height="15" fill="rgb(229,81,49)" fg:x="1580" fg:w="19"/><text x="38.5809%" y="334.50"></text></g><g><title>set (pandas/core/internals.py:2160) (63 samples, 1.53%)</title><rect x="38.7918%" y="340" width="1.5284%" height="15" fill="rgb(236,28,36)" fg:x="1599" fg:w="63"/><text x="39.0418%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3988) (68 samples, 1.65%)</title><rect x="38.7918%" y="324" width="1.6497%" height="15" fill="rgb(249,185,26)" fg:x="1599" fg:w="68"/><text x="39.0418%" y="334.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (178 samples, 4.32%)</title><rect x="36.2203%" y="308" width="4.3183%" height="15" fill="rgb(249,174,33)" fg:x="1493" fg:w="178"/><text x="36.4703%" y="318.50">_set_..</text></g><g><title>_set_item (pandas/core/frame.py:2586) (184 samples, 4.46%)</title><rect x="36.1718%" y="292" width="4.4639%" height="15" fill="rgb(233,201,37)" fg:x="1491" fg:w="184"/><text x="36.4218%" y="302.50">_set_..</text></g><g><title>_set_item (pandas/core/frame.py:2591) (6 samples, 0.15%)</title><rect x="40.6356%" y="292" width="0.1456%" height="15" fill="rgb(221,78,26)" fg:x="1675" fg:w="6"/><text x="40.8856%" y="302.50"></text></g><g><title>__len__ (pandas/core/frame.py:819) (6 samples, 0.15%)</title><rect x="40.6356%" y="308" width="0.1456%" height="15" fill="rgb(250,127,30)" fg:x="1675" fg:w="6"/><text x="40.8856%" y="318.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (1,533 samples, 37.19%)</title><rect x="3.6390%" y="228" width="37.1907%" height="15" fill="rgb(230,49,44)" fg:x="150" fg:w="1533"/><text x="3.8890%" y="238.50">__setitem__ (pandas/core/indexing.py:194)</text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:603) (1,496 samples, 36.29%)</title><rect x="4.5366%" y="244" width="36.2931%" height="15" fill="rgb(229,67,23)" fg:x="187" fg:w="1496"/><text x="4.7866%" y="254.50">_setitem_with_indexer (pandas/core/indexing.py:603)</text></g><g><title>setter (pandas/core/indexing.py:537) (370 samples, 8.98%)</title><rect x="31.8535%" y="260" width="8.9762%" height="15" fill="rgb(249,83,47)" fg:x="1313" fg:w="370"/><text x="32.1035%" y="270.50">setter (panda..</text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (352 samples, 8.54%)</title><rect x="32.2902%" y="276" width="8.5395%" height="15" fill="rgb(215,43,3)" fg:x="1331" fg:w="352"/><text x="32.5402%" y="286.50">__setitem__ ..</text></g><g><title>parse_csv_metadata (extension.py:129) (1,544 samples, 37.46%)</title><rect x="3.3964%" y="212" width="37.4575%" height="15" fill="rgb(238,154,13)" fg:x="140" fg:w="1544"/><text x="3.6464%" y="222.50">parse_csv_metadata (extension.py:129)</text></g><g><title>__str__ (tqdm/std.py:1148) (5 samples, 0.12%)</title><rect x="40.8782%" y="292" width="0.1213%" height="15" fill="rgb(219,56,2)" fg:x="1685" fg:w="5"/><text x="41.1282%" y="302.50"></text></g><g><title>parse_csv_metadata (extension.py:83) (7 samples, 0.17%)</title><rect x="40.8540%" y="212" width="0.1698%" height="15" fill="rgb(233,0,4)" fg:x="1684" fg:w="7"/><text x="41.1040%" y="222.50"></text></g><g><title>__iter__ (tqdm/std.py:1188) (7 samples, 0.17%)</title><rect x="40.8540%" y="228" width="0.1698%" height="15" fill="rgb(235,30,7)" fg:x="1684" fg:w="7"/><text x="41.1040%" y="238.50"></text></g><g><title>update (tqdm/std.py:1239) (6 samples, 0.15%)</title><rect x="40.8782%" y="244" width="0.1456%" height="15" fill="rgb(250,79,13)" fg:x="1685" fg:w="6"/><text x="41.1282%" y="254.50"></text></g><g><title>refresh (tqdm/std.py:1344) (6 samples, 0.15%)</title><rect x="40.8782%" y="260" width="0.1456%" height="15" fill="rgb(211,146,34)" fg:x="1685" fg:w="6"/><text x="41.1282%" y="270.50"></text></g><g><title>display (tqdm/std.py:1492) (6 samples, 0.15%)</title><rect x="40.8782%" y="276" width="0.1456%" height="15" fill="rgb(228,22,38)" fg:x="1685" fg:w="6"/><text x="41.1282%" y="286.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (7 samples, 0.17%)</title><rect x="41.3877%" y="308" width="0.1698%" height="15" fill="rgb(235,168,5)" fg:x="1706" fg:w="7"/><text x="41.6377%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:968) (8 samples, 0.19%)</title><rect x="41.3877%" y="292" width="0.1941%" height="15" fill="rgb(221,155,16)" fg:x="1706" fg:w="8"/><text x="41.6377%" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1241) (12 samples, 0.29%)</title><rect x="42.1155%" y="420" width="0.2911%" height="15" fill="rgb(215,215,53)" fg:x="1736" fg:w="12"/><text x="42.3655%" y="430.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:82) (11 samples, 0.27%)</title><rect x="42.1397%" y="436" width="0.2669%" height="15" fill="rgb(223,4,10)" fg:x="1737" fg:w="11"/><text x="42.3897%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1268) (9 samples, 0.22%)</title><rect x="42.4309%" y="420" width="0.2183%" height="15" fill="rgb(234,103,6)" fg:x="1749" fg:w="9"/><text x="42.6809%" y="430.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:60) (7 samples, 0.17%)</title><rect x="42.4794%" y="436" width="0.1698%" height="15" fill="rgb(227,97,0)" fg:x="1751" fg:w="7"/><text x="42.7294%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1157) (33 samples, 0.80%)</title><rect x="41.9699%" y="388" width="0.8006%" height="15" fill="rgb(234,150,53)" fg:x="1730" fg:w="33"/><text x="42.2199%" y="398.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1129) (27 samples, 0.66%)</title><rect x="42.1155%" y="404" width="0.6550%" height="15" fill="rgb(228,201,54)" fg:x="1736" fg:w="27"/><text x="42.3655%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (40 samples, 0.97%)</title><rect x="41.8244%" y="356" width="0.9704%" height="15" fill="rgb(222,22,37)" fg:x="1724" fg:w="40"/><text x="42.0744%" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (36 samples, 0.87%)</title><rect x="41.9214%" y="372" width="0.8734%" height="15" fill="rgb(237,53,32)" fg:x="1728" fg:w="36"/><text x="42.1714%" y="382.50"></text></g><g><title>_stringify_path (pandas/io/common.py:157) (61 samples, 1.48%)</title><rect x="41.3634%" y="276" width="1.4799%" height="15" fill="rgb(233,25,53)" fg:x="1705" fg:w="61"/><text x="41.6134%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (50 samples, 1.21%)</title><rect x="41.6303%" y="292" width="1.2130%" height="15" fill="rgb(210,40,34)" fg:x="1716" fg:w="50"/><text x="41.8803%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (45 samples, 1.09%)</title><rect x="41.7516%" y="308" width="1.0917%" height="15" fill="rgb(241,220,44)" fg:x="1721" fg:w="45"/><text x="42.0016%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 1.09%)</title><rect x="41.7516%" y="324" width="1.0917%" height="15" fill="rgb(235,28,35)" fg:x="1721" fg:w="45"/><text x="42.0016%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (44 samples, 1.07%)</title><rect x="41.7758%" y="340" width="1.0674%" height="15" fill="rgb(210,56,17)" fg:x="1722" fg:w="44"/><text x="42.0258%" y="350.50"></text></g><g><title>_read (pandas/io/parsers.py:431) (64 samples, 1.55%)</title><rect x="41.3392%" y="244" width="1.5526%" height="15" fill="rgb(224,130,29)" fg:x="1704" fg:w="64"/><text x="41.5892%" y="254.50"></text></g><g><title>_infer_compression (pandas/io/common.py:270) (64 samples, 1.55%)</title><rect x="41.3392%" y="260" width="1.5526%" height="15" fill="rgb(235,212,8)" fg:x="1704" fg:w="64"/><text x="41.5892%" y="270.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1241) (7 samples, 0.17%)</title><rect x="43.2314%" y="420" width="0.1698%" height="15" fill="rgb(223,33,50)" fg:x="1782" fg:w="7"/><text x="43.4814%" y="430.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:82) (6 samples, 0.15%)</title><rect x="43.2557%" y="436" width="0.1456%" height="15" fill="rgb(219,149,13)" fg:x="1783" fg:w="6"/><text x="43.5057%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1268) (8 samples, 0.19%)</title><rect x="43.4013%" y="420" width="0.1941%" height="15" fill="rgb(250,156,29)" fg:x="1789" fg:w="8"/><text x="43.6513%" y="430.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:60) (6 samples, 0.15%)</title><rect x="43.4498%" y="436" width="0.1456%" height="15" fill="rgb(216,193,19)" fg:x="1791" fg:w="6"/><text x="43.6998%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1157) (19 samples, 0.46%)</title><rect x="43.2314%" y="388" width="0.4609%" height="15" fill="rgb(216,135,14)" fg:x="1782" fg:w="19"/><text x="43.4814%" y="398.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1129) (19 samples, 0.46%)</title><rect x="43.2314%" y="404" width="0.4609%" height="15" fill="rgb(241,47,5)" fg:x="1782" fg:w="19"/><text x="43.4814%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (27 samples, 0.66%)</title><rect x="43.0616%" y="356" width="0.6550%" height="15" fill="rgb(233,42,35)" fg:x="1775" fg:w="27"/><text x="43.3116%" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (22 samples, 0.53%)</title><rect x="43.1829%" y="372" width="0.5337%" height="15" fill="rgb(231,13,6)" fg:x="1780" fg:w="22"/><text x="43.4329%" y="382.50"></text></g><g><title>get_filepath_or_buffer (pandas/io/common.py:187) (36 samples, 0.87%)</title><rect x="42.8918%" y="260" width="0.8734%" height="15" fill="rgb(207,181,40)" fg:x="1768" fg:w="36"/><text x="43.1418%" y="270.50"></text></g><g><title>_stringify_path (pandas/io/common.py:157) (36 samples, 0.87%)</title><rect x="42.8918%" y="276" width="0.8734%" height="15" fill="rgb(254,173,49)" fg:x="1768" fg:w="36"/><text x="43.1418%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (33 samples, 0.80%)</title><rect x="42.9646%" y="292" width="0.8006%" height="15" fill="rgb(221,1,38)" fg:x="1771" fg:w="33"/><text x="43.2146%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (30 samples, 0.73%)</title><rect x="43.0374%" y="308" width="0.7278%" height="15" fill="rgb(206,124,46)" fg:x="1774" fg:w="30"/><text x="43.2874%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (30 samples, 0.73%)</title><rect x="43.0374%" y="324" width="0.7278%" height="15" fill="rgb(249,21,11)" fg:x="1774" fg:w="30"/><text x="43.2874%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (29 samples, 0.70%)</title><rect x="43.0616%" y="340" width="0.7035%" height="15" fill="rgb(222,201,40)" fg:x="1775" fg:w="29"/><text x="43.3116%" y="350.50"></text></g><g><title>get_filepath_or_buffer (pandas/io/common.py:189) (10 samples, 0.24%)</title><rect x="43.7652%" y="260" width="0.2426%" height="15" fill="rgb(235,61,29)" fg:x="1804" fg:w="10"/><text x="44.0152%" y="270.50"></text></g><g><title>_is_url (pandas/io/common.py:89) (10 samples, 0.24%)</title><rect x="43.7652%" y="276" width="0.2426%" height="15" fill="rgb(219,207,3)" fg:x="1804" fg:w="10"/><text x="44.0152%" y="286.50"></text></g><g><title>urlparse (urllib/parse.py:371) (8 samples, 0.19%)</title><rect x="43.8137%" y="292" width="0.1941%" height="15" fill="rgb(222,56,46)" fg:x="1806" fg:w="8"/><text x="44.0637%" y="302.50"></text></g><g><title>_read (pandas/io/parsers.py:433) (54 samples, 1.31%)</title><rect x="42.8918%" y="244" width="1.3100%" height="15" fill="rgb(239,76,54)" fg:x="1768" fg:w="54"/><text x="43.1418%" y="254.50"></text></g><g><title>__init__ (pandas/io/parsers.py:813) (14 samples, 0.34%)</title><rect x="44.3717%" y="260" width="0.3396%" height="15" fill="rgb(231,124,27)" fg:x="1829" fg:w="14"/><text x="44.6217%" y="270.50"></text></g><g><title>__init__ (pandas/io/parsers.py:1695) (197 samples, 4.78%)</title><rect x="44.8811%" y="292" width="4.7792%" height="15" fill="rgb(249,195,6)" fg:x="1850" fg:w="197"/><text x="45.1311%" y="302.50">__init..</text></g><g><title>_read (pandas/io/parsers.py:449) (233 samples, 5.65%)</title><rect x="44.2018%" y="244" width="5.6526%" height="15" fill="rgb(237,174,47)" fg:x="1822" fg:w="233"/><text x="44.4518%" y="254.50">_read (..</text></g><g><title>__init__ (pandas/io/parsers.py:818) (212 samples, 5.14%)</title><rect x="44.7113%" y="260" width="5.1431%" height="15" fill="rgb(206,201,31)" fg:x="1843" fg:w="212"/><text x="44.9613%" y="270.50">__init..</text></g><g><title>_make_engine (pandas/io/parsers.py:1049) (212 samples, 5.14%)</title><rect x="44.7113%" y="276" width="5.1431%" height="15" fill="rgb(231,57,52)" fg:x="1843" fg:w="212"/><text x="44.9613%" y="286.50">_make_..</text></g><g><title>&lt;lambda&gt; (extension.py:87) (39 samples, 0.95%)</title><rect x="59.9709%" y="292" width="0.9461%" height="15" fill="rgb(248,177,22)" fg:x="2472" fg:w="39"/><text x="60.2209%" y="302.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1584) (6 samples, 0.15%)</title><rect x="61.0141%" y="292" width="0.1456%" height="15" fill="rgb(215,211,37)" fg:x="2515" fg:w="6"/><text x="61.2641%" y="302.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (7 samples, 0.17%)</title><rect x="61.2082%" y="292" width="0.1698%" height="15" fill="rgb(241,128,51)" fg:x="2523" fg:w="7"/><text x="61.4582%" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:90) (5 samples, 0.12%)</title><rect x="61.2567%" y="308" width="0.1213%" height="15" fill="rgb(227,165,31)" fg:x="2525" fg:w="5"/><text x="61.5067%" y="318.50"></text></g><g><title>read (pandas/io/parsers.py:1839) (480 samples, 11.64%)</title><rect x="49.9030%" y="276" width="11.6448%" height="15" fill="rgb(228,167,24)" fg:x="2057" fg:w="480"/><text x="50.1530%" y="286.50">read (pandas/io/p..</text></g><g><title>read (pandas/io/parsers.py:1069) (495 samples, 12.01%)</title><rect x="49.9030%" y="260" width="12.0087%" height="15" fill="rgb(228,143,12)" fg:x="2057" fg:w="495"/><text x="50.1530%" y="270.50">read (pandas/io/pa..</text></g><g><title>read (pandas/io/parsers.py:1081) (5 samples, 0.12%)</title><rect x="61.9845%" y="260" width="0.1213%" height="15" fill="rgb(249,149,8)" fg:x="2555" fg:w="5"/><text x="62.2345%" y="270.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (22 samples, 0.53%)</title><rect x="62.2271%" y="308" width="0.5337%" height="15" fill="rgb(243,35,44)" fg:x="2565" fg:w="22"/><text x="62.4771%" y="318.50"></text></g><g><title>_init_dict (pandas/core/frame.py:414) (35 samples, 0.85%)</title><rect x="62.2028%" y="292" width="0.8491%" height="15" fill="rgb(246,89,9)" fg:x="2564" fg:w="35"/><text x="62.4528%" y="302.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (12 samples, 0.29%)</title><rect x="62.7608%" y="308" width="0.2911%" height="15" fill="rgb(233,213,13)" fg:x="2587" fg:w="12"/><text x="63.0108%" y="318.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:288) (7 samples, 0.17%)</title><rect x="62.8821%" y="324" width="0.1698%" height="15" fill="rgb(233,141,41)" fg:x="2592" fg:w="7"/><text x="63.1321%" y="334.50"></text></g><g><title>__new__ (pandas/core/indexes/numeric.py:55) (5 samples, 0.12%)</title><rect x="62.9306%" y="340" width="0.1213%" height="15" fill="rgb(239,167,4)" fg:x="2594" fg:w="5"/><text x="63.1806%" y="350.50"></text></g><g><title>_init_dict (pandas/core/frame.py:422) (12 samples, 0.29%)</title><rect x="63.0519%" y="292" width="0.2911%" height="15" fill="rgb(209,217,16)" fg:x="2599" fg:w="12"/><text x="63.3019%" y="302.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/frame.py:423) (11 samples, 0.27%)</title><rect x="63.0762%" y="308" width="0.2669%" height="15" fill="rgb(219,88,35)" fg:x="2600" fg:w="11"/><text x="63.3262%" y="318.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:1696) (10 samples, 0.24%)</title><rect x="63.1004%" y="324" width="0.2426%" height="15" fill="rgb(220,193,23)" fg:x="2601" fg:w="10"/><text x="63.3504%" y="334.50"></text></g><g><title>tolist (pandas/core/base.py:812) (5 samples, 0.12%)</title><rect x="63.3673%" y="324" width="0.1213%" height="15" fill="rgb(230,90,52)" fg:x="2612" fg:w="5"/><text x="63.6173%" y="334.50"></text></g><g><title>_init_dict (pandas/core/frame.py:433) (7 samples, 0.17%)</title><rect x="63.3430%" y="292" width="0.1698%" height="15" fill="rgb(252,106,19)" fg:x="2611" fg:w="7"/><text x="63.5930%" y="302.50"></text></g><g><title>__iter__ (pandas/core/base.py:825) (7 samples, 0.17%)</title><rect x="63.3430%" y="308" width="0.1698%" height="15" fill="rgb(206,74,20)" fg:x="2611" fg:w="7"/><text x="63.5930%" y="318.50"></text></g><g><title>_try_cast (pandas/core/series.py:3157) (10 samples, 0.24%)</title><rect x="63.6099%" y="356" width="0.2426%" height="15" fill="rgb(230,138,44)" fg:x="2622" fg:w="10"/><text x="63.8599%" y="366.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:835) (10 samples, 0.24%)</title><rect x="63.6099%" y="372" width="0.2426%" height="15" fill="rgb(235,182,43)" fg:x="2622" fg:w="10"/><text x="63.8599%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:856) (5 samples, 0.12%)</title><rect x="63.9495%" y="388" width="0.1213%" height="15" fill="rgb(242,16,51)" fg:x="2636" fg:w="5"/><text x="64.1995%" y="398.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (6 samples, 0.15%)</title><rect x="64.0708%" y="404" width="0.1456%" height="15" fill="rgb(248,9,4)" fg:x="2641" fg:w="6"/><text x="64.3208%" y="414.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:864) (7 samples, 0.17%)</title><rect x="64.0708%" y="388" width="0.1698%" height="15" fill="rgb(210,31,22)" fg:x="2641" fg:w="7"/><text x="64.3208%" y="398.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (18 samples, 0.44%)</title><rect x="63.9253%" y="372" width="0.4367%" height="15" fill="rgb(239,54,39)" fg:x="2635" fg:w="18"/><text x="64.1753%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (25 samples, 0.61%)</title><rect x="63.8525%" y="356" width="0.6065%" height="15" fill="rgb(230,99,41)" fg:x="2632" fg:w="25"/><text x="64.1025%" y="366.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (44 samples, 1.07%)</title><rect x="63.6099%" y="340" width="1.0674%" height="15" fill="rgb(253,106,12)" fg:x="2622" fg:w="44"/><text x="63.8599%" y="350.50"></text></g><g><title>_try_cast (pandas/core/series.py:3162) (9 samples, 0.22%)</title><rect x="64.4590%" y="356" width="0.2183%" height="15" fill="rgb(213,46,41)" fg:x="2657" fg:w="9"/><text x="64.7090%" y="366.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6168) (49 samples, 1.19%)</title><rect x="63.5856%" y="308" width="1.1887%" height="15" fill="rgb(215,133,35)" fg:x="2621" fg:w="49"/><text x="63.8356%" y="318.50"></text></g><g><title>_homogenize (pandas/core/frame.py:6477) (49 samples, 1.19%)</title><rect x="63.5856%" y="324" width="1.1887%" height="15" fill="rgb(213,28,5)" fg:x="2621" fg:w="49"/><text x="63.8356%" y="334.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:690) (5 samples, 0.12%)</title><rect x="65.5022%" y="388" width="0.1213%" height="15" fill="rgb(215,77,49)" fg:x="2700" fg:w="5"/><text x="65.7522%" y="398.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4659) (35 samples, 0.85%)</title><rect x="64.8714%" y="340" width="0.8491%" height="15" fill="rgb(248,100,22)" fg:x="2674" fg:w="35"/><text x="65.1214%" y="350.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (26 samples, 0.63%)</title><rect x="65.0898%" y="356" width="0.6308%" height="15" fill="rgb(208,67,9)" fg:x="2683" fg:w="26"/><text x="65.3398%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:310) (16 samples, 0.39%)</title><rect x="65.3324%" y="372" width="0.3882%" height="15" fill="rgb(219,133,21)" fg:x="2693" fg:w="16"/><text x="65.5824%" y="382.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4660) (14 samples, 0.34%)</title><rect x="65.7205%" y="340" width="0.3396%" height="15" fill="rgb(246,46,29)" fg:x="2709" fg:w="14"/><text x="65.9705%" y="350.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (10 samples, 0.24%)</title><rect x="65.8176%" y="356" width="0.2426%" height="15" fill="rgb(246,185,52)" fg:x="2713" fg:w="10"/><text x="66.0676%" y="366.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4666) (7 samples, 0.17%)</title><rect x="66.1329%" y="340" width="0.1698%" height="15" fill="rgb(252,136,11)" fg:x="2726" fg:w="7"/><text x="66.3829%" y="350.50"></text></g><g><title>__init__ (pandas/core/internals.py:114) (7 samples, 0.17%)</title><rect x="66.7637%" y="404" width="0.1698%" height="15" fill="rgb(219,138,53)" fg:x="2752" fg:w="7"/><text x="67.0137%" y="414.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:229) (6 samples, 0.15%)</title><rect x="66.7880%" y="420" width="0.1456%" height="15" fill="rgb(211,51,23)" fg:x="2753" fg:w="6"/><text x="67.0380%" y="430.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (91 samples, 2.21%)</title><rect x="64.8229%" y="324" width="2.2077%" height="15" fill="rgb(247,221,28)" fg:x="2672" fg:w="91"/><text x="65.0729%" y="334.50">c..</text></g><g><title>form_blocks (pandas/core/internals.py:4729) (18 samples, 0.44%)</title><rect x="66.5939%" y="340" width="0.4367%" height="15" fill="rgb(251,222,45)" fg:x="2745" fg:w="18"/><text x="66.8439%" y="350.50"></text></g><g><title>_simple_blockify (pandas/core/internals.py:4765) (15 samples, 0.36%)</title><rect x="66.6667%" y="356" width="0.3639%" height="15" fill="rgb(217,162,53)" fg:x="2748" fg:w="15"/><text x="66.9167%" y="366.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (13 samples, 0.32%)</title><rect x="66.7152%" y="372" width="0.3154%" height="15" fill="rgb(229,93,14)" fg:x="2750" fg:w="13"/><text x="66.9652%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:2082) (11 samples, 0.27%)</title><rect x="66.7637%" y="388" width="0.2669%" height="15" fill="rgb(209,67,49)" fg:x="2752" fg:w="11"/><text x="67.0137%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (5 samples, 0.12%)</title><rect x="67.1761%" y="340" width="0.1213%" height="15" fill="rgb(213,87,29)" fg:x="2769" fg:w="5"/><text x="67.4261%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (222 samples, 5.39%)</title><rect x="62.1786%" y="276" width="5.3857%" height="15" fill="rgb(205,151,52)" fg:x="2563" fg:w="222"/><text x="62.4286%" y="286.50">__init_..</text></g><g><title>_init_dict (pandas/core/frame.py:461) (166 samples, 4.03%)</title><rect x="63.5371%" y="292" width="4.0272%" height="15" fill="rgb(253,215,39)" fg:x="2619" fg:w="166"/><text x="63.7871%" y="302.50">_ini..</text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (113 samples, 2.74%)</title><rect x="64.8229%" y="308" width="2.7414%" height="15" fill="rgb(221,220,41)" fg:x="2672" fg:w="113"/><text x="65.0729%" y="318.50">_a..</text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4638) (22 samples, 0.53%)</title><rect x="67.0306%" y="324" width="0.5337%" height="15" fill="rgb(218,133,21)" fg:x="2763" fg:w="22"/><text x="67.2806%" y="334.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (11 samples, 0.27%)</title><rect x="67.2974%" y="340" width="0.2669%" height="15" fill="rgb(221,193,43)" fg:x="2774" fg:w="11"/><text x="67.5474%" y="350.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (733 samples, 17.78%)</title><rect x="49.8544%" y="244" width="17.7826%" height="15" fill="rgb(240,128,52)" fg:x="2055" fg:w="733"/><text x="50.1044%" y="254.50">_read (pandas/io/parsers.py:..</text></g><g><title>read (pandas/io/parsers.py:1087) (228 samples, 5.53%)</title><rect x="62.1058%" y="260" width="5.5313%" height="15" fill="rgb(253,114,12)" fg:x="2560" fg:w="228"/><text x="62.3558%" y="270.50">read (p..</text></g><g><title>parse_csv_metadata (extension.py:87) (1,103 samples, 26.76%)</title><rect x="41.0966%" y="212" width="26.7589%" height="15" fill="rgb(215,223,47)" fg:x="1694" fg:w="1103"/><text x="41.3466%" y="222.50">parse_csv_metadata (extension.py:87)</text></g><g><title>parser_f (pandas/io/parsers.py:709) (1,096 samples, 26.59%)</title><rect x="41.2664%" y="228" width="26.5890%" height="15" fill="rgb(248,225,23)" fg:x="1701" fg:w="1096"/><text x="41.5164%" y="238.50">parser_f (pandas/io/parsers.py:709)</text></g><g><title>_read (pandas/io/parsers.py:457) (9 samples, 0.22%)</title><rect x="67.6371%" y="244" width="0.2183%" height="15" fill="rgb(250,108,0)" fg:x="2788" fg:w="9"/><text x="67.8871%" y="254.50"></text></g><g><title>close (pandas/io/parsers.py:821) (9 samples, 0.22%)</title><rect x="67.6371%" y="260" width="0.2183%" height="15" fill="rgb(228,208,7)" fg:x="2788" fg:w="9"/><text x="67.8871%" y="270.50"></text></g><g><title>close (pandas/io/parsers.py:1776) (9 samples, 0.22%)</title><rect x="67.6371%" y="276" width="0.2183%" height="15" fill="rgb(244,45,10)" fg:x="2788" fg:w="9"/><text x="67.8871%" y="286.50"></text></g><g><title>parse_csv_metadata (extension.py:88) (447 samples, 10.84%)</title><rect x="67.8554%" y="212" width="10.8443%" height="15" fill="rgb(207,125,25)" fg:x="2797" fg:w="447"/><text x="68.1054%" y="222.50">parse_csv_metada..</text></g><g><title>&lt;genexpr&gt; (extension.py:88) (395 samples, 9.58%)</title><rect x="69.1169%" y="228" width="9.5827%" height="15" fill="rgb(210,195,18)" fg:x="2849" fg:w="395"/><text x="69.3669%" y="238.50">&lt;genexpr&gt; (ext..</text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (5 samples, 0.12%)</title><rect x="79.0150%" y="308" width="0.1213%" height="15" fill="rgb(249,80,12)" fg:x="3257" fg:w="5"/><text x="79.2650%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:968) (8 samples, 0.19%)</title><rect x="78.9665%" y="292" width="0.1941%" height="15" fill="rgb(221,65,9)" fg:x="3255" fg:w="8"/><text x="79.2165%" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1241) (9 samples, 0.22%)</title><rect x="79.6215%" y="420" width="0.2183%" height="15" fill="rgb(235,49,36)" fg:x="3282" fg:w="9"/><text x="79.8715%" y="430.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:82) (7 samples, 0.17%)</title><rect x="79.6701%" y="436" width="0.1698%" height="15" fill="rgb(225,32,20)" fg:x="3284" fg:w="7"/><text x="79.9201%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1268) (6 samples, 0.15%)</title><rect x="79.9127%" y="420" width="0.1456%" height="15" fill="rgb(215,141,46)" fg:x="3294" fg:w="6"/><text x="80.1627%" y="430.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1129) (26 samples, 0.63%)</title><rect x="79.5730%" y="404" width="0.6308%" height="15" fill="rgb(250,160,47)" fg:x="3280" fg:w="26"/><text x="79.8230%" y="414.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1157) (32 samples, 0.78%)</title><rect x="79.4760%" y="388" width="0.7763%" height="15" fill="rgb(216,222,40)" fg:x="3276" fg:w="32"/><text x="79.7260%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (38 samples, 0.92%)</title><rect x="79.3547%" y="356" width="0.9219%" height="15" fill="rgb(234,217,39)" fg:x="3271" fg:w="38"/><text x="79.6047%" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (37 samples, 0.90%)</title><rect x="79.3789%" y="372" width="0.8976%" height="15" fill="rgb(207,178,40)" fg:x="3272" fg:w="37"/><text x="79.6289%" y="382.50"></text></g><g><title>_stringify_path (pandas/io/common.py:157) (58 samples, 1.41%)</title><rect x="78.9423%" y="276" width="1.4071%" height="15" fill="rgb(221,136,13)" fg:x="3254" fg:w="58"/><text x="79.1923%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (49 samples, 1.19%)</title><rect x="79.1606%" y="292" width="1.1887%" height="15" fill="rgb(249,199,10)" fg:x="3263" fg:w="49"/><text x="79.4106%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (49 samples, 1.19%)</title><rect x="79.1606%" y="308" width="1.1887%" height="15" fill="rgb(249,222,13)" fg:x="3263" fg:w="49"/><text x="79.4106%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (49 samples, 1.19%)</title><rect x="79.1606%" y="324" width="1.1887%" height="15" fill="rgb(244,185,38)" fg:x="3263" fg:w="49"/><text x="79.4106%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (44 samples, 1.07%)</title><rect x="79.2819%" y="340" width="1.0674%" height="15" fill="rgb(236,202,9)" fg:x="3268" fg:w="44"/><text x="79.5319%" y="350.50"></text></g><g><title>_infer_compression (pandas/io/common.py:270) (60 samples, 1.46%)</title><rect x="78.9180%" y="260" width="1.4556%" height="15" fill="rgb(250,229,37)" fg:x="3253" fg:w="60"/><text x="79.1680%" y="270.50"></text></g><g><title>_read (pandas/io/parsers.py:431) (64 samples, 1.55%)</title><rect x="78.9180%" y="244" width="1.5526%" height="15" fill="rgb(206,174,23)" fg:x="3253" fg:w="64"/><text x="79.1680%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:968) (6 samples, 0.15%)</title><rect x="80.4949%" y="292" width="0.1456%" height="15" fill="rgb(211,33,43)" fg:x="3318" fg:w="6"/><text x="80.7449%" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1241) (7 samples, 0.17%)</title><rect x="80.8345%" y="420" width="0.1698%" height="15" fill="rgb(245,58,50)" fg:x="3332" fg:w="7"/><text x="81.0845%" y="430.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:82) (7 samples, 0.17%)</title><rect x="80.8345%" y="436" width="0.1698%" height="15" fill="rgb(244,68,36)" fg:x="3332" fg:w="7"/><text x="81.0845%" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1268) (5 samples, 0.12%)</title><rect x="81.0286%" y="420" width="0.1213%" height="15" fill="rgb(232,229,15)" fg:x="3340" fg:w="5"/><text x="81.2786%" y="430.50"></text></g><g><title>get_filepath_or_buffer (pandas/io/common.py:187) (30 samples, 0.73%)</title><rect x="80.4706%" y="260" width="0.7278%" height="15" fill="rgb(254,30,23)" fg:x="3317" fg:w="30"/><text x="80.7206%" y="270.50"></text></g><g><title>_stringify_path (pandas/io/common.py:157) (29 samples, 0.70%)</title><rect x="80.4949%" y="276" width="0.7035%" height="15" fill="rgb(235,160,14)" fg:x="3318" fg:w="29"/><text x="80.7449%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (23 samples, 0.56%)</title><rect x="80.6405%" y="292" width="0.5580%" height="15" fill="rgb(212,155,44)" fg:x="3324" fg:w="23"/><text x="80.8905%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (21 samples, 0.51%)</title><rect x="80.6890%" y="308" width="0.5095%" height="15" fill="rgb(226,2,50)" fg:x="3326" fg:w="21"/><text x="80.9390%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 0.51%)</title><rect x="80.6890%" y="324" width="0.5095%" height="15" fill="rgb(234,177,6)" fg:x="3326" fg:w="21"/><text x="80.9390%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (20 samples, 0.49%)</title><rect x="80.7132%" y="340" width="0.4852%" height="15" fill="rgb(217,24,9)" fg:x="3327" fg:w="20"/><text x="80.9632%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (19 samples, 0.46%)</title><rect x="80.7375%" y="356" width="0.4609%" height="15" fill="rgb(220,13,46)" fg:x="3328" fg:w="19"/><text x="80.9875%" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (19 samples, 0.46%)</title><rect x="80.7375%" y="372" width="0.4609%" height="15" fill="rgb(239,221,27)" fg:x="3328" fg:w="19"/><text x="80.9875%" y="382.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1157) (17 samples, 0.41%)</title><rect x="80.7860%" y="388" width="0.4124%" height="15" fill="rgb(222,198,25)" fg:x="3330" fg:w="17"/><text x="81.0360%" y="398.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1129) (17 samples, 0.41%)</title><rect x="80.7860%" y="404" width="0.4124%" height="15" fill="rgb(211,99,13)" fg:x="3330" fg:w="17"/><text x="81.0360%" y="414.50"></text></g><g><title>urlparse (urllib/parse.py:371) (6 samples, 0.15%)</title><rect x="81.1984%" y="292" width="0.1456%" height="15" fill="rgb(232,111,31)" fg:x="3347" fg:w="6"/><text x="81.4484%" y="302.50"></text></g><g><title>get_filepath_or_buffer (pandas/io/common.py:189) (8 samples, 0.19%)</title><rect x="81.1984%" y="260" width="0.1941%" height="15" fill="rgb(245,82,37)" fg:x="3347" fg:w="8"/><text x="81.4484%" y="270.50"></text></g><g><title>_is_url (pandas/io/common.py:89) (8 samples, 0.19%)</title><rect x="81.1984%" y="276" width="0.1941%" height="15" fill="rgb(227,149,46)" fg:x="3347" fg:w="8"/><text x="81.4484%" y="286.50"></text></g><g><title>_read (pandas/io/parsers.py:433) (43 samples, 1.04%)</title><rect x="80.4706%" y="244" width="1.0432%" height="15" fill="rgb(218,36,50)" fg:x="3317" fg:w="43"/><text x="80.7206%" y="254.50"></text></g><g><title>__init__ (pandas/io/parsers.py:805) (8 samples, 0.19%)</title><rect x="81.8292%" y="260" width="0.1941%" height="15" fill="rgb(226,80,48)" fg:x="3373" fg:w="8"/><text x="82.0792%" y="270.50"></text></g><g><title>__init__ (pandas/io/parsers.py:1681) (8 samples, 0.19%)</title><rect x="82.2416%" y="292" width="0.1941%" height="15" fill="rgb(238,224,15)" fg:x="3390" fg:w="8"/><text x="82.4916%" y="302.50"></text></g><g><title>__init__ (pandas/io/parsers.py:1695) (373 samples, 9.05%)</title><rect x="82.4357%" y="292" width="9.0490%" height="15" fill="rgb(241,136,10)" fg:x="3398" fg:w="373"/><text x="82.6857%" y="302.50">__init__ (pan..</text></g><g><title>_read (pandas/io/parsers.py:449) (409 samples, 9.92%)</title><rect x="81.6109%" y="244" width="9.9224%" height="15" fill="rgb(208,32,45)" fg:x="3364" fg:w="409"/><text x="81.8609%" y="254.50">_read (pandas/..</text></g><g><title>__init__ (pandas/io/parsers.py:818) (387 samples, 9.39%)</title><rect x="82.1446%" y="260" width="9.3886%" height="15" fill="rgb(207,135,9)" fg:x="3386" fg:w="387"/><text x="82.3946%" y="270.50">__init__ (pan..</text></g><g><title>_make_engine (pandas/io/parsers.py:1049) (387 samples, 9.39%)</title><rect x="82.1446%" y="276" width="9.3886%" height="15" fill="rgb(206,86,44)" fg:x="3386" fg:w="387"/><text x="82.3946%" y="286.50">_make_engine ..</text></g><g><title>read (pandas/io/parsers.py:1839) (37 samples, 0.90%)</title><rect x="91.5575%" y="276" width="0.8976%" height="15" fill="rgb(245,177,15)" fg:x="3774" fg:w="37"/><text x="91.8075%" y="286.50"></text></g><g><title>read (pandas/io/parsers.py:1069) (46 samples, 1.12%)</title><rect x="91.5575%" y="260" width="1.1160%" height="15" fill="rgb(206,64,50)" fg:x="3774" fg:w="46"/><text x="91.8075%" y="270.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (17 samples, 0.41%)</title><rect x="92.9646%" y="308" width="0.4124%" height="15" fill="rgb(234,36,40)" fg:x="3832" fg:w="17"/><text x="93.2146%" y="318.50"></text></g><g><title>_init_dict (pandas/core/frame.py:414) (29 samples, 0.70%)</title><rect x="92.9403%" y="292" width="0.7035%" height="15" fill="rgb(213,64,8)" fg:x="3831" fg:w="29"/><text x="93.1903%" y="302.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (11 samples, 0.27%)</title><rect x="93.3770%" y="308" width="0.2669%" height="15" fill="rgb(210,75,36)" fg:x="3849" fg:w="11"/><text x="93.6270%" y="318.50"></text></g><g><title>_init_dict (pandas/core/frame.py:422) (10 samples, 0.24%)</title><rect x="93.6439%" y="292" width="0.2426%" height="15" fill="rgb(229,88,21)" fg:x="3860" fg:w="10"/><text x="93.8939%" y="302.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/frame.py:423) (10 samples, 0.24%)</title><rect x="93.6439%" y="308" width="0.2426%" height="15" fill="rgb(252,204,47)" fg:x="3860" fg:w="10"/><text x="93.8939%" y="318.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:1696) (9 samples, 0.22%)</title><rect x="93.6681%" y="324" width="0.2183%" height="15" fill="rgb(208,77,27)" fg:x="3861" fg:w="9"/><text x="93.9181%" y="334.50"></text></g><g><title>tolist (pandas/core/base.py:812) (5 samples, 0.12%)</title><rect x="93.8865%" y="324" width="0.1213%" height="15" fill="rgb(221,76,26)" fg:x="3870" fg:w="5"/><text x="94.1365%" y="334.50"></text></g><g><title>_init_dict (pandas/core/frame.py:433) (6 samples, 0.15%)</title><rect x="93.8865%" y="292" width="0.1456%" height="15" fill="rgb(225,139,18)" fg:x="3870" fg:w="6"/><text x="94.1365%" y="302.50"></text></g><g><title>__iter__ (pandas/core/base.py:825) (6 samples, 0.15%)</title><rect x="93.8865%" y="308" width="0.1456%" height="15" fill="rgb(230,137,11)" fg:x="3870" fg:w="6"/><text x="94.1365%" y="318.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (12 samples, 0.29%)</title><rect x="94.1776%" y="356" width="0.2911%" height="15" fill="rgb(212,28,1)" fg:x="3882" fg:w="12"/><text x="94.4276%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (10 samples, 0.24%)</title><rect x="94.2261%" y="372" width="0.2426%" height="15" fill="rgb(248,164,17)" fg:x="3884" fg:w="10"/><text x="94.4761%" y="382.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6168) (18 samples, 0.44%)</title><rect x="94.0563%" y="308" width="0.4367%" height="15" fill="rgb(222,171,42)" fg:x="3877" fg:w="18"/><text x="94.3063%" y="318.50"></text></g><g><title>_homogenize (pandas/core/frame.py:6477) (15 samples, 0.36%)</title><rect x="94.1291%" y="324" width="0.3639%" height="15" fill="rgb(243,84,45)" fg:x="3880" fg:w="15"/><text x="94.3791%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (13 samples, 0.32%)</title><rect x="94.1776%" y="340" width="0.3154%" height="15" fill="rgb(252,49,23)" fg:x="3882" fg:w="13"/><text x="94.4276%" y="350.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (5 samples, 0.12%)</title><rect x="94.9054%" y="372" width="0.1213%" height="15" fill="rgb(215,19,7)" fg:x="3912" fg:w="5"/><text x="95.1554%" y="382.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:690) (8 samples, 0.19%)</title><rect x="95.0995%" y="388" width="0.1941%" height="15" fill="rgb(238,81,41)" fg:x="3920" fg:w="8"/><text x="95.3495%" y="398.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4659) (34 samples, 0.82%)</title><rect x="94.5172%" y="340" width="0.8248%" height="15" fill="rgb(210,199,37)" fg:x="3896" fg:w="34"/><text x="94.7672%" y="350.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (24 samples, 0.58%)</title><rect x="94.7598%" y="356" width="0.5822%" height="15" fill="rgb(244,192,49)" fg:x="3906" fg:w="24"/><text x="95.0098%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:310) (12 samples, 0.29%)</title><rect x="95.0509%" y="372" width="0.2911%" height="15" fill="rgb(226,211,11)" fg:x="3918" fg:w="12"/><text x="95.3009%" y="382.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:544) (5 samples, 0.12%)</title><rect x="95.6332%" y="388" width="0.1213%" height="15" fill="rgb(236,162,54)" fg:x="3942" fg:w="5"/><text x="95.8832%" y="398.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (6 samples, 0.15%)</title><rect x="95.6332%" y="372" width="0.1456%" height="15" fill="rgb(220,229,9)" fg:x="3942" fg:w="6"/><text x="95.8832%" y="382.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:319) (7 samples, 0.17%)</title><rect x="95.8030%" y="372" width="0.1698%" height="15" fill="rgb(250,87,22)" fg:x="3949" fg:w="7"/><text x="96.0530%" y="382.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4660) (34 samples, 0.82%)</title><rect x="95.3421%" y="340" width="0.8248%" height="15" fill="rgb(239,43,17)" fg:x="3930" fg:w="34"/><text x="95.5921%" y="350.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (28 samples, 0.68%)</title><rect x="95.4876%" y="356" width="0.6793%" height="15" fill="rgb(231,177,25)" fg:x="3936" fg:w="28"/><text x="95.7376%" y="366.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:336) (6 samples, 0.15%)</title><rect x="96.0213%" y="372" width="0.1456%" height="15" fill="rgb(219,179,1)" fg:x="3958" fg:w="6"/><text x="96.2713%" y="382.50"></text></g><g><title>array_equal (&lt;__array_function__ internals&gt;:6) (6 samples, 0.15%)</title><rect x="96.0213%" y="388" width="0.1456%" height="15" fill="rgb(238,219,53)" fg:x="3958" fg:w="6"/><text x="96.2713%" y="398.50"></text></g><g><title>_simple_blockify (pandas/core/internals.py:4759) (7 samples, 0.17%)</title><rect x="96.3852%" y="356" width="0.1698%" height="15" fill="rgb(232,167,36)" fg:x="3973" fg:w="7"/><text x="96.6352%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:114) (7 samples, 0.17%)</title><rect x="96.6764%" y="404" width="0.1698%" height="15" fill="rgb(244,19,51)" fg:x="3985" fg:w="7"/><text x="96.9264%" y="414.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:229) (5 samples, 0.12%)</title><rect x="96.7249%" y="420" width="0.1213%" height="15" fill="rgb(224,6,22)" fg:x="3987" fg:w="5"/><text x="96.9749%" y="430.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (98 samples, 2.38%)</title><rect x="94.5172%" y="324" width="2.3775%" height="15" fill="rgb(224,145,5)" fg:x="3896" fg:w="98"/><text x="94.7672%" y="334.50">cr..</text></g><g><title>form_blocks (pandas/core/internals.py:4729) (21 samples, 0.51%)</title><rect x="96.3852%" y="340" width="0.5095%" height="15" fill="rgb(234,130,49)" fg:x="3973" fg:w="21"/><text x="96.6352%" y="350.50"></text></g><g><title>_simple_blockify (pandas/core/internals.py:4765) (14 samples, 0.34%)</title><rect x="96.5551%" y="356" width="0.3396%" height="15" fill="rgb(254,6,2)" fg:x="3980" fg:w="14"/><text x="96.8051%" y="366.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (11 samples, 0.27%)</title><rect x="96.6279%" y="372" width="0.2669%" height="15" fill="rgb(208,96,46)" fg:x="3983" fg:w="11"/><text x="96.8779%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:2082) (10 samples, 0.24%)</title><rect x="96.6521%" y="388" width="0.2426%" height="15" fill="rgb(239,3,39)" fg:x="3984" fg:w="10"/><text x="96.9021%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (6 samples, 0.15%)</title><rect x="97.0888%" y="340" width="0.1456%" height="15" fill="rgb(233,210,1)" fg:x="4002" fg:w="6"/><text x="97.3388%" y="350.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (5 samples, 0.12%)</title><rect x="97.1131%" y="356" width="0.1213%" height="15" fill="rgb(244,137,37)" fg:x="4003" fg:w="5"/><text x="97.3631%" y="366.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (185 samples, 4.49%)</title><rect x="92.8918%" y="276" width="4.4881%" height="15" fill="rgb(240,136,2)" fg:x="3829" fg:w="185"/><text x="93.1418%" y="286.50">__ini..</text></g><g><title>_init_dict (pandas/core/frame.py:461) (137 samples, 3.32%)</title><rect x="94.0563%" y="292" width="3.3236%" height="15" fill="rgb(239,18,37)" fg:x="3877" fg:w="137"/><text x="94.3063%" y="302.50">_in..</text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (118 samples, 2.86%)</title><rect x="94.5172%" y="308" width="2.8627%" height="15" fill="rgb(218,185,22)" fg:x="3896" fg:w="118"/><text x="94.7672%" y="318.50">_a..</text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4638) (20 samples, 0.49%)</title><rect x="96.8947%" y="324" width="0.4852%" height="15" fill="rgb(225,218,4)" fg:x="3994" fg:w="20"/><text x="97.1447%" y="334.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (6 samples, 0.15%)</title><rect x="97.2344%" y="340" width="0.1456%" height="15" fill="rgb(230,182,32)" fg:x="4008" fg:w="6"/><text x="97.4844%" y="350.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (244 samples, 5.92%)</title><rect x="91.5332%" y="244" width="5.9195%" height="15" fill="rgb(242,56,43)" fg:x="3773" fg:w="244"/><text x="91.7832%" y="254.50">_read (p..</text></g><g><title>read (pandas/io/parsers.py:1087) (191 samples, 4.63%)</title><rect x="92.8190%" y="260" width="4.6337%" height="15" fill="rgb(233,99,24)" fg:x="3826" fg:w="191"/><text x="93.0690%" y="270.50">read ..</text></g><g><title>parse_csv_metadata (extension.py:91) (783 samples, 19.00%)</title><rect x="78.6997%" y="212" width="18.9956%" height="15" fill="rgb(234,209,42)" fg:x="3244" fg:w="783"/><text x="78.9497%" y="222.50">parse_csv_metadata (extension...</text></g><g><title>parser_f (pandas/io/parsers.py:709) (778 samples, 18.87%)</title><rect x="78.8210%" y="228" width="18.8743%" height="15" fill="rgb(227,7,12)" fg:x="3249" fg:w="778"/><text x="79.0710%" y="238.50">parser_f (pandas/io/parsers.p..</text></g><g><title>_read (pandas/io/parsers.py:457) (10 samples, 0.24%)</title><rect x="97.4527%" y="244" width="0.2426%" height="15" fill="rgb(245,203,43)" fg:x="4017" fg:w="10"/><text x="97.7027%" y="254.50"></text></g><g><title>close (pandas/io/parsers.py:821) (10 samples, 0.24%)</title><rect x="97.4527%" y="260" width="0.2426%" height="15" fill="rgb(238,205,33)" fg:x="4017" fg:w="10"/><text x="97.7027%" y="270.50"></text></g><g><title>close (pandas/io/parsers.py:1776) (10 samples, 0.24%)</title><rect x="97.4527%" y="276" width="0.2426%" height="15" fill="rgb(231,56,7)" fg:x="4017" fg:w="10"/><text x="97.7027%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1363) (5 samples, 0.12%)</title><rect x="97.8166%" y="228" width="0.1213%" height="15" fill="rgb(244,186,29)" fg:x="4032" fg:w="5"/><text x="98.0666%" y="238.50"></text></g><g><title>get (pandas/core/internals.py:3843) (5 samples, 0.12%)</title><rect x="98.0349%" y="308" width="0.1213%" height="15" fill="rgb(234,111,31)" fg:x="4041" fg:w="5"/><text x="98.2849%" y="318.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (5 samples, 0.12%)</title><rect x="98.0349%" y="324" width="0.1213%" height="15" fill="rgb(241,149,10)" fg:x="4041" fg:w="5"/><text x="98.2849%" y="334.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (17 samples, 0.41%)</title><rect x="98.0349%" y="292" width="0.4124%" height="15" fill="rgb(249,206,44)" fg:x="4041" fg:w="17"/><text x="98.2849%" y="302.50"></text></g><g><title>get (pandas/core/internals.py:3854) (12 samples, 0.29%)</title><rect x="98.1562%" y="308" width="0.2911%" height="15" fill="rgb(251,153,30)" fg:x="4046" fg:w="12"/><text x="98.4062%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (13 samples, 0.32%)</title><rect x="98.4474%" y="292" width="0.3154%" height="15" fill="rgb(239,152,38)" fg:x="4058" fg:w="13"/><text x="98.6974%" y="302.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (12 samples, 0.29%)</title><rect x="98.4716%" y="308" width="0.2911%" height="15" fill="rgb(249,139,47)" fg:x="4059" fg:w="12"/><text x="98.7216%" y="318.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:2503) (10 samples, 0.24%)</title><rect x="98.5201%" y="324" width="0.2426%" height="15" fill="rgb(244,64,35)" fg:x="4061" fg:w="10"/><text x="98.7701%" y="334.50"></text></g><g><title>from_array (pandas/core/series.py:282) (10 samples, 0.24%)</title><rect x="98.5201%" y="340" width="0.2426%" height="15" fill="rgb(216,46,15)" fg:x="4061" fg:w="10"/><text x="98.7701%" y="350.50"></text></g><g><title>_get_value (pandas/core/frame.py:1978) (34 samples, 0.82%)</title><rect x="97.9622%" y="260" width="0.8248%" height="15" fill="rgb(250,74,19)" fg:x="4038" fg:w="34"/><text x="98.2122%" y="270.50"></text></g><g><title>_iget_item_cache (pandas/core/generic.py:1866) (34 samples, 0.82%)</title><rect x="97.9622%" y="276" width="0.8248%" height="15" fill="rgb(249,42,33)" fg:x="4038" fg:w="34"/><text x="98.2122%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1364) (41 samples, 0.99%)</title><rect x="97.9379%" y="228" width="0.9947%" height="15" fill="rgb(242,149,17)" fg:x="4037" fg:w="41"/><text x="98.1879%" y="238.50"></text></g><g><title>_getitem_scalar (pandas/core/indexing.py:1704) (41 samples, 0.99%)</title><rect x="97.9379%" y="244" width="0.9947%" height="15" fill="rgb(244,29,21)" fg:x="4037" fg:w="41"/><text x="98.1879%" y="254.50"></text></g><g><title>_get_value (pandas/core/frame.py:1979) (6 samples, 0.15%)</title><rect x="98.7870%" y="260" width="0.1456%" height="15" fill="rgb(220,130,37)" fg:x="4072" fg:w="6"/><text x="99.0370%" y="270.50"></text></g><g><title>parse_csv_metadata (extension.py:95) (50 samples, 1.21%)</title><rect x="97.7438%" y="212" width="1.2130%" height="15" fill="rgb(211,67,2)" fg:x="4029" fg:w="50"/><text x="97.9938%" y="222.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (9 samples, 0.22%)</title><rect x="99.0296%" y="292" width="0.2183%" height="15" fill="rgb(235,68,52)" fg:x="4082" fg:w="9"/><text x="99.2796%" y="302.50"></text></g><g><title>get (pandas/core/internals.py:3854) (6 samples, 0.15%)</title><rect x="99.1024%" y="308" width="0.1456%" height="15" fill="rgb(246,142,3)" fg:x="4085" fg:w="6"/><text x="99.3524%" y="318.50"></text></g><g><title>_get_value (pandas/core/frame.py:1978) (14 samples, 0.34%)</title><rect x="99.0053%" y="260" width="0.3396%" height="15" fill="rgb(241,25,7)" fg:x="4081" fg:w="14"/><text x="99.2553%" y="270.50"></text></g><g><title>_iget_item_cache (pandas/core/generic.py:1866) (14 samples, 0.34%)</title><rect x="99.0053%" y="276" width="0.3396%" height="15" fill="rgb(242,119,39)" fg:x="4081" fg:w="14"/><text x="99.2553%" y="286.50"></text></g><g><title>parse_csv_metadata (extension.py:96) (17 samples, 0.41%)</title><rect x="98.9568%" y="212" width="0.4124%" height="15" fill="rgb(241,98,45)" fg:x="4079" fg:w="17"/><text x="99.2068%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1364) (15 samples, 0.36%)</title><rect x="99.0053%" y="228" width="0.3639%" height="15" fill="rgb(254,28,30)" fg:x="4081" fg:w="15"/><text x="99.2553%" y="238.50"></text></g><g><title>_getitem_scalar (pandas/core/indexing.py:1704) (15 samples, 0.36%)</title><rect x="99.0053%" y="244" width="0.3639%" height="15" fill="rgb(241,142,54)" fg:x="4081" fg:w="15"/><text x="99.2553%" y="254.50"></text></g><g><title>parse_csv_metadata (extension.py:97) (6 samples, 0.15%)</title><rect x="99.3692%" y="212" width="0.1456%" height="15" fill="rgb(222,85,15)" fg:x="4096" fg:w="6"/><text x="99.6192%" y="222.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (7 samples, 0.17%)</title><rect x="99.5391%" y="292" width="0.1698%" height="15" fill="rgb(210,85,47)" fg:x="4103" fg:w="7"/><text x="99.7891%" y="302.50"></text></g><g><title>get (pandas/core/internals.py:3854) (5 samples, 0.12%)</title><rect x="99.5876%" y="308" width="0.1213%" height="15" fill="rgb(224,206,25)" fg:x="4105" fg:w="5"/><text x="99.8376%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (7 samples, 0.17%)</title><rect x="99.7089%" y="292" width="0.1698%" height="15" fill="rgb(243,201,19)" fg:x="4110" fg:w="7"/><text x="99.9589%" y="302.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (5 samples, 0.12%)</title><rect x="99.7574%" y="308" width="0.1213%" height="15" fill="rgb(236,59,4)" fg:x="4112" fg:w="5"/><text x="100.0074%" y="318.50"></text></g><g><title>_get_value (pandas/core/frame.py:1978) (17 samples, 0.41%)</title><rect x="99.5391%" y="260" width="0.4124%" height="15" fill="rgb(254,179,45)" fg:x="4103" fg:w="17"/><text x="99.7891%" y="270.50"></text></g><g><title>_iget_item_cache (pandas/core/generic.py:1866) (17 samples, 0.41%)</title><rect x="99.5391%" y="276" width="0.4124%" height="15" fill="rgb(226,14,10)" fg:x="4103" fg:w="17"/><text x="99.7891%" y="286.50"></text></g><g><title>all (4,122 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="4122"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (zipline:8) (4,122 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(235,35,32)" fg:x="0" fg:w="4122"/><text x="0.2500%" y="78.50">&lt;module&gt; (zipline:8)</text></g><g><title>__call__ (click/core.py:1137) (4,122 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="4122"/><text x="0.2500%" y="94.50">__call__ (click/core.py:1137)</text></g><g><title>main (click/core.py:1062) (4,122 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="4122"/><text x="0.2500%" y="110.50">main (click/core.py:1062)</text></g><g><title>invoke (click/core.py:1668) (4,088 samples, 99.18%)</title><rect x="0.8248%" y="116" width="99.1752%" height="15" fill="rgb(227,98,0)" fg:x="34" fg:w="4088"/><text x="1.0748%" y="126.50">invoke (click/core.py:1668)</text></g><g><title>invoke (click/core.py:1404) (4,088 samples, 99.18%)</title><rect x="0.8248%" y="132" width="99.1752%" height="15" fill="rgb(207,7,3)" fg:x="34" fg:w="4088"/><text x="1.0748%" y="142.50">invoke (click/core.py:1404)</text></g><g><title>invoke (click/core.py:763) (4,088 samples, 99.18%)</title><rect x="0.8248%" y="148" width="99.1752%" height="15" fill="rgb(206,98,19)" fg:x="34" fg:w="4088"/><text x="1.0748%" y="158.50">invoke (click/core.py:763)</text></g><g><title>ingest (zipline/__main__.py:385) (4,088 samples, 99.18%)</title><rect x="0.8248%" y="164" width="99.1752%" height="15" fill="rgb(217,5,26)" fg:x="34" fg:w="4088"/><text x="1.0748%" y="174.50">ingest (zipline/__main__.py:385)</text></g><g><title>ingest (zipline/data/bundles/core.py:443) (4,080 samples, 98.98%)</title><rect x="1.0189%" y="180" width="98.9811%" height="15" fill="rgb(235,190,38)" fg:x="42" fg:w="4080"/><text x="1.2689%" y="190.50">ingest (zipline/data/bundles/core.py:443)</text></g><g><title>ingest_bundle (extension.py:38) (4,080 samples, 98.98%)</title><rect x="1.0189%" y="196" width="98.9811%" height="15" fill="rgb(247,86,24)" fg:x="42" fg:w="4080"/><text x="1.2689%" y="206.50">ingest_bundle (extension.py:38)</text></g><g><title>parse_csv_metadata (extension.py:98) (20 samples, 0.49%)</title><rect x="99.5148%" y="212" width="0.4852%" height="15" fill="rgb(205,101,16)" fg:x="4102" fg:w="20"/><text x="99.7648%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1364) (19 samples, 0.46%)</title><rect x="99.5391%" y="228" width="0.4609%" height="15" fill="rgb(246,168,33)" fg:x="4103" fg:w="19"/><text x="99.7891%" y="238.50"></text></g><g><title>_getitem_scalar (pandas/core/indexing.py:1704) (19 samples, 0.46%)</title><rect x="99.5391%" y="244" width="0.4609%" height="15" fill="rgb(231,114,1)" fg:x="4103" fg:w="19"/><text x="99.7891%" y="254.50"></text></g></svg></svg>