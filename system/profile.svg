<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="586" onload="init(evt)" viewBox="0 0 1200 586" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="586" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o /root/work/trade/system/profile.svg --pid 1001</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="575.00"> </text><svg id="frames" x="10" width="1180" total_samples="4528"><g><title>_strptime_datetime (_strptime.py:565) (6 samples, 0.13%)</title><rect x="0.0663%" y="244" width="0.1325%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="6"/><text x="0.3163%" y="254.50"></text></g><g><title>parse_api_tradedate (extension.py:243) (7 samples, 0.15%)</title><rect x="0.0663%" y="228" width="0.1546%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="7"/><text x="0.3163%" y="238.50"></text></g><g><title>&lt;module&gt; (extension.py:310) (13 samples, 0.29%)</title><rect x="0.0000%" y="212" width="0.2871%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="13"/><text x="0.2500%" y="222.50"></text></g><g><title>wrapper (pandas/tseries/offsets.py:69) (9 samples, 0.20%)</title><rect x="0.3534%" y="340" width="0.1988%" height="15" fill="rgb(248,212,6)" fg:x="16" fg:w="9"/><text x="0.6034%" y="350.50"></text></g><g><title>__init__ (trading_calendars/trading_calendar.py:109) (14 samples, 0.31%)</title><rect x="0.3313%" y="228" width="0.3092%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="14"/><text x="0.5813%" y="238.50"></text></g><g><title>date_range (pandas/core/indexes/datetimes.py:2057) (14 samples, 0.31%)</title><rect x="0.3313%" y="244" width="0.3092%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="14"/><text x="0.5813%" y="254.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (14 samples, 0.31%)</title><rect x="0.3313%" y="260" width="0.3092%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="14"/><text x="0.5813%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:324) (14 samples, 0.31%)</title><rect x="0.3313%" y="276" width="0.3092%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="14"/><text x="0.5813%" y="286.50"></text></g><g><title>_generate (pandas/core/indexes/datetimes.py:531) (14 samples, 0.31%)</title><rect x="0.3313%" y="292" width="0.3092%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="14"/><text x="0.5813%" y="302.50"></text></g><g><title>_generate_regular_range (pandas/core/indexes/datetimes.py:2009) (14 samples, 0.31%)</title><rect x="0.3313%" y="308" width="0.3092%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="14"/><text x="0.5813%" y="318.50"></text></g><g><title>generate_range (pandas/tseries/offsets.py:2971) (13 samples, 0.29%)</title><rect x="0.3534%" y="324" width="0.2871%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="13"/><text x="0.6034%" y="334.50"></text></g><g><title>__init__ (trading_calendars/trading_calendar.py:189) (5 samples, 0.11%)</title><rect x="0.6405%" y="228" width="0.1104%" height="15" fill="rgb(240,193,28)" fg:x="29" fg:w="5"/><text x="0.8905%" y="238.50"></text></g><g><title>__get__ (trading_calendars/utils/memoize.py:49) (5 samples, 0.11%)</title><rect x="0.6405%" y="244" width="0.1104%" height="15" fill="rgb(216,20,37)" fg:x="29" fg:w="5"/><text x="0.8905%" y="254.50"></text></g><g><title>all_minutes (trading_calendars/trading_calendar.py:942) (5 samples, 0.11%)</title><rect x="0.6405%" y="260" width="0.1104%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="5"/><text x="0.8905%" y="270.50"></text></g><g><title>invoke (click/core.py:1665) (35 samples, 0.77%)</title><rect x="0.0000%" y="116" width="0.7730%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="35"/><text x="0.2500%" y="126.50"></text></g><g><title>invoke (click/core.py:1404) (35 samples, 0.77%)</title><rect x="0.0000%" y="132" width="0.7730%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="35"/><text x="0.2500%" y="142.50"></text></g><g><title>invoke (click/core.py:763) (35 samples, 0.77%)</title><rect x="0.0000%" y="148" width="0.7730%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="35"/><text x="0.2500%" y="158.50"></text></g><g><title>new_func (click/decorators.py:26) (35 samples, 0.77%)</title><rect x="0.0000%" y="164" width="0.7730%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="35"/><text x="0.2500%" y="174.50"></text></g><g><title>main (zipline/__main__.py:60) (35 samples, 0.77%)</title><rect x="0.0000%" y="180" width="0.7730%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="35"/><text x="0.2500%" y="190.50"></text></g><g><title>load_extensions (zipline/utils/run_algo.py:280) (35 samples, 0.77%)</title><rect x="0.0000%" y="196" width="0.7730%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="35"/><text x="0.2500%" y="206.50"></text></g><g><title>&lt;module&gt; (extension.py:334) (20 samples, 0.44%)</title><rect x="0.3313%" y="212" width="0.4417%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="20"/><text x="0.5813%" y="222.50"></text></g><g><title>__init__ (zipline/data/minute_bars.py:469) (11 samples, 0.24%)</title><rect x="0.7730%" y="196" width="0.2429%" height="15" fill="rgb(235,183,28)" fg:x="35" fg:w="11"/><text x="1.0230%" y="206.50"></text></g><g><title>_calc_minute_index (zipline/data/minute_bars.py:79) (8 samples, 0.18%)</title><rect x="0.8392%" y="212" width="0.1767%" height="15" fill="rgb(221,5,38)" fg:x="38" fg:w="8"/><text x="1.0892%" y="222.50"></text></g><g><title>ingest (zipline/data/bundles/core.py:410) (13 samples, 0.29%)</title><rect x="0.7730%" y="180" width="0.2871%" height="15" fill="rgb(247,18,42)" fg:x="35" fg:w="13"/><text x="1.0230%" y="190.50"></text></g><g><title>parse_csv_metadata (extension.py:117) (6 samples, 0.13%)</title><rect x="1.0601%" y="212" width="0.1325%" height="15" fill="rgb(241,131,45)" fg:x="48" fg:w="6"/><text x="1.3101%" y="222.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (9 samples, 0.20%)</title><rect x="1.5018%" y="308" width="0.1988%" height="15" fill="rgb(249,31,29)" fg:x="68" fg:w="9"/><text x="1.7518%" y="318.50"></text></g><g><title>get (pandas/core/internals.py:3854) (7 samples, 0.15%)</title><rect x="1.5459%" y="324" width="0.1546%" height="15" fill="rgb(225,111,53)" fg:x="70" fg:w="7"/><text x="1.7959%" y="334.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (7 samples, 0.15%)</title><rect x="1.7005%" y="308" width="0.1546%" height="15" fill="rgb(238,160,17)" fg:x="77" fg:w="7"/><text x="1.9505%" y="318.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (5 samples, 0.11%)</title><rect x="1.7447%" y="324" width="0.1104%" height="15" fill="rgb(214,148,48)" fg:x="79" fg:w="5"/><text x="1.9947%" y="334.50"></text></g><g><title>setter (pandas/core/indexing.py:516) (20 samples, 0.44%)</title><rect x="1.4797%" y="260" width="0.4417%" height="15" fill="rgb(232,36,49)" fg:x="67" fg:w="20"/><text x="1.7297%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (19 samples, 0.42%)</title><rect x="1.5018%" y="276" width="0.4196%" height="15" fill="rgb(209,103,24)" fg:x="68" fg:w="19"/><text x="1.7518%" y="286.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (19 samples, 0.42%)</title><rect x="1.5018%" y="292" width="0.4196%" height="15" fill="rgb(229,88,8)" fg:x="68" fg:w="19"/><text x="1.7518%" y="302.50"></text></g><g><title>copy (pandas/core/generic.py:4026) (9 samples, 0.20%)</title><rect x="1.9435%" y="276" width="0.1988%" height="15" fill="rgb(213,181,19)" fg:x="88" fg:w="9"/><text x="2.1935%" y="286.50"></text></g><g><title>copy (pandas/core/internals.py:3664) (5 samples, 0.11%)</title><rect x="2.0318%" y="292" width="0.1104%" height="15" fill="rgb(254,191,54)" fg:x="92" fg:w="5"/><text x="2.2818%" y="302.50"></text></g><g><title>setter (pandas/core/indexing.py:532) (11 samples, 0.24%)</title><rect x="1.9435%" y="260" width="0.2429%" height="15" fill="rgb(241,83,37)" fg:x="88" fg:w="11"/><text x="2.1935%" y="270.50"></text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:110) (6 samples, 0.13%)</title><rect x="2.3631%" y="356" width="0.1325%" height="15" fill="rgb(233,36,39)" fg:x="107" fg:w="6"/><text x="2.6131%" y="366.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (5 samples, 0.11%)</title><rect x="2.3852%" y="372" width="0.1104%" height="15" fill="rgb(226,3,54)" fg:x="108" fg:w="5"/><text x="2.6352%" y="382.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:3000) (5 samples, 0.11%)</title><rect x="2.3852%" y="388" width="0.1104%" height="15" fill="rgb(245,192,40)" fg:x="108" fg:w="5"/><text x="2.6352%" y="398.50"></text></g><g><title>setitem (pandas/core/internals.py:904) (18 samples, 0.40%)</title><rect x="2.3189%" y="308" width="0.3975%" height="15" fill="rgb(238,167,29)" fg:x="105" fg:w="18"/><text x="2.5689%" y="318.50"></text></g><g><title>_try_coerce_and_cast_result (pandas/core/internals.py:711) (18 samples, 0.40%)</title><rect x="2.3189%" y="324" width="0.3975%" height="15" fill="rgb(232,182,51)" fg:x="105" fg:w="18"/><text x="2.5689%" y="334.50"></text></g><g><title>_try_cast_result (pandas/core/internals.py:691) (16 samples, 0.35%)</title><rect x="2.3631%" y="340" width="0.3534%" height="15" fill="rgb(231,60,39)" fg:x="107" fg:w="16"/><text x="2.6131%" y="350.50"></text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:82) (9 samples, 0.20%)</title><rect x="2.5177%" y="356" width="0.1988%" height="15" fill="rgb(208,69,12)" fg:x="114" fg:w="9"/><text x="2.7677%" y="366.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (25 samples, 0.55%)</title><rect x="2.2085%" y="292" width="0.5521%" height="15" fill="rgb(235,93,37)" fg:x="100" fg:w="25"/><text x="2.4585%" y="302.50"></text></g><g><title>setter (pandas/core/indexing.py:533) (32 samples, 0.71%)</title><rect x="2.1864%" y="260" width="0.7067%" height="15" fill="rgb(213,116,39)" fg:x="99" fg:w="32"/><text x="2.4364%" y="270.50"></text></g><g><title>setitem (pandas/core/internals.py:3441) (32 samples, 0.71%)</title><rect x="2.1864%" y="276" width="0.7067%" height="15" fill="rgb(222,207,29)" fg:x="99" fg:w="32"/><text x="2.4364%" y="286.50"></text></g><g><title>_set_item (pandas/core/frame.py:2585) (6 samples, 0.13%)</title><rect x="2.9814%" y="292" width="0.1325%" height="15" fill="rgb(206,96,30)" fg:x="135" fg:w="6"/><text x="3.2314%" y="302.50"></text></g><g><title>set (pandas/core/internals.py:3984) (6 samples, 0.13%)</title><rect x="3.3127%" y="324" width="0.1325%" height="15" fill="rgb(218,138,4)" fg:x="150" fg:w="6"/><text x="3.5627%" y="334.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (24 samples, 0.53%)</title><rect x="3.1140%" y="292" width="0.5300%" height="15" fill="rgb(250,191,14)" fg:x="141" fg:w="24"/><text x="3.3640%" y="302.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (24 samples, 0.53%)</title><rect x="3.1140%" y="308" width="0.5300%" height="15" fill="rgb(239,60,40)" fg:x="141" fg:w="24"/><text x="3.3640%" y="318.50"></text></g><g><title>set (pandas/core/internals.py:3988) (5 samples, 0.11%)</title><rect x="3.5336%" y="324" width="0.1104%" height="15" fill="rgb(206,27,48)" fg:x="160" fg:w="5"/><text x="3.7836%" y="334.50"></text></g><g><title>parse_csv_metadata (extension.py:130) (105 samples, 2.32%)</title><rect x="1.3693%" y="212" width="2.3189%" height="15" fill="rgb(225,35,8)" fg:x="62" fg:w="105"/><text x="1.6193%" y="222.50">p..</text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (103 samples, 2.27%)</title><rect x="1.4134%" y="228" width="2.2747%" height="15" fill="rgb(250,213,24)" fg:x="64" fg:w="103"/><text x="1.6634%" y="238.50">_..</text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:603) (101 samples, 2.23%)</title><rect x="1.4576%" y="244" width="2.2306%" height="15" fill="rgb(247,123,22)" fg:x="66" fg:w="101"/><text x="1.7076%" y="254.50">_..</text></g><g><title>setter (pandas/core/indexing.py:537) (35 samples, 0.77%)</title><rect x="2.9152%" y="260" width="0.7730%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="35"/><text x="3.1652%" y="270.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (33 samples, 0.73%)</title><rect x="2.9594%" y="276" width="0.7288%" height="15" fill="rgb(231,145,46)" fg:x="134" fg:w="33"/><text x="3.2094%" y="286.50"></text></g><g><title>parse_csv_metadata (extension.py:87) (12 samples, 0.27%)</title><rect x="3.6882%" y="212" width="0.2650%" height="15" fill="rgb(251,118,11)" fg:x="167" fg:w="12"/><text x="3.9382%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (extension.py:87) (9 samples, 0.20%)</title><rect x="3.7544%" y="228" width="0.1988%" height="15" fill="rgb(217,147,25)" fg:x="170" fg:w="9"/><text x="4.0044%" y="238.50"></text></g><g><title>_read (pandas/io/parsers.py:449) (6 samples, 0.13%)</title><rect x="4.0415%" y="244" width="0.1325%" height="15" fill="rgb(247,81,37)" fg:x="183" fg:w="6"/><text x="4.2915%" y="254.50"></text></g><g><title>read (pandas/io/parsers.py:1069) (12 samples, 0.27%)</title><rect x="4.1740%" y="260" width="0.2650%" height="15" fill="rgb(209,12,38)" fg:x="189" fg:w="12"/><text x="4.4240%" y="270.50"></text></g><g><title>read (pandas/io/parsers.py:1839) (12 samples, 0.27%)</title><rect x="4.1740%" y="276" width="0.2650%" height="15" fill="rgb(227,1,9)" fg:x="189" fg:w="12"/><text x="4.4240%" y="286.50"></text></g><g><title>_stack_arrays (pandas/core/internals.py:4816) (6 samples, 0.13%)</title><rect x="4.6157%" y="372" width="0.1325%" height="15" fill="rgb(248,47,43)" fg:x="209" fg:w="6"/><text x="4.8657%" y="382.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (12 samples, 0.27%)</title><rect x="4.5274%" y="324" width="0.2650%" height="15" fill="rgb(221,10,30)" fg:x="205" fg:w="12"/><text x="4.7774%" y="334.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4729) (8 samples, 0.18%)</title><rect x="4.6157%" y="340" width="0.1767%" height="15" fill="rgb(210,229,1)" fg:x="209" fg:w="8"/><text x="4.8657%" y="350.50"></text></g><g><title>_simple_blockify (pandas/core/internals.py:4759) (8 samples, 0.18%)</title><rect x="4.6157%" y="356" width="0.1767%" height="15" fill="rgb(222,148,37)" fg:x="209" fg:w="8"/><text x="4.8657%" y="366.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (32 samples, 0.71%)</title><rect x="4.1740%" y="244" width="0.7067%" height="15" fill="rgb(234,67,33)" fg:x="189" fg:w="32"/><text x="4.4240%" y="254.50"></text></g><g><title>read (pandas/io/parsers.py:1087) (20 samples, 0.44%)</title><rect x="4.4390%" y="260" width="0.4417%" height="15" fill="rgb(247,98,35)" fg:x="201" fg:w="20"/><text x="4.6890%" y="270.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (20 samples, 0.44%)</title><rect x="4.4390%" y="276" width="0.4417%" height="15" fill="rgb(247,138,52)" fg:x="201" fg:w="20"/><text x="4.6890%" y="286.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (19 samples, 0.42%)</title><rect x="4.4611%" y="292" width="0.4196%" height="15" fill="rgb(213,79,30)" fg:x="202" fg:w="19"/><text x="4.7111%" y="302.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (16 samples, 0.35%)</title><rect x="4.5274%" y="308" width="0.3534%" height="15" fill="rgb(246,177,23)" fg:x="205" fg:w="16"/><text x="4.7774%" y="318.50"></text></g><g><title>parse_csv_metadata (extension.py:91) (43 samples, 0.95%)</title><rect x="3.9532%" y="212" width="0.9496%" height="15" fill="rgb(230,62,27)" fg:x="179" fg:w="43"/><text x="4.2032%" y="222.50"></text></g><g><title>parser_f (pandas/io/parsers.py:709) (43 samples, 0.95%)</title><rect x="3.9532%" y="228" width="0.9496%" height="15" fill="rgb(216,154,8)" fg:x="179" fg:w="43"/><text x="4.2032%" y="238.50"></text></g><g><title>parse_csv_metadata (extension.py:95) (6 samples, 0.13%)</title><rect x="4.9028%" y="212" width="0.1325%" height="15" fill="rgb(244,35,45)" fg:x="222" fg:w="6"/><text x="5.1528%" y="222.50"></text></g><g><title>ingest_bundle (extension.py:47) (181 samples, 4.00%)</title><rect x="1.0601%" y="196" width="3.9973%" height="15" fill="rgb(251,115,12)" fg:x="48" fg:w="181"/><text x="1.3101%" y="206.50">inge..</text></g><g><title>_split_symbol_mappings (zipline/assets/asset_writer.py:363) (11 samples, 0.24%)</title><rect x="5.0574%" y="260" width="0.2429%" height="15" fill="rgb(240,54,50)" fg:x="229" fg:w="11"/><text x="5.3074%" y="270.50"></text></g><g><title>_check_symbol_mappings (zipline/assets/asset_writer.py:310) (9 samples, 0.20%)</title><rect x="5.1016%" y="276" width="0.1988%" height="15" fill="rgb(233,84,52)" fg:x="231" fg:w="9"/><text x="5.3516%" y="286.50"></text></g><g><title>apply (pandas/core/groupby.py:805) (9 samples, 0.20%)</title><rect x="5.1016%" y="292" width="0.1988%" height="15" fill="rgb(207,117,47)" fg:x="231" fg:w="9"/><text x="5.3516%" y="302.50"></text></g><g><title>_python_apply_general (pandas/core/groupby.py:809) (9 samples, 0.20%)</title><rect x="5.1016%" y="308" width="0.1988%" height="15" fill="rgb(249,43,39)" fg:x="231" fg:w="9"/><text x="5.3516%" y="318.50"></text></g><g><title>apply (pandas/core/groupby.py:1953) (9 samples, 0.20%)</title><rect x="5.1016%" y="324" width="0.1988%" height="15" fill="rgb(209,38,44)" fg:x="231" fg:w="9"/><text x="5.3516%" y="334.50"></text></g><g><title>fast_apply (pandas/core/groupby.py:4712) (9 samples, 0.20%)</title><rect x="5.1016%" y="340" width="0.1988%" height="15" fill="rgb(236,212,23)" fg:x="231" fg:w="9"/><text x="5.3516%" y="350.50"></text></g><g><title>check_intersections (zipline/assets/asset_writer.py:298) (7 samples, 0.15%)</title><rect x="5.1458%" y="356" width="0.1546%" height="15" fill="rgb(242,79,21)" fg:x="233" fg:w="7"/><text x="5.3958%" y="366.50"></text></g><g><title>_ixs (pandas/core/frame.py:2064) (7 samples, 0.15%)</title><rect x="5.3004%" y="404" width="0.1546%" height="15" fill="rgb(211,96,35)" fg:x="240" fg:w="7"/><text x="5.5504%" y="414.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1373) (12 samples, 0.27%)</title><rect x="5.3004%" y="356" width="0.2650%" height="15" fill="rgb(253,215,40)" fg:x="240" fg:w="12"/><text x="5.5504%" y="366.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1832) (12 samples, 0.27%)</title><rect x="5.3004%" y="372" width="0.2650%" height="15" fill="rgb(211,81,21)" fg:x="240" fg:w="12"/><text x="5.5504%" y="382.50"></text></g><g><title>_get_loc (pandas/core/indexing.py:150) (12 samples, 0.27%)</title><rect x="5.3004%" y="388" width="0.2650%" height="15" fill="rgb(208,190,38)" fg:x="240" fg:w="12"/><text x="5.5504%" y="398.50"></text></g><g><title>_ixs (pandas/core/frame.py:2074) (5 samples, 0.11%)</title><rect x="5.4549%" y="404" width="0.1104%" height="15" fill="rgb(235,213,38)" fg:x="247" fg:w="5"/><text x="5.7049%" y="414.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:257) (28 samples, 0.62%)</title><rect x="5.3004%" y="340" width="0.6184%" height="15" fill="rgb(237,122,38)" fg:x="240" fg:w="28"/><text x="5.5504%" y="350.50"></text></g><g><title>sort_values (pandas/core/frame.py:3638) (9 samples, 0.20%)</title><rect x="5.7200%" y="356" width="0.1988%" height="15" fill="rgb(244,218,35)" fg:x="259" fg:w="9"/><text x="5.9700%" y="366.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:258) (9 samples, 0.20%)</title><rect x="5.9187%" y="340" width="0.1988%" height="15" fill="rgb(240,68,47)" fg:x="268" fg:w="9"/><text x="6.1687%" y="350.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:2562) (6 samples, 0.13%)</title><rect x="6.2058%" y="372" width="0.1325%" height="15" fill="rgb(210,16,53)" fg:x="281" fg:w="6"/><text x="6.4558%" y="382.50"></text></g><g><title>_python_apply_general (pandas/core/groupby.py:809) (53 samples, 1.17%)</title><rect x="5.3004%" y="292" width="1.1705%" height="15" fill="rgb(235,124,12)" fg:x="240" fg:w="53"/><text x="5.5504%" y="302.50"></text></g><g><title>apply (pandas/core/groupby.py:1953) (53 samples, 1.17%)</title><rect x="5.3004%" y="308" width="1.1705%" height="15" fill="rgb(224,169,11)" fg:x="240" fg:w="53"/><text x="5.5504%" y="318.50"></text></g><g><title>fast_apply (pandas/core/groupby.py:4712) (53 samples, 1.17%)</title><rect x="5.3004%" y="324" width="1.1705%" height="15" fill="rgb(250,166,2)" fg:x="240" fg:w="53"/><text x="5.5504%" y="334.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:260) (14 samples, 0.31%)</title><rect x="6.1617%" y="340" width="0.3092%" height="15" fill="rgb(242,216,29)" fg:x="279" fg:w="14"/><text x="6.4117%" y="350.50"></text></g><g><title>drop (pandas/core/generic.py:2530) (13 samples, 0.29%)</title><rect x="6.1837%" y="356" width="0.2871%" height="15" fill="rgb(230,116,27)" fg:x="280" fg:w="13"/><text x="6.4337%" y="366.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:2563) (6 samples, 0.13%)</title><rect x="6.3383%" y="372" width="0.1325%" height="15" fill="rgb(228,99,48)" fg:x="287" fg:w="6"/><text x="6.5883%" y="382.50"></text></g><g><title>reindex (pandas/core/series.py:2681) (6 samples, 0.13%)</title><rect x="6.3383%" y="388" width="0.1325%" height="15" fill="rgb(253,11,6)" fg:x="287" fg:w="6"/><text x="6.5883%" y="398.50"></text></g><g><title>reindex (pandas/core/generic.py:3023) (5 samples, 0.11%)</title><rect x="6.3604%" y="404" width="0.1104%" height="15" fill="rgb(247,143,39)" fg:x="288" fg:w="5"/><text x="6.6104%" y="414.50"></text></g><g><title>_load_data (zipline/assets/asset_writer.py:1003) (68 samples, 1.50%)</title><rect x="5.0574%" y="228" width="1.5018%" height="15" fill="rgb(236,97,10)" fg:x="229" fg:w="68"/><text x="5.3074%" y="238.50"></text></g><g><title>_normalize_equities (zipline/assets/asset_writer.py:938) (68 samples, 1.50%)</title><rect x="5.0574%" y="244" width="1.5018%" height="15" fill="rgb(233,208,19)" fg:x="229" fg:w="68"/><text x="5.3074%" y="254.50"></text></g><g><title>_split_symbol_mappings (zipline/assets/asset_writer.py:365) (57 samples, 1.26%)</title><rect x="5.3004%" y="260" width="1.2588%" height="15" fill="rgb(216,164,2)" fg:x="240" fg:w="57"/><text x="5.5504%" y="270.50"></text></g><g><title>apply (pandas/core/groupby.py:805) (57 samples, 1.26%)</title><rect x="5.3004%" y="276" width="1.2588%" height="15" fill="rgb(220,129,5)" fg:x="240" fg:w="57"/><text x="5.5504%" y="286.50"></text></g><g><title>write (zipline/assets/asset_writer.py:785) (69 samples, 1.52%)</title><rect x="5.0574%" y="212" width="1.5239%" height="15" fill="rgb(242,17,10)" fg:x="229" fg:w="69"/><text x="5.3074%" y="222.50"></text></g><g><title>visit_table (sqlalchemy/sql/ddl.py:895) (5 samples, 0.11%)</title><rect x="6.5813%" y="340" width="0.1104%" height="15" fill="rgb(242,107,0)" fg:x="298" fg:w="5"/><text x="6.8313%" y="350.50"></text></g><g><title>execute (sqlalchemy/engine/base.py:1286) (5 samples, 0.11%)</title><rect x="6.5813%" y="356" width="0.1104%" height="15" fill="rgb(251,28,31)" fg:x="298" fg:w="5"/><text x="6.8313%" y="366.50"></text></g><g><title>_execute_on_connection (sqlalchemy/sql/ddl.py:78) (5 samples, 0.11%)</title><rect x="6.5813%" y="372" width="0.1104%" height="15" fill="rgb(233,223,10)" fg:x="298" fg:w="5"/><text x="6.8313%" y="382.50"></text></g><g><title>init_db (zipline/assets/asset_writer.py:896) (6 samples, 0.13%)</title><rect x="6.5813%" y="244" width="0.1325%" height="15" fill="rgb(215,21,27)" fg:x="298" fg:w="6"/><text x="6.8313%" y="254.50"></text></g><g><title>create_all (sqlalchemy/sql/schema.py:4747) (6 samples, 0.13%)</title><rect x="6.5813%" y="260" width="0.1325%" height="15" fill="rgb(232,23,21)" fg:x="298" fg:w="6"/><text x="6.8313%" y="270.50"></text></g><g><title>_run_ddl_visitor (sqlalchemy/engine/base.py:2110) (6 samples, 0.13%)</title><rect x="6.5813%" y="276" width="0.1325%" height="15" fill="rgb(244,5,23)" fg:x="298" fg:w="6"/><text x="6.8313%" y="286.50"></text></g><g><title>traverse_single (sqlalchemy/sql/visitors.py:524) (6 samples, 0.13%)</title><rect x="6.5813%" y="292" width="0.1325%" height="15" fill="rgb(226,81,46)" fg:x="298" fg:w="6"/><text x="6.8313%" y="302.50"></text></g><g><title>visit_metadata (sqlalchemy/sql/ddl.py:850) (6 samples, 0.13%)</title><rect x="6.5813%" y="308" width="0.1325%" height="15" fill="rgb(247,70,30)" fg:x="298" fg:w="6"/><text x="6.8313%" y="318.50"></text></g><g><title>traverse_single (sqlalchemy/sql/visitors.py:524) (6 samples, 0.13%)</title><rect x="6.5813%" y="324" width="0.1325%" height="15" fill="rgb(212,68,19)" fg:x="298" fg:w="6"/><text x="6.8313%" y="334.50"></text></g><g><title>_real_write (zipline/assets/asset_writer.py:470) (7 samples, 0.15%)</title><rect x="6.5813%" y="228" width="0.1546%" height="15" fill="rgb(240,187,13)" fg:x="298" fg:w="7"/><text x="6.8313%" y="238.50"></text></g><g><title>ingest_bundle (extension.py:52) (80 samples, 1.77%)</title><rect x="5.0574%" y="196" width="1.7668%" height="15" fill="rgb(223,113,26)" fg:x="229" fg:w="80"/><text x="5.3074%" y="206.50"></text></g><g><title>write (zipline/assets/asset_writer.py:795) (11 samples, 0.24%)</title><rect x="6.5813%" y="212" width="0.2429%" height="15" fill="rgb(206,192,2)" fg:x="298" fg:w="11"/><text x="6.8313%" y="222.50"></text></g><g><title>try_datetime (pandas/core/dtypes/cast.py:882) (5 samples, 0.11%)</title><rect x="6.8684%" y="388" width="0.1104%" height="15" fill="rgb(241,108,4)" fg:x="311" fg:w="5"/><text x="7.1184%" y="398.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (14 samples, 0.31%)</title><rect x="6.8463%" y="324" width="0.3092%" height="15" fill="rgb(247,173,49)" fg:x="310" fg:w="14"/><text x="7.0963%" y="334.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (13 samples, 0.29%)</title><rect x="6.8684%" y="340" width="0.2871%" height="15" fill="rgb(224,114,35)" fg:x="311" fg:w="13"/><text x="7.1184%" y="350.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (13 samples, 0.29%)</title><rect x="6.8684%" y="356" width="0.2871%" height="15" fill="rgb(245,159,27)" fg:x="311" fg:w="13"/><text x="7.1184%" y="366.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:914) (13 samples, 0.29%)</title><rect x="6.8684%" y="372" width="0.2871%" height="15" fill="rgb(245,172,44)" fg:x="311" fg:w="13"/><text x="7.1184%" y="382.50"></text></g><g><title>try_datetime (pandas/core/dtypes/cast.py:890) (8 samples, 0.18%)</title><rect x="6.9788%" y="388" width="0.1767%" height="15" fill="rgb(236,23,11)" fg:x="316" fg:w="8"/><text x="7.2288%" y="398.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:380) (8 samples, 0.18%)</title><rect x="6.9788%" y="404" width="0.1767%" height="15" fill="rgb(205,117,38)" fg:x="316" fg:w="8"/><text x="7.2288%" y="414.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:294) (7 samples, 0.15%)</title><rect x="7.0009%" y="420" width="0.1546%" height="15" fill="rgb(237,72,25)" fg:x="317" fg:w="7"/><text x="7.2509%" y="430.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (15 samples, 0.33%)</title><rect x="6.8463%" y="308" width="0.3313%" height="15" fill="rgb(244,70,9)" fg:x="310" fg:w="15"/><text x="7.0963%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:136) (16 samples, 0.35%)</title><rect x="6.8463%" y="276" width="0.3534%" height="15" fill="rgb(217,125,39)" fg:x="310" fg:w="16"/><text x="7.0963%" y="286.50"></text></g><g><title>iterrows (pandas/core/frame.py:748) (16 samples, 0.35%)</title><rect x="6.8463%" y="292" width="0.3534%" height="15" fill="rgb(235,36,10)" fg:x="310" fg:w="16"/><text x="7.0963%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:142) (6 samples, 0.13%)</title><rect x="7.3101%" y="276" width="0.1325%" height="15" fill="rgb(251,123,47)" fg:x="331" fg:w="6"/><text x="7.5601%" y="286.50"></text></g><g><title>set_description (tqdm/std.py:1391) (6 samples, 0.13%)</title><rect x="7.3101%" y="292" width="0.1325%" height="15" fill="rgb(221,13,13)" fg:x="331" fg:w="6"/><text x="7.5601%" y="302.50"></text></g><g><title>refresh (tqdm/std.py:1344) (6 samples, 0.13%)</title><rect x="7.3101%" y="308" width="0.1325%" height="15" fill="rgb(238,131,9)" fg:x="331" fg:w="6"/><text x="7.5601%" y="318.50"></text></g><g><title>display (tqdm/std.py:1492) (6 samples, 0.13%)</title><rect x="7.3101%" y="324" width="0.1325%" height="15" fill="rgb(211,50,8)" fg:x="331" fg:w="6"/><text x="7.5601%" y="334.50"></text></g><g><title>_read (pandas/io/parsers.py:449) (11 samples, 0.24%)</title><rect x="7.7076%" y="308" width="0.2429%" height="15" fill="rgb(245,182,24)" fg:x="349" fg:w="11"/><text x="7.9576%" y="318.50"></text></g><g><title>__init__ (pandas/io/parsers.py:818) (10 samples, 0.22%)</title><rect x="7.7297%" y="324" width="0.2208%" height="15" fill="rgb(242,14,37)" fg:x="350" fg:w="10"/><text x="7.9797%" y="334.50"></text></g><g><title>_make_engine (pandas/io/parsers.py:1049) (10 samples, 0.22%)</title><rect x="7.7297%" y="340" width="0.2208%" height="15" fill="rgb(246,228,12)" fg:x="350" fg:w="10"/><text x="7.9797%" y="350.50"></text></g><g><title>__init__ (pandas/io/parsers.py:1695) (8 samples, 0.18%)</title><rect x="7.7739%" y="356" width="0.1767%" height="15" fill="rgb(213,55,15)" fg:x="352" fg:w="8"/><text x="8.0239%" y="366.50"></text></g><g><title>read (pandas/io/parsers.py:1839) (35 samples, 0.77%)</title><rect x="7.9505%" y="340" width="0.7730%" height="15" fill="rgb(209,9,3)" fg:x="360" fg:w="35"/><text x="8.2005%" y="350.50"></text></g><g><title>read (pandas/io/parsers.py:1069) (36 samples, 0.80%)</title><rect x="7.9505%" y="324" width="0.7951%" height="15" fill="rgb(230,59,30)" fg:x="360" fg:w="36"/><text x="8.2005%" y="334.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4659) (5 samples, 0.11%)</title><rect x="8.9223%" y="404" width="0.1104%" height="15" fill="rgb(209,121,21)" fg:x="404" fg:w="5"/><text x="9.1723%" y="414.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (7 samples, 0.15%)</title><rect x="8.9223%" y="388" width="0.1546%" height="15" fill="rgb(220,109,13)" fg:x="404" fg:w="7"/><text x="9.1723%" y="398.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:144) (76 samples, 1.68%)</title><rect x="7.4426%" y="276" width="1.6784%" height="15" fill="rgb(232,18,1)" fg:x="337" fg:w="76"/><text x="7.6926%" y="286.50"></text></g><g><title>parser_f (pandas/io/parsers.py:709) (73 samples, 1.61%)</title><rect x="7.5088%" y="292" width="1.6122%" height="15" fill="rgb(215,41,42)" fg:x="340" fg:w="73"/><text x="7.7588%" y="302.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (53 samples, 1.17%)</title><rect x="7.9505%" y="308" width="1.1705%" height="15" fill="rgb(224,123,36)" fg:x="360" fg:w="53"/><text x="8.2005%" y="318.50"></text></g><g><title>read (pandas/io/parsers.py:1087) (16 samples, 0.35%)</title><rect x="8.7677%" y="324" width="0.3534%" height="15" fill="rgb(240,125,3)" fg:x="397" fg:w="16"/><text x="9.0177%" y="334.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (15 samples, 0.33%)</title><rect x="8.7898%" y="340" width="0.3313%" height="15" fill="rgb(205,98,50)" fg:x="398" fg:w="15"/><text x="9.0398%" y="350.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (11 samples, 0.24%)</title><rect x="8.8781%" y="356" width="0.2429%" height="15" fill="rgb(205,185,37)" fg:x="402" fg:w="11"/><text x="9.1281%" y="366.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (9 samples, 0.20%)</title><rect x="8.9223%" y="372" width="0.1988%" height="15" fill="rgb(238,207,15)" fg:x="404" fg:w="9"/><text x="9.1723%" y="382.50"></text></g><g><title>iterrows (pandas/core/frame.py:747) (9 samples, 0.20%)</title><rect x="9.4081%" y="292" width="0.1988%" height="15" fill="rgb(213,199,42)" fg:x="426" fg:w="9"/><text x="9.6581%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:172) (11 samples, 0.24%)</title><rect x="10.6449%" y="308" width="0.2429%" height="15" fill="rgb(235,201,11)" fg:x="482" fg:w="11"/><text x="10.8949%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:179) (9 samples, 0.20%)</title><rect x="10.9320%" y="308" width="0.1988%" height="15" fill="rgb(207,46,11)" fg:x="495" fg:w="9"/><text x="11.1820%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:182) (7 samples, 0.15%)</title><rect x="11.1307%" y="308" width="0.1546%" height="15" fill="rgb(241,35,35)" fg:x="504" fg:w="7"/><text x="11.3807%" y="318.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3145) (11 samples, 0.24%)</title><rect x="11.7712%" y="324" width="0.2429%" height="15" fill="rgb(243,32,47)" fg:x="533" fg:w="11"/><text x="12.0212%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3175) (9 samples, 0.20%)</title><rect x="12.0583%" y="324" width="0.1988%" height="15" fill="rgb(247,202,23)" fg:x="546" fg:w="9"/><text x="12.3083%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3188) (7 samples, 0.15%)</title><rect x="12.3454%" y="324" width="0.1546%" height="15" fill="rgb(219,102,11)" fg:x="559" fg:w="7"/><text x="12.5954%" y="334.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:831) (6 samples, 0.13%)</title><rect x="12.9196%" y="356" width="0.1325%" height="15" fill="rgb(243,110,44)" fg:x="585" fg:w="6"/><text x="13.1696%" y="366.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:328) (12 samples, 0.27%)</title><rect x="14.7085%" y="372" width="0.2650%" height="15" fill="rgb(222,74,54)" fg:x="666" fg:w="12"/><text x="14.9585%" y="382.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:332) (7 samples, 0.15%)</title><rect x="14.9735%" y="372" width="0.1546%" height="15" fill="rgb(216,99,12)" fg:x="678" fg:w="7"/><text x="15.2235%" y="382.50"></text></g><g><title>_kind_name (numpy/core/_dtype.py:26) (5 samples, 0.11%)</title><rect x="15.0177%" y="388" width="0.1104%" height="15" fill="rgb(226,22,26)" fg:x="680" fg:w="5"/><text x="15.2677%" y="398.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:335) (11 samples, 0.24%)</title><rect x="15.1281%" y="372" width="0.2429%" height="15" fill="rgb(217,163,10)" fg:x="685" fg:w="11"/><text x="15.3781%" y="382.50"></text></g><g><title>_name_includes_bit_suffix (numpy/core/_dtype.py:308) (9 samples, 0.20%)</title><rect x="15.1723%" y="388" width="0.1988%" height="15" fill="rgb(213,25,53)" fg:x="687" fg:w="9"/><text x="15.4223%" y="398.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:339) (9 samples, 0.20%)</title><rect x="15.3710%" y="372" width="0.1988%" height="15" fill="rgb(252,105,26)" fg:x="696" fg:w="9"/><text x="15.6210%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3157) (128 samples, 2.83%)</title><rect x="12.7871%" y="340" width="2.8269%" height="15" fill="rgb(220,39,43)" fg:x="579" fg:w="128"/><text x="13.0371%" y="350.50">_t..</text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:835) (112 samples, 2.47%)</title><rect x="13.1405%" y="356" width="2.4735%" height="15" fill="rgb(229,68,48)" fg:x="595" fg:w="112"/><text x="13.3905%" y="366.50">ma..</text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1026) (5 samples, 0.11%)</title><rect x="15.6802%" y="356" width="0.1104%" height="15" fill="rgb(252,8,32)" fg:x="710" fg:w="5"/><text x="15.9302%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1030) (8 samples, 0.18%)</title><rect x="15.7906%" y="356" width="0.1767%" height="15" fill="rgb(223,20,43)" fg:x="715" fg:w="8"/><text x="16.0406%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1042) (9 samples, 0.20%)</title><rect x="15.9673%" y="356" width="0.1988%" height="15" fill="rgb(229,81,49)" fg:x="723" fg:w="9"/><text x="16.2173%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1043) (13 samples, 0.29%)</title><rect x="16.1661%" y="356" width="0.2871%" height="15" fill="rgb(236,28,36)" fg:x="732" fg:w="13"/><text x="16.4161%" y="366.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:856) (35 samples, 0.77%)</title><rect x="16.7403%" y="372" width="0.7730%" height="15" fill="rgb(249,185,26)" fg:x="758" fg:w="35"/><text x="16.9903%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (16 samples, 0.35%)</title><rect x="17.1599%" y="388" width="0.3534%" height="15" fill="rgb(249,174,33)" fg:x="777" fg:w="16"/><text x="17.4099%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:858) (12 samples, 0.27%)</title><rect x="17.5133%" y="372" width="0.2650%" height="15" fill="rgb(233,201,37)" fg:x="793" fg:w="12"/><text x="17.7633%" y="382.50"></text></g><g><title>__instancecheck__ (abc.py:184) (22 samples, 0.49%)</title><rect x="18.1758%" y="404" width="0.4859%" height="15" fill="rgb(221,78,26)" fg:x="823" fg:w="22"/><text x="18.4258%" y="414.50"></text></g><g><title>__contains__ (_weakrefset.py:75) (5 samples, 0.11%)</title><rect x="18.5512%" y="420" width="0.1104%" height="15" fill="rgb(250,127,30)" fg:x="840" fg:w="5"/><text x="18.8012%" y="430.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (35 samples, 0.77%)</title><rect x="17.9108%" y="388" width="0.7730%" height="15" fill="rgb(230,49,44)" fg:x="811" fg:w="35"/><text x="18.1608%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:864) (49 samples, 1.08%)</title><rect x="17.7783%" y="372" width="1.0822%" height="15" fill="rgb(229,67,23)" fg:x="805" fg:w="49"/><text x="18.0283%" y="382.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:267) (8 samples, 0.18%)</title><rect x="18.6837%" y="388" width="0.1767%" height="15" fill="rgb(249,83,47)" fg:x="846" fg:w="8"/><text x="18.9337%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:866) (13 samples, 0.29%)</title><rect x="18.8604%" y="372" width="0.2871%" height="15" fill="rgb(215,43,3)" fg:x="854" fg:w="13"/><text x="19.1104%" y="382.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:114) (29 samples, 0.64%)</title><rect x="19.2800%" y="388" width="0.6405%" height="15" fill="rgb(238,154,13)" fg:x="873" fg:w="29"/><text x="19.5300%" y="398.50"></text></g><g><title>_get_dtype_type (pandas/core/dtypes/common.py:1812) (5 samples, 0.11%)</title><rect x="19.8101%" y="404" width="0.1104%" height="15" fill="rgb(219,56,2)" fg:x="897" fg:w="5"/><text x="20.0601%" y="414.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:869) (38 samples, 0.84%)</title><rect x="19.1475%" y="372" width="0.8392%" height="15" fill="rgb(233,0,4)" fg:x="867" fg:w="38"/><text x="19.3975%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:876) (6 samples, 0.13%)</title><rect x="20.0972%" y="372" width="0.1325%" height="15" fill="rgb(235,30,7)" fg:x="910" fg:w="6"/><text x="20.3472%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:909) (50 samples, 1.10%)</title><rect x="20.2518%" y="372" width="1.1042%" height="15" fill="rgb(250,79,13)" fg:x="917" fg:w="50"/><text x="20.5018%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:911) (5 samples, 0.11%)</title><rect x="21.3560%" y="372" width="0.1104%" height="15" fill="rgb(211,146,34)" fg:x="967" fg:w="5"/><text x="21.6060%" y="382.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (229 samples, 5.06%)</title><rect x="16.4532%" y="356" width="5.0574%" height="15" fill="rgb(228,22,38)" fg:x="745" fg:w="229"/><text x="16.7032%" y="366.50">maybe_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1007) (16 samples, 0.35%)</title><rect x="21.9523%" y="372" width="0.3534%" height="15" fill="rgb(235,168,5)" fg:x="994" fg:w="16"/><text x="22.2023%" y="382.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:939) (37 samples, 0.82%)</title><rect x="21.5106%" y="356" width="0.8171%" height="15" fill="rgb(221,155,16)" fg:x="974" fg:w="37"/><text x="21.7606%" y="366.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (336 samples, 7.42%)</title><rect x="15.6140%" y="340" width="7.4205%" height="15" fill="rgb(215,215,53)" fg:x="707" fg:w="336"/><text x="15.8640%" y="350.50">_try_cast ..</text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:940) (32 samples, 0.71%)</title><rect x="22.3277%" y="356" width="0.7067%" height="15" fill="rgb(223,4,10)" fg:x="1011" fg:w="32"/><text x="22.5777%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1007) (11 samples, 0.24%)</title><rect x="22.7915%" y="372" width="0.2429%" height="15" fill="rgb(234,103,6)" fg:x="1032" fg:w="11"/><text x="23.0415%" y="382.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:90) (8 samples, 0.18%)</title><rect x="23.9399%" y="404" width="0.1767%" height="15" fill="rgb(227,97,0)" fg:x="1084" fg:w="8"/><text x="24.1899%" y="414.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1646) (47 samples, 1.04%)</title><rect x="23.1228%" y="356" width="1.0380%" height="15" fill="rgb(234,150,53)" fg:x="1047" fg:w="47"/><text x="23.3728%" y="366.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:220) (44 samples, 0.97%)</title><rect x="23.1890%" y="372" width="0.9717%" height="15" fill="rgb(228,201,54)" fg:x="1050" fg:w="44"/><text x="23.4390%" y="382.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (22 samples, 0.49%)</title><rect x="23.6749%" y="388" width="0.4859%" height="15" fill="rgb(222,22,37)" fg:x="1072" fg:w="22"/><text x="23.9249%" y="398.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1648) (33 samples, 0.73%)</title><rect x="24.1608%" y="356" width="0.7288%" height="15" fill="rgb(237,53,32)" fg:x="1094" fg:w="33"/><text x="24.4108%" y="366.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:148) (28 samples, 0.62%)</title><rect x="24.2712%" y="372" width="0.6184%" height="15" fill="rgb(233,25,53)" fg:x="1099" fg:w="28"/><text x="24.5212%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (13 samples, 0.29%)</title><rect x="24.6025%" y="388" width="0.2871%" height="15" fill="rgb(210,40,34)" fg:x="1114" fg:w="13"/><text x="24.8525%" y="398.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:264) (10 samples, 0.22%)</title><rect x="24.9558%" y="372" width="0.2208%" height="15" fill="rgb(241,220,44)" fg:x="1130" fg:w="10"/><text x="25.2058%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3162) (109 samples, 2.41%)</title><rect x="23.0345%" y="340" width="2.4072%" height="15" fill="rgb(235,28,35)" fg:x="1043" fg:w="109"/><text x="23.2845%" y="350.50">_t..</text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1650) (25 samples, 0.55%)</title><rect x="24.8896%" y="356" width="0.5521%" height="15" fill="rgb(210,56,17)" fg:x="1127" fg:w="25"/><text x="25.1396%" y="366.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:266) (12 samples, 0.27%)</title><rect x="25.1767%" y="372" width="0.2650%" height="15" fill="rgb(224,130,29)" fg:x="1140" fg:w="12"/><text x="25.4267%" y="382.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:369) (8 samples, 0.18%)</title><rect x="25.2650%" y="388" width="0.1767%" height="15" fill="rgb(235,212,8)" fg:x="1144" fg:w="8"/><text x="25.5150%" y="398.50"></text></g><g><title>_try_cast (pandas/core/series.py:3163) (5 samples, 0.11%)</title><rect x="25.4417%" y="340" width="0.1104%" height="15" fill="rgb(223,33,50)" fg:x="1152" fg:w="5"/><text x="25.6917%" y="350.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (592 samples, 13.07%)</title><rect x="12.5000%" y="324" width="13.0742%" height="15" fill="rgb(219,149,13)" fg:x="566" fg:w="592"/><text x="12.7500%" y="334.50">_sanitize_array (pan..</text></g><g><title>_sanitize_array (pandas/core/series.py:3246) (9 samples, 0.20%)</title><rect x="25.6846%" y="324" width="0.1988%" height="15" fill="rgb(250,156,29)" fg:x="1163" fg:w="9"/><text x="25.9346%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3269) (12 samples, 0.27%)</title><rect x="25.9276%" y="324" width="0.2650%" height="15" fill="rgb(216,193,19)" fg:x="1174" fg:w="12"/><text x="26.1776%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3281) (16 samples, 0.35%)</title><rect x="26.1926%" y="324" width="0.3534%" height="15" fill="rgb(216,135,14)" fg:x="1186" fg:w="16"/><text x="26.4426%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (681 samples, 15.04%)</title><rect x="11.5504%" y="308" width="15.0398%" height="15" fill="rgb(241,47,5)" fg:x="523" fg:w="681"/><text x="11.8004%" y="318.50">__init__ (pandas/core/s..</text></g><g><title>__init__ (pandas/core/internals.py:4365) (5 samples, 0.11%)</title><rect x="27.0097%" y="324" width="0.1104%" height="15" fill="rgb(233,42,35)" fg:x="1223" fg:w="5"/><text x="27.2597%" y="334.50"></text></g><g><title>__init__ (pandas/core/internals.py:4401) (16 samples, 0.35%)</title><rect x="27.2968%" y="324" width="0.3534%" height="15" fill="rgb(231,13,6)" fg:x="1236" fg:w="16"/><text x="27.5468%" y="334.50"></text></g><g><title>make_block (pandas/core/internals.py:2925) (5 samples, 0.11%)</title><rect x="27.7827%" y="340" width="0.1104%" height="15" fill="rgb(207,181,40)" fg:x="1258" fg:w="5"/><text x="28.0327%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2929) (12 samples, 0.27%)</title><rect x="27.9152%" y="340" width="0.2650%" height="15" fill="rgb(254,173,49)" fg:x="1264" fg:w="12"/><text x="28.1652%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2931) (6 samples, 0.13%)</title><rect x="28.1802%" y="340" width="0.1325%" height="15" fill="rgb(221,1,38)" fg:x="1276" fg:w="6"/><text x="28.4302%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2937) (8 samples, 0.18%)</title><rect x="28.3790%" y="340" width="0.1767%" height="15" fill="rgb(206,124,46)" fg:x="1285" fg:w="8"/><text x="28.6290%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2939) (6 samples, 0.13%)</title><rect x="28.5557%" y="340" width="0.1325%" height="15" fill="rgb(249,21,11)" fg:x="1293" fg:w="6"/><text x="28.8057%" y="350.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:264) (21 samples, 0.46%)</title><rect x="28.7765%" y="356" width="0.4638%" height="15" fill="rgb(222,201,40)" fg:x="1303" fg:w="21"/><text x="29.0265%" y="366.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (16 samples, 0.35%)</title><rect x="28.8869%" y="372" width="0.3534%" height="15" fill="rgb(235,61,29)" fg:x="1308" fg:w="16"/><text x="29.1369%" y="382.50"></text></g><g><title>make_block (pandas/core/internals.py:2944) (41 samples, 0.91%)</title><rect x="28.6882%" y="340" width="0.9055%" height="15" fill="rgb(219,207,3)" fg:x="1299" fg:w="41"/><text x="28.9382%" y="350.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:266) (16 samples, 0.35%)</title><rect x="29.2403%" y="356" width="0.3534%" height="15" fill="rgb(222,56,46)" fg:x="1324" fg:w="16"/><text x="29.4903%" y="366.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:369) (11 samples, 0.24%)</title><rect x="29.3507%" y="372" width="0.2429%" height="15" fill="rgb(239,76,54)" fg:x="1329" fg:w="11"/><text x="29.6007%" y="382.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:92) (5 samples, 0.11%)</title><rect x="29.4832%" y="388" width="0.1104%" height="15" fill="rgb(231,124,27)" fg:x="1335" fg:w="5"/><text x="29.7332%" y="398.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (8 samples, 0.18%)</title><rect x="29.8587%" y="372" width="0.1767%" height="15" fill="rgb(249,195,6)" fg:x="1352" fg:w="8"/><text x="30.1087%" y="382.50"></text></g><g><title>make_block (pandas/core/internals.py:2948) (31 samples, 0.68%)</title><rect x="29.6378%" y="340" width="0.6846%" height="15" fill="rgb(237,174,47)" fg:x="1342" fg:w="31"/><text x="29.8878%" y="350.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:220) (29 samples, 0.64%)</title><rect x="29.6820%" y="356" width="0.6405%" height="15" fill="rgb(206,201,31)" fg:x="1344" fg:w="29"/><text x="29.9320%" y="366.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (12 samples, 0.27%)</title><rect x="30.0574%" y="372" width="0.2650%" height="15" fill="rgb(231,57,52)" fg:x="1361" fg:w="12"/><text x="30.3074%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:2078) (8 samples, 0.18%)</title><rect x="30.6758%" y="356" width="0.1767%" height="15" fill="rgb(248,177,22)" fg:x="1389" fg:w="8"/><text x="30.9258%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:2081) (10 samples, 0.22%)</title><rect x="30.8525%" y="356" width="0.2208%" height="15" fill="rgb(215,211,37)" fg:x="1397" fg:w="10"/><text x="31.1025%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:110) (5 samples, 0.11%)</title><rect x="31.6696%" y="372" width="0.1104%" height="15" fill="rgb(241,128,51)" fg:x="1434" fg:w="5"/><text x="31.9196%" y="382.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:228) (6 samples, 0.13%)</title><rect x="31.9788%" y="388" width="0.1325%" height="15" fill="rgb(227,165,31)" fg:x="1448" fg:w="6"/><text x="32.2288%" y="398.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:229) (15 samples, 0.33%)</title><rect x="32.1113%" y="388" width="0.3313%" height="15" fill="rgb(228,167,24)" fg:x="1454" fg:w="15"/><text x="32.3613%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:114) (32 samples, 0.71%)</title><rect x="31.8463%" y="372" width="0.7067%" height="15" fill="rgb(228,143,12)" fg:x="1442" fg:w="32"/><text x="32.0963%" y="382.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:231) (5 samples, 0.11%)</title><rect x="32.4426%" y="388" width="0.1104%" height="15" fill="rgb(249,149,8)" fg:x="1469" fg:w="5"/><text x="32.6926%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:4402) (235 samples, 5.19%)</title><rect x="27.6502%" y="324" width="5.1899%" height="15" fill="rgb(243,35,44)" fg:x="1252" fg:w="235"/><text x="27.9002%" y="334.50">__init..</text></g><g><title>make_block (pandas/core/internals.py:2957) (111 samples, 2.45%)</title><rect x="30.3887%" y="340" width="2.4514%" height="15" fill="rgb(246,89,9)" fg:x="1376" fg:w="111"/><text x="30.6387%" y="350.50">ma..</text></g><g><title>__init__ (pandas/core/internals.py:2082) (80 samples, 1.77%)</title><rect x="31.0733%" y="356" width="1.7668%" height="15" fill="rgb(233,213,13)" fg:x="1407" fg:w="80"/><text x="31.3233%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:117) (13 samples, 0.29%)</title><rect x="32.5530%" y="372" width="0.2871%" height="15" fill="rgb(233,141,41)" fg:x="1474" fg:w="13"/><text x="32.8030%" y="382.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (287 samples, 6.34%)</title><rect x="26.5901%" y="308" width="6.3383%" height="15" fill="rgb(239,167,4)" fg:x="1204" fg:w="287"/><text x="26.8401%" y="318.50">__init__..</text></g><g><title>__init__ (pandas/core/generic.py:133) (6 samples, 0.13%)</title><rect x="33.4143%" y="324" width="0.1325%" height="15" fill="rgb(209,217,16)" fg:x="1513" fg:w="6"/><text x="33.6643%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (37 samples, 0.82%)</title><rect x="32.9284%" y="308" width="0.8171%" height="15" fill="rgb(219,88,35)" fg:x="1491" fg:w="37"/><text x="33.1784%" y="318.50"></text></g><g><title>__init__ (pandas/core/generic.py:135) (5 samples, 0.11%)</title><rect x="33.6352%" y="324" width="0.1104%" height="15" fill="rgb(220,193,23)" fg:x="1523" fg:w="5"/><text x="33.8852%" y="334.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:3608) (8 samples, 0.18%)</title><rect x="35.0486%" y="356" width="0.1767%" height="15" fill="rgb(230,90,52)" fg:x="1587" fg:w="8"/><text x="35.2986%" y="366.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3626) (66 samples, 1.46%)</title><rect x="34.0769%" y="324" width="1.4576%" height="15" fill="rgb(252,106,19)" fg:x="1543" fg:w="66"/><text x="34.3269%" y="334.50"></text></g><g><title>name (pandas/core/series.py:338) (45 samples, 0.99%)</title><rect x="34.5406%" y="340" width="0.9938%" height="15" fill="rgb(206,74,20)" fg:x="1564" fg:w="45"/><text x="34.7906%" y="350.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:3610) (14 samples, 0.31%)</title><rect x="35.2253%" y="356" width="0.3092%" height="15" fill="rgb(230,138,44)" fg:x="1595" fg:w="14"/><text x="35.4753%" y="366.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3629) (5 samples, 0.11%)</title><rect x="35.6007%" y="324" width="0.1104%" height="15" fill="rgb(235,182,43)" fg:x="1612" fg:w="5"/><text x="35.8507%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3635) (6 samples, 0.13%)</title><rect x="35.7774%" y="324" width="0.1325%" height="15" fill="rgb(242,16,51)" fg:x="1620" fg:w="6"/><text x="36.0274%" y="334.50"></text></g><g><title>is_hashable (pandas/core/dtypes/inference.py:390) (7 samples, 0.15%)</title><rect x="36.4178%" y="356" width="0.1546%" height="15" fill="rgb(248,9,4)" fg:x="1649" fg:w="7"/><text x="36.6678%" y="366.50"></text></g><g><title>name (pandas/core/series.py:342) (21 samples, 0.46%)</title><rect x="36.1307%" y="340" width="0.4638%" height="15" fill="rgb(210,31,22)" fg:x="1636" fg:w="21"/><text x="36.3807%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (138 samples, 3.05%)</title><rect x="33.7456%" y="308" width="3.0477%" height="15" fill="rgb(239,54,39)" fg:x="1528" fg:w="138"/><text x="33.9956%" y="318.50">__i..</text></g><g><title>__setattr__ (pandas/core/generic.py:3636) (40 samples, 0.88%)</title><rect x="35.9099%" y="324" width="0.8834%" height="15" fill="rgb(230,99,41)" fg:x="1626" fg:w="40"/><text x="36.1599%" y="334.50"></text></g><g><title>name (pandas/core/series.py:344) (9 samples, 0.20%)</title><rect x="36.5945%" y="340" width="0.1988%" height="15" fill="rgb(253,106,12)" fg:x="1657" fg:w="9"/><text x="36.8445%" y="350.50"></text></g><g><title>_set_axis (pandas/core/series.py:306) (5 samples, 0.11%)</title><rect x="37.0583%" y="324" width="0.1104%" height="15" fill="rgb(213,46,41)" fg:x="1678" fg:w="5"/><text x="37.3083%" y="334.50"></text></g><g><title>_set_axis (pandas/core/series.py:320) (13 samples, 0.29%)</title><rect x="37.1908%" y="324" width="0.2871%" height="15" fill="rgb(215,133,35)" fg:x="1684" fg:w="13"/><text x="37.4408%" y="334.50"></text></g><g><title>_set_subtyp (pandas/core/series.py:330) (5 samples, 0.11%)</title><rect x="37.3675%" y="340" width="0.1104%" height="15" fill="rgb(213,28,5)" fg:x="1692" fg:w="5"/><text x="37.6175%" y="350.50"></text></g><g><title>_set_axis (pandas/core/series.py:322) (17 samples, 0.38%)</title><rect x="37.4779%" y="324" width="0.3754%" height="15" fill="rgb(215,77,49)" fg:x="1697" fg:w="17"/><text x="37.7279%" y="334.50"></text></g><g><title>iterrows (pandas/core/frame.py:748) (1,281 samples, 28.29%)</title><rect x="9.6069%" y="292" width="28.2906%" height="15" fill="rgb(248,100,22)" fg:x="435" fg:w="1281"/><text x="9.8569%" y="302.50">iterrows (pandas/core/frame.py:748)</text></g><g><title>__init__ (pandas/core/series.py:271) (50 samples, 1.10%)</title><rect x="36.7933%" y="308" width="1.1042%" height="15" fill="rgb(208,67,9)" fg:x="1666" fg:w="50"/><text x="37.0433%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:146) (1,304 samples, 28.80%)</title><rect x="9.2094%" y="276" width="28.7986%" height="15" fill="rgb(219,133,21)" fg:x="417" fg:w="1304"/><text x="9.4594%" y="286.50">parse_csv_kline_d1 (extension.py:146)</text></g><g><title>iterrows (pandas/core/frame.py:749) (5 samples, 0.11%)</title><rect x="37.8975%" y="292" width="0.1104%" height="15" fill="rgb(246,46,29)" fg:x="1716" fg:w="5"/><text x="38.1475%" y="302.50"></text></g><g><title>__getitem__ (pandas/core/series.py:621) (8 samples, 0.18%)</title><rect x="38.6484%" y="292" width="0.1767%" height="15" fill="rgb(246,185,52)" fg:x="1750" fg:w="8"/><text x="38.8984%" y="302.50"></text></g><g><title>_block (pandas/core/internals.py:4411) (5 samples, 0.11%)</title><rect x="39.9072%" y="356" width="0.1104%" height="15" fill="rgb(252,136,11)" fg:x="1807" fg:w="5"/><text x="40.1572%" y="366.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2545) (32 samples, 0.71%)</title><rect x="39.3551%" y="308" width="0.7067%" height="15" fill="rgb(219,138,53)" fg:x="1782" fg:w="32"/><text x="39.6051%" y="318.50"></text></g><g><title>_values (pandas/core/series.py:403) (25 samples, 0.55%)</title><rect x="39.5097%" y="324" width="0.5521%" height="15" fill="rgb(211,51,23)" fg:x="1789" fg:w="25"/><text x="39.7597%" y="334.50"></text></g><g><title>internal_values (pandas/core/internals.py:4507) (16 samples, 0.35%)</title><rect x="39.7085%" y="340" width="0.3534%" height="15" fill="rgb(247,221,28)" fg:x="1798" fg:w="16"/><text x="39.9585%" y="350.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2546) (7 samples, 0.15%)</title><rect x="40.0618%" y="308" width="0.1546%" height="15" fill="rgb(251,222,45)" fg:x="1814" fg:w="7"/><text x="40.3118%" y="318.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2554) (59 samples, 1.30%)</title><rect x="40.2164%" y="308" width="1.3030%" height="15" fill="rgb(217,162,53)" fg:x="1821" fg:w="59"/><text x="40.4664%" y="318.50"></text></g><g><title>get_values (pandas/core/series.py:413) (33 samples, 0.73%)</title><rect x="40.7906%" y="324" width="0.7288%" height="15" fill="rgb(229,93,14)" fg:x="1847" fg:w="33"/><text x="41.0406%" y="334.50"></text></g><g><title>get_values (pandas/core/internals.py:4515) (28 samples, 0.62%)</title><rect x="40.9011%" y="340" width="0.6184%" height="15" fill="rgb(209,67,49)" fg:x="1852" fg:w="28"/><text x="41.1511%" y="350.50"></text></g><g><title>to_dense (pandas/core/internals.py:179) (17 samples, 0.38%)</title><rect x="41.1440%" y="356" width="0.3754%" height="15" fill="rgb(213,87,29)" fg:x="1863" fg:w="17"/><text x="41.3940%" y="366.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:162) (5 samples, 0.11%)</title><rect x="41.7624%" y="324" width="0.1104%" height="15" fill="rgb(205,151,52)" fg:x="1891" fg:w="5"/><text x="42.0124%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:166) (9 samples, 0.20%)</title><rect x="41.8728%" y="324" width="0.1988%" height="15" fill="rgb(253,215,39)" fg:x="1896" fg:w="9"/><text x="42.1228%" y="334.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:3473) (5 samples, 0.11%)</title><rect x="41.9611%" y="340" width="0.1104%" height="15" fill="rgb(221,220,41)" fg:x="1900" fg:w="5"/><text x="42.2111%" y="350.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:167) (16 samples, 0.35%)</title><rect x="42.0716%" y="324" width="0.3534%" height="15" fill="rgb(218,133,21)" fg:x="1905" fg:w="16"/><text x="42.3216%" y="334.50"></text></g><g><title>__len__ (pandas/core/indexes/base.py:561) (6 samples, 0.13%)</title><rect x="42.8887%" y="356" width="0.1325%" height="15" fill="rgb(221,193,43)" fg:x="1942" fg:w="6"/><text x="43.1387%" y="366.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/base.py:1367) (27 samples, 0.60%)</title><rect x="42.5574%" y="340" width="0.5963%" height="15" fill="rgb(240,128,52)" fg:x="1927" fg:w="27"/><text x="42.8074%" y="350.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (5 samples, 0.11%)</title><rect x="43.0433%" y="356" width="0.1104%" height="15" fill="rgb(253,114,12)" fg:x="1949" fg:w="5"/><text x="43.2933%" y="366.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2557) (74 samples, 1.63%)</title><rect x="41.6078%" y="308" width="1.6343%" height="15" fill="rgb(215,223,47)" fg:x="1884" fg:w="74"/><text x="41.8578%" y="318.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:168) (37 samples, 0.82%)</title><rect x="42.4249%" y="324" width="0.8171%" height="15" fill="rgb(248,225,23)" fg:x="1921" fg:w="37"/><text x="42.6749%" y="334.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2559) (12 samples, 0.27%)</title><rect x="43.2420%" y="308" width="0.2650%" height="15" fill="rgb(250,108,0)" fg:x="1958" fg:w="12"/><text x="43.4920%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/series.py:623) (300 samples, 6.63%)</title><rect x="38.8251%" y="292" width="6.6254%" height="15" fill="rgb(228,208,7)" fg:x="1758" fg:w="300"/><text x="39.0751%" y="302.50">__getitem..</text></g><g><title>get_value (pandas/core/indexes/base.py:2560) (88 samples, 1.94%)</title><rect x="43.5071%" y="308" width="1.9435%" height="15" fill="rgb(244,45,10)" fg:x="1970" fg:w="88"/><text x="43.7571%" y="318.50">g..</text></g><g><title>dtype (pandas/core/series.py:350) (21 samples, 0.46%)</title><rect x="44.9867%" y="324" width="0.4638%" height="15" fill="rgb(207,125,25)" fg:x="2037" fg:w="21"/><text x="45.2367%" y="334.50"></text></g><g><title>dtype (pandas/core/internals.py:4481) (15 samples, 0.33%)</title><rect x="45.1193%" y="340" width="0.3313%" height="15" fill="rgb(210,195,18)" fg:x="2043" fg:w="15"/><text x="45.3693%" y="350.50"></text></g><g><title>dtype (pandas/core/internals.py:309) (6 samples, 0.13%)</title><rect x="45.3180%" y="356" width="0.1325%" height="15" fill="rgb(249,80,12)" fg:x="2052" fg:w="6"/><text x="45.5680%" y="366.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:147) (344 samples, 7.60%)</title><rect x="38.0080%" y="276" width="7.5972%" height="15" fill="rgb(221,65,9)" fg:x="1721" fg:w="344"/><text x="38.2580%" y="286.50">parse_csv_..</text></g><g><title>parse_csv_kline_d1 (extension.py:150) (14 samples, 0.31%)</title><rect x="45.6493%" y="276" width="0.3092%" height="15" fill="rgb(235,49,36)" fg:x="2067" fg:w="14"/><text x="45.8993%" y="286.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:152) (7 samples, 0.15%)</title><rect x="46.0247%" y="276" width="0.1546%" height="15" fill="rgb(225,32,20)" fg:x="2084" fg:w="7"/><text x="46.2747%" y="286.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:154) (63 samples, 1.39%)</title><rect x="46.2456%" y="276" width="1.3913%" height="15" fill="rgb(215,141,46)" fg:x="2094" fg:w="63"/><text x="46.4956%" y="286.50"></text></g><g><title>_list_to_arrays (pandas/core/frame.py:6361) (5 samples, 0.11%)</title><rect x="47.6369%" y="324" width="0.1104%" height="15" fill="rgb(250,160,47)" fg:x="2157" fg:w="5"/><text x="47.8869%" y="334.50"></text></g><g><title>convert (pandas/core/frame.py:6425) (13 samples, 0.29%)</title><rect x="47.7473%" y="372" width="0.2871%" height="15" fill="rgb(216,222,40)" fg:x="2162" fg:w="13"/><text x="47.9973%" y="382.50"></text></g><g><title>__init__ (pandas/core/frame.py:369) (21 samples, 0.46%)</title><rect x="47.6369%" y="292" width="0.4638%" height="15" fill="rgb(234,217,39)" fg:x="2157" fg:w="21"/><text x="47.8869%" y="302.50"></text></g><g><title>_to_arrays (pandas/core/frame.py:6284) (21 samples, 0.46%)</title><rect x="47.6369%" y="308" width="0.4638%" height="15" fill="rgb(207,178,40)" fg:x="2157" fg:w="21"/><text x="47.8869%" y="318.50"></text></g><g><title>_list_to_arrays (pandas/core/frame.py:6363) (16 samples, 0.35%)</title><rect x="47.7473%" y="324" width="0.3534%" height="15" fill="rgb(221,136,13)" fg:x="2162" fg:w="16"/><text x="47.9973%" y="334.50"></text></g><g><title>_convert_object_array (pandas/core/frame.py:6429) (16 samples, 0.35%)</title><rect x="47.7473%" y="340" width="0.3534%" height="15" fill="rgb(249,199,10)" fg:x="2162" fg:w="16"/><text x="47.9973%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/frame.py:6429) (16 samples, 0.35%)</title><rect x="47.7473%" y="356" width="0.3534%" height="15" fill="rgb(249,222,13)" fg:x="2162" fg:w="16"/><text x="47.9973%" y="366.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (15 samples, 0.33%)</title><rect x="48.2774%" y="324" width="0.3313%" height="15" fill="rgb(244,185,38)" fg:x="2186" fg:w="15"/><text x="48.5274%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:157) (48 samples, 1.06%)</title><rect x="47.6369%" y="276" width="1.0601%" height="15" fill="rgb(236,202,9)" fg:x="2157" fg:w="48"/><text x="47.8869%" y="286.50"></text></g><g><title>__init__ (pandas/core/frame.py:382) (21 samples, 0.46%)</title><rect x="48.2332%" y="292" width="0.4638%" height="15" fill="rgb(250,229,37)" fg:x="2184" fg:w="21"/><text x="48.4832%" y="302.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (19 samples, 0.42%)</title><rect x="48.2774%" y="308" width="0.4196%" height="15" fill="rgb(206,174,23)" fg:x="2186" fg:w="19"/><text x="48.5274%" y="318.50"></text></g><g><title>set (pandas/core/internals.py:4026) (6 samples, 0.13%)</title><rect x="49.0504%" y="340" width="0.1325%" height="15" fill="rgb(211,33,43)" fg:x="2221" fg:w="6"/><text x="49.3004%" y="350.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals.py:4026) (6 samples, 0.13%)</title><rect x="49.0504%" y="356" width="0.1325%" height="15" fill="rgb(245,58,50)" fg:x="2221" fg:w="6"/><text x="49.3004%" y="366.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (16 samples, 0.35%)</title><rect x="48.8516%" y="324" width="0.3534%" height="15" fill="rgb(244,68,36)" fg:x="2212" fg:w="16"/><text x="49.1016%" y="334.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (21 samples, 0.46%)</title><rect x="48.7853%" y="292" width="0.4638%" height="15" fill="rgb(232,229,15)" fg:x="2209" fg:w="21"/><text x="49.0353%" y="302.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (18 samples, 0.40%)</title><rect x="48.8516%" y="308" width="0.3975%" height="15" fill="rgb(254,30,23)" fg:x="2212" fg:w="18"/><text x="49.1016%" y="318.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:373) (9 samples, 0.20%)</title><rect x="49.2712%" y="292" width="0.1988%" height="15" fill="rgb(235,160,14)" fg:x="2231" fg:w="9"/><text x="49.5212%" y="302.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:294) (8 samples, 0.18%)</title><rect x="49.2933%" y="308" width="0.1767%" height="15" fill="rgb(212,155,44)" fg:x="2232" fg:w="8"/><text x="49.5433%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (5 samples, 0.11%)</title><rect x="49.5583%" y="308" width="0.1104%" height="15" fill="rgb(226,2,50)" fg:x="2244" fg:w="5"/><text x="49.8083%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:158) (47 samples, 1.04%)</title><rect x="48.6970%" y="276" width="1.0380%" height="15" fill="rgb(234,177,6)" fg:x="2205" fg:w="47"/><text x="48.9470%" y="286.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:374) (12 samples, 0.27%)</title><rect x="49.4700%" y="292" width="0.2650%" height="15" fill="rgb(217,24,9)" fg:x="2240" fg:w="12"/><text x="49.7200%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:159) (14 samples, 0.31%)</title><rect x="49.7350%" y="276" width="0.3092%" height="15" fill="rgb(220,13,46)" fg:x="2252" fg:w="14"/><text x="49.9850%" y="286.50"></text></g><g><title>set_index (pandas/core/frame.py:3159) (9 samples, 0.20%)</title><rect x="49.8454%" y="292" width="0.1988%" height="15" fill="rgb(239,221,27)" fg:x="2257" fg:w="9"/><text x="50.0954%" y="302.50"></text></g><g><title>__delitem__ (pandas/core/generic.py:2096) (9 samples, 0.20%)</title><rect x="49.8454%" y="308" width="0.1988%" height="15" fill="rgb(222,198,25)" fg:x="2257" fg:w="9"/><text x="50.0954%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:163) (137 samples, 3.03%)</title><rect x="50.0442%" y="276" width="3.0256%" height="15" fill="rgb(211,99,13)" fg:x="2266" fg:w="137"/><text x="50.2942%" y="286.50">par..</text></g><g><title>&lt;listcomp&gt; (extension.py:163) (137 samples, 3.03%)</title><rect x="50.0442%" y="292" width="3.0256%" height="15" fill="rgb(232,111,31)" fg:x="2266" fg:w="137"/><text x="50.2942%" y="302.50">&lt;li..</text></g><g><title>parse_csv_kline_d1 (extension.py:164) (107 samples, 2.36%)</title><rect x="53.0698%" y="276" width="2.3631%" height="15" fill="rgb(245,82,37)" fg:x="2403" fg:w="107"/><text x="53.3198%" y="286.50">pa..</text></g><g><title>tolist (pandas/core/indexes/datetimelike.py:470) (81 samples, 1.79%)</title><rect x="53.6440%" y="292" width="1.7889%" height="15" fill="rgb(227,149,46)" fg:x="2429" fg:w="81"/><text x="53.8940%" y="302.50">t..</text></g><g><title>asobject (pandas/core/indexes/datetimelike.py:432) (76 samples, 1.68%)</title><rect x="53.7544%" y="308" width="1.6784%" height="15" fill="rgb(218,36,50)" fg:x="2434" fg:w="76"/><text x="54.0044%" y="318.50"></text></g><g><title>_box_values (pandas/core/indexes/datetimelike.py:244) (71 samples, 1.57%)</title><rect x="53.8648%" y="324" width="1.5680%" height="15" fill="rgb(226,80,48)" fg:x="2439" fg:w="71"/><text x="54.1148%" y="334.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/indexes/datetimes.py:554) (61 samples, 1.35%)</title><rect x="54.0857%" y="340" width="1.3472%" height="15" fill="rgb(238,224,15)" fg:x="2449" fg:w="61"/><text x="54.3357%" y="350.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1192) (12 samples, 0.27%)</title><rect x="55.6758%" y="324" width="0.2650%" height="15" fill="rgb(241,136,10)" fg:x="2521" fg:w="12"/><text x="55.9258%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexing.py:256) (9 samples, 0.20%)</title><rect x="55.7420%" y="340" width="0.1988%" height="15" fill="rgb(208,32,45)" fg:x="2524" fg:w="9"/><text x="55.9920%" y="350.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/datetimelike.py:620) (5 samples, 0.11%)</title><rect x="55.8304%" y="356" width="0.1104%" height="15" fill="rgb(207,135,9)" fg:x="2528" fg:w="5"/><text x="56.0804%" y="366.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (20 samples, 0.44%)</title><rect x="56.0733%" y="356" width="0.4417%" height="15" fill="rgb(206,86,44)" fg:x="2539" fg:w="20"/><text x="56.3233%" y="366.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1205) (25 samples, 0.55%)</title><rect x="55.9850%" y="324" width="0.5521%" height="15" fill="rgb(245,177,15)" fg:x="2535" fg:w="25"/><text x="56.2350%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1426) (23 samples, 0.51%)</title><rect x="56.0292%" y="340" width="0.5080%" height="15" fill="rgb(206,64,50)" fg:x="2537" fg:w="23"/><text x="56.2792%" y="350.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:193) (58 samples, 1.28%)</title><rect x="55.5212%" y="292" width="1.2809%" height="15" fill="rgb(234,36,40)" fg:x="2514" fg:w="58"/><text x="55.7712%" y="302.50"></text></g><g><title>_get_setitem_indexer (pandas/core/indexing.py:179) (53 samples, 1.17%)</title><rect x="55.6316%" y="308" width="1.1705%" height="15" fill="rgb(213,64,8)" fg:x="2519" fg:w="53"/><text x="55.8816%" y="318.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:302) (5 samples, 0.11%)</title><rect x="56.8905%" y="308" width="0.1104%" height="15" fill="rgb(210,75,36)" fg:x="2576" fg:w="5"/><text x="57.1405%" y="318.50"></text></g><g><title>_is_mixed_type (pandas/core/generic.py:3713) (5 samples, 0.11%)</title><rect x="56.8905%" y="324" width="0.1104%" height="15" fill="rgb(229,88,21)" fg:x="2576" fg:w="5"/><text x="57.1405%" y="334.50"></text></g><g><title>_protect_consolidate (pandas/core/generic.py:3666) (5 samples, 0.11%)</title><rect x="56.8905%" y="340" width="0.1104%" height="15" fill="rgb(252,204,47)" fg:x="2576" fg:w="5"/><text x="57.1405%" y="350.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/generic.py:3712) (5 samples, 0.11%)</title><rect x="56.8905%" y="356" width="0.1104%" height="15" fill="rgb(208,77,27)" fg:x="2576" fg:w="5"/><text x="57.1405%" y="366.50"></text></g><g><title>is_mixed_type (pandas/core/internals.py:3540) (5 samples, 0.11%)</title><rect x="56.8905%" y="372" width="0.1104%" height="15" fill="rgb(221,76,26)" fg:x="2576" fg:w="5"/><text x="57.1405%" y="382.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:311) (8 samples, 0.18%)</title><rect x="57.0230%" y="308" width="0.1767%" height="15" fill="rgb(225,139,18)" fg:x="2582" fg:w="8"/><text x="57.2730%" y="318.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (5 samples, 0.11%)</title><rect x="57.5088%" y="372" width="0.1104%" height="15" fill="rgb(230,137,11)" fg:x="2604" fg:w="5"/><text x="57.7588%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (6 samples, 0.13%)</title><rect x="57.5088%" y="356" width="0.1325%" height="15" fill="rgb(212,28,1)" fg:x="2604" fg:w="6"/><text x="57.7588%" y="366.50"></text></g><g><title>_try_cast (pandas/core/series.py:3162) (6 samples, 0.13%)</title><rect x="57.6413%" y="356" width="0.1325%" height="15" fill="rgb(248,164,17)" fg:x="2610" fg:w="6"/><text x="57.8913%" y="366.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3228) (14 samples, 0.31%)</title><rect x="57.5088%" y="340" width="0.3092%" height="15" fill="rgb(222,171,42)" fg:x="2604" fg:w="14"/><text x="57.7588%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (23 samples, 0.51%)</title><rect x="57.4426%" y="324" width="0.5080%" height="15" fill="rgb(243,84,45)" fg:x="2601" fg:w="23"/><text x="57.6926%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3259) (6 samples, 0.13%)</title><rect x="57.8180%" y="340" width="0.1325%" height="15" fill="rgb(252,49,23)" fg:x="2618" fg:w="6"/><text x="58.0680%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (9 samples, 0.20%)</title><rect x="57.9505%" y="324" width="0.1988%" height="15" fill="rgb(215,19,7)" fg:x="2624" fg:w="9"/><text x="58.2005%" y="334.50"></text></g><g><title>__init__ (pandas/core/internals.py:4402) (6 samples, 0.13%)</title><rect x="58.0168%" y="340" width="0.1325%" height="15" fill="rgb(238,81,41)" fg:x="2627" fg:w="6"/><text x="58.2668%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (6 samples, 0.13%)</title><rect x="58.0168%" y="356" width="0.1325%" height="15" fill="rgb(210,199,37)" fg:x="2627" fg:w="6"/><text x="58.2668%" y="366.50"></text></g><g><title>_set_axis (pandas/core/series.py:306) (7 samples, 0.15%)</title><rect x="58.2818%" y="340" width="0.1546%" height="15" fill="rgb(244,192,49)" fg:x="2639" fg:w="7"/><text x="58.5318%" y="350.50"></text></g><g><title>is_all_dates (pandas/core/indexes/base.py:1639) (5 samples, 0.11%)</title><rect x="58.3260%" y="356" width="0.1104%" height="15" fill="rgb(226,211,11)" fg:x="2641" fg:w="5"/><text x="58.5760%" y="366.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:443) (51 samples, 1.13%)</title><rect x="57.3763%" y="308" width="1.1263%" height="15" fill="rgb(236,162,54)" fg:x="2598" fg:w="51"/><text x="57.6263%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:271) (10 samples, 0.22%)</title><rect x="58.2818%" y="324" width="0.2208%" height="15" fill="rgb(220,229,9)" fg:x="2639" fg:w="10"/><text x="58.5318%" y="334.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:298) (5 samples, 0.11%)</title><rect x="59.2756%" y="356" width="0.1104%" height="15" fill="rgb(250,87,22)" fg:x="2684" fg:w="5"/><text x="59.5256%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (14 samples, 0.31%)</title><rect x="59.3860%" y="356" width="0.3092%" height="15" fill="rgb(239,43,17)" fg:x="2689" fg:w="14"/><text x="59.6360%" y="366.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:294) (9 samples, 0.20%)</title><rect x="60.2473%" y="420" width="0.1988%" height="15" fill="rgb(231,177,25)" fg:x="2728" fg:w="9"/><text x="60.4973%" y="430.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:342) (25 samples, 0.55%)</title><rect x="60.0044%" y="388" width="0.5521%" height="15" fill="rgb(219,179,1)" fg:x="2717" fg:w="25"/><text x="60.2544%" y="398.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:380) (19 samples, 0.42%)</title><rect x="60.1369%" y="404" width="0.4196%" height="15" fill="rgb(238,219,53)" fg:x="2723" fg:w="19"/><text x="60.3869%" y="414.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:344) (5 samples, 0.11%)</title><rect x="60.5565%" y="388" width="0.1104%" height="15" fill="rgb(232,167,36)" fg:x="2742" fg:w="5"/><text x="60.8065%" y="398.50"></text></g><g><title>append (pandas/core/frame.py:5172) (98 samples, 2.16%)</title><rect x="58.6572%" y="324" width="2.1643%" height="15" fill="rgb(244,19,51)" fg:x="2656" fg:w="98"/><text x="58.9072%" y="334.50">a..</text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (86 samples, 1.90%)</title><rect x="58.9223%" y="340" width="1.8993%" height="15" fill="rgb(224,6,22)" fg:x="2668" fg:w="86"/><text x="59.1723%" y="350.50">_..</text></g><g><title>__new__ (pandas/core/indexes/base.py:335) (49 samples, 1.08%)</title><rect x="59.7394%" y="356" width="1.0822%" height="15" fill="rgb(224,145,5)" fg:x="2705" fg:w="49"/><text x="59.9894%" y="366.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (46 samples, 1.02%)</title><rect x="59.8057%" y="372" width="1.0159%" height="15" fill="rgb(234,130,49)" fg:x="2708" fg:w="46"/><text x="60.0557%" y="382.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:651) (5 samples, 0.11%)</title><rect x="60.8436%" y="356" width="0.1104%" height="15" fill="rgb(254,6,2)" fg:x="2755" fg:w="5"/><text x="61.0936%" y="366.50"></text></g><g><title>tolist (pandas/core/base.py:812) (6 samples, 0.13%)</title><rect x="60.8436%" y="340" width="0.1325%" height="15" fill="rgb(208,96,46)" fg:x="2755" fg:w="6"/><text x="61.0936%" y="350.50"></text></g><g><title>append (pandas/core/frame.py:5174) (8 samples, 0.18%)</title><rect x="60.8216%" y="324" width="0.1767%" height="15" fill="rgb(239,3,39)" fg:x="2754" fg:w="8"/><text x="61.0716%" y="334.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:374) (6 samples, 0.13%)</title><rect x="61.3516%" y="356" width="0.1325%" height="15" fill="rgb(233,210,1)" fg:x="2778" fg:w="6"/><text x="61.6016%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (5 samples, 0.11%)</title><rect x="61.7712%" y="372" width="0.1104%" height="15" fill="rgb(244,137,37)" fg:x="2797" fg:w="5"/><text x="62.0212%" y="382.50"></text></g><g><title>difference (pandas/core/indexes/base.py:2360) (37 samples, 0.82%)</title><rect x="61.1528%" y="340" width="0.8171%" height="15" fill="rgb(240,136,2)" fg:x="2769" fg:w="37"/><text x="61.4028%" y="350.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (22 samples, 0.49%)</title><rect x="61.4841%" y="356" width="0.4859%" height="15" fill="rgb(239,18,37)" fg:x="2784" fg:w="22"/><text x="61.7341%" y="366.50"></text></g><g><title>tolist (pandas/core/base.py:812) (5 samples, 0.11%)</title><rect x="61.9700%" y="340" width="0.1104%" height="15" fill="rgb(218,185,22)" fg:x="2806" fg:w="5"/><text x="62.2200%" y="350.50"></text></g><g><title>append (pandas/core/frame.py:5175) (52 samples, 1.15%)</title><rect x="60.9982%" y="324" width="1.1484%" height="15" fill="rgb(225,218,4)" fg:x="2762" fg:w="52"/><text x="61.2482%" y="334.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (10 samples, 0.22%)</title><rect x="62.5663%" y="404" width="0.2208%" height="15" fill="rgb(230,182,32)" fg:x="2833" fg:w="10"/><text x="62.8163%" y="414.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:298) (5 samples, 0.11%)</title><rect x="62.9638%" y="420" width="0.1104%" height="15" fill="rgb(242,56,43)" fg:x="2851" fg:w="5"/><text x="63.2138%" y="430.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (11 samples, 0.24%)</title><rect x="63.0742%" y="420" width="0.2429%" height="15" fill="rgb(233,99,24)" fg:x="2856" fg:w="11"/><text x="63.3242%" y="430.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2975) (35 samples, 0.77%)</title><rect x="62.5663%" y="388" width="0.7730%" height="15" fill="rgb(234,209,42)" fg:x="2833" fg:w="35"/><text x="62.8163%" y="398.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (25 samples, 0.55%)</title><rect x="62.7871%" y="404" width="0.5521%" height="15" fill="rgb(227,7,12)" fg:x="2843" fg:w="25"/><text x="63.0371%" y="414.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:3036) (50 samples, 1.10%)</title><rect x="62.5221%" y="372" width="1.1042%" height="15" fill="rgb(245,203,43)" fg:x="2831" fg:w="50"/><text x="62.7721%" y="382.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2983) (13 samples, 0.29%)</title><rect x="63.3392%" y="388" width="0.2871%" height="15" fill="rgb(238,205,33)" fg:x="2868" fg:w="13"/><text x="63.5892%" y="398.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (7 samples, 0.15%)</title><rect x="63.4717%" y="404" width="0.1546%" height="15" fill="rgb(231,56,7)" fg:x="2874" fg:w="7"/><text x="63.7217%" y="414.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (7 samples, 0.15%)</title><rect x="63.8251%" y="436" width="0.1546%" height="15" fill="rgb(244,186,29)" fg:x="2890" fg:w="7"/><text x="64.0751%" y="446.50"></text></g><g><title>copy (pandas/core/internals.py:737) (6 samples, 0.13%)</title><rect x="63.8472%" y="452" width="0.1325%" height="15" fill="rgb(234,111,31)" fg:x="2891" fg:w="6"/><text x="64.0972%" y="462.50"></text></g><g><title>make_block_same_class (pandas/core/internals.py:224) (6 samples, 0.13%)</title><rect x="63.8472%" y="468" width="0.1325%" height="15" fill="rgb(241,149,10)" fg:x="2891" fg:w="6"/><text x="64.0972%" y="478.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3145) (12 samples, 0.27%)</title><rect x="63.7588%" y="388" width="0.2650%" height="15" fill="rgb(249,206,44)" fg:x="2887" fg:w="12"/><text x="64.0088%" y="398.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4130) (11 samples, 0.24%)</title><rect x="63.7809%" y="404" width="0.2429%" height="15" fill="rgb(251,153,30)" fg:x="2888" fg:w="11"/><text x="64.0309%" y="414.50"></text></g><g><title>copy (pandas/core/internals.py:3664) (11 samples, 0.24%)</title><rect x="63.7809%" y="420" width="0.2429%" height="15" fill="rgb(239,152,38)" fg:x="2888" fg:w="11"/><text x="64.0309%" y="430.50"></text></g><g><title>_set_axis (pandas/core/series.py:306) (12 samples, 0.27%)</title><rect x="64.2668%" y="420" width="0.2650%" height="15" fill="rgb(249,139,47)" fg:x="2910" fg:w="12"/><text x="64.5168%" y="430.50"></text></g><g><title>is_all_dates (pandas/core/indexes/base.py:1639) (10 samples, 0.22%)</title><rect x="64.3110%" y="436" width="0.2208%" height="15" fill="rgb(244,64,35)" fg:x="2912" fg:w="10"/><text x="64.5610%" y="446.50"></text></g><g><title>append (pandas/core/frame.py:5176) (109 samples, 2.41%)</title><rect x="62.1466%" y="324" width="2.4072%" height="15" fill="rgb(216,46,15)" fg:x="2814" fg:w="109"/><text x="62.3966%" y="334.50">ap..</text></g><g><title>reindex (pandas/core/series.py:2681) (108 samples, 2.39%)</title><rect x="62.1687%" y="340" width="2.3852%" height="15" fill="rgb(250,74,19)" fg:x="2815" fg:w="108"/><text x="62.4187%" y="350.50">re..</text></g><g><title>reindex (pandas/core/generic.py:3023) (95 samples, 2.10%)</title><rect x="62.4558%" y="356" width="2.0981%" height="15" fill="rgb(249,42,33)" fg:x="2828" fg:w="95"/><text x="62.7058%" y="366.50">r..</text></g><g><title>_reindex_axes (pandas/core/generic.py:3041) (41 samples, 0.91%)</title><rect x="63.6484%" y="372" width="0.9055%" height="15" fill="rgb(242,149,17)" fg:x="2882" fg:w="41"/><text x="63.8984%" y="382.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3150) (24 samples, 0.53%)</title><rect x="64.0239%" y="388" width="0.5300%" height="15" fill="rgb(244,29,21)" fg:x="2899" fg:w="24"/><text x="64.2739%" y="398.50"></text></g><g><title>__init__ (pandas/core/series.py:271) (13 samples, 0.29%)</title><rect x="64.2668%" y="404" width="0.2871%" height="15" fill="rgb(220,130,37)" fg:x="2910" fg:w="13"/><text x="64.5168%" y="414.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (15 samples, 0.33%)</title><rect x="64.8852%" y="388" width="0.3313%" height="15" fill="rgb(211,67,2)" fg:x="2938" fg:w="15"/><text x="65.1352%" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:83) (5 samples, 0.11%)</title><rect x="65.1060%" y="404" width="0.1104%" height="15" fill="rgb(235,68,52)" fg:x="2948" fg:w="5"/><text x="65.3560%" y="414.50"></text></g><g><title>_init_ndarray (pandas/core/frame.py:524) (37 samples, 0.82%)</title><rect x="64.8631%" y="356" width="0.8171%" height="15" fill="rgb(246,142,3)" fg:x="2937" fg:w="37"/><text x="65.1131%" y="366.50"></text></g><g><title>_get_axes (pandas/core/frame.py:491) (37 samples, 0.82%)</title><rect x="64.8631%" y="372" width="0.8171%" height="15" fill="rgb(241,25,7)" fg:x="2937" fg:w="37"/><text x="65.1131%" y="382.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (21 samples, 0.46%)</title><rect x="65.2164%" y="388" width="0.4638%" height="15" fill="rgb(242,119,39)" fg:x="2953" fg:w="21"/><text x="65.4664%" y="398.50"></text></g><g><title>_verify_integrity (pandas/core/internals.py:3240) (5 samples, 0.11%)</title><rect x="65.8127%" y="404" width="0.1104%" height="15" fill="rgb(241,98,45)" fg:x="2980" fg:w="5"/><text x="66.0627%" y="414.50"></text></g><g><title>shape (pandas/core/internals.py:3060) (5 samples, 0.11%)</title><rect x="65.8127%" y="420" width="0.1104%" height="15" fill="rgb(254,28,30)" fg:x="2980" fg:w="5"/><text x="66.0627%" y="430.50"></text></g><g><title>__init__ (pandas/core/internals.py:3033) (9 samples, 0.20%)</title><rect x="65.8127%" y="388" width="0.1988%" height="15" fill="rgb(241,142,54)" fg:x="2980" fg:w="9"/><text x="66.0627%" y="398.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (13 samples, 0.29%)</title><rect x="66.0336%" y="404" width="0.2871%" height="15" fill="rgb(222,85,15)" fg:x="2990" fg:w="13"/><text x="66.2836%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (11 samples, 0.24%)</title><rect x="66.0777%" y="420" width="0.2429%" height="15" fill="rgb(210,85,47)" fg:x="2992" fg:w="11"/><text x="66.3277%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (11 samples, 0.24%)</title><rect x="66.0777%" y="436" width="0.2429%" height="15" fill="rgb(224,206,25)" fg:x="2992" fg:w="11"/><text x="66.3277%" y="446.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (9 samples, 0.20%)</title><rect x="66.1219%" y="452" width="0.1988%" height="15" fill="rgb(243,201,19)" fg:x="2994" fg:w="9"/><text x="66.3719%" y="462.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (15 samples, 0.33%)</title><rect x="66.0115%" y="388" width="0.3313%" height="15" fill="rgb(236,59,4)" fg:x="2989" fg:w="15"/><text x="66.2615%" y="398.50"></text></g><g><title>create_block_manager_from_blocks (pandas/core/internals.py:4624) (44 samples, 0.97%)</title><rect x="65.7244%" y="372" width="0.9717%" height="15" fill="rgb(254,179,45)" fg:x="2976" fg:w="44"/><text x="65.9744%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (16 samples, 0.35%)</title><rect x="66.3428%" y="388" width="0.3534%" height="15" fill="rgb(226,14,10)" fg:x="3004" fg:w="16"/><text x="66.5928%" y="398.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3128) (6 samples, 0.13%)</title><rect x="66.5636%" y="404" width="0.1325%" height="15" fill="rgb(244,27,41)" fg:x="3014" fg:w="6"/><text x="66.8136%" y="414.50"></text></g><g><title>__init__ (pandas/core/frame.py:361) (90 samples, 1.99%)</title><rect x="64.7306%" y="340" width="1.9876%" height="15" fill="rgb(235,35,32)" fg:x="2931" fg:w="90"/><text x="64.9806%" y="350.50">_..</text></g><g><title>_init_ndarray (pandas/core/frame.py:533) (47 samples, 1.04%)</title><rect x="65.6802%" y="356" width="1.0380%" height="15" fill="rgb(218,68,31)" fg:x="2974" fg:w="47"/><text x="65.9302%" y="366.50"></text></g><g><title>append (pandas/core/frame.py:5179) (95 samples, 2.10%)</title><rect x="64.6422%" y="324" width="2.0981%" height="15" fill="rgb(207,120,37)" fg:x="2927" fg:w="95"/><text x="64.8922%" y="334.50">a..</text></g><g><title>__init__ (pandas/core/internals.py:3035) (5 samples, 0.11%)</title><rect x="67.2041%" y="388" width="0.1104%" height="15" fill="rgb(227,98,0)" fg:x="3043" fg:w="5"/><text x="67.4541%" y="398.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (5 samples, 0.11%)</title><rect x="67.2041%" y="404" width="0.1104%" height="15" fill="rgb(207,7,3)" fg:x="3043" fg:w="5"/><text x="67.4541%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (5 samples, 0.11%)</title><rect x="67.2041%" y="420" width="0.1104%" height="15" fill="rgb(206,98,19)" fg:x="3043" fg:w="5"/><text x="67.4541%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (5 samples, 0.11%)</title><rect x="67.2041%" y="436" width="0.1104%" height="15" fill="rgb(217,5,26)" fg:x="3043" fg:w="5"/><text x="67.4541%" y="446.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (5 samples, 0.11%)</title><rect x="67.2041%" y="452" width="0.1104%" height="15" fill="rgb(235,190,38)" fg:x="3043" fg:w="5"/><text x="67.4541%" y="462.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3118) (5 samples, 0.11%)</title><rect x="67.3145%" y="404" width="0.1104%" height="15" fill="rgb(247,86,24)" fg:x="3048" fg:w="5"/><text x="67.5645%" y="414.50"></text></g><g><title>append (pandas/core/frame.py:5180) (40 samples, 0.88%)</title><rect x="66.7403%" y="324" width="0.8834%" height="15" fill="rgb(205,101,16)" fg:x="3022" fg:w="40"/><text x="66.9903%" y="334.50"></text></g><g><title>_convert (pandas/core/generic.py:4066) (40 samples, 0.88%)</title><rect x="66.7403%" y="340" width="0.8834%" height="15" fill="rgb(246,168,33)" fg:x="3022" fg:w="40"/><text x="66.9903%" y="350.50"></text></g><g><title>convert (pandas/core/internals.py:3465) (34 samples, 0.75%)</title><rect x="66.8728%" y="356" width="0.7509%" height="15" fill="rgb(231,114,1)" fg:x="3028" fg:w="34"/><text x="67.1228%" y="366.50"></text></g><g><title>apply (pandas/core/internals.py:3335) (22 samples, 0.49%)</title><rect x="67.1378%" y="372" width="0.4859%" height="15" fill="rgb(207,184,53)" fg:x="3040" fg:w="22"/><text x="67.3878%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (14 samples, 0.31%)</title><rect x="67.3145%" y="388" width="0.3092%" height="15" fill="rgb(224,95,51)" fg:x="3048" fg:w="14"/><text x="67.5645%" y="398.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3128) (6 samples, 0.13%)</title><rect x="67.4912%" y="404" width="0.1325%" height="15" fill="rgb(212,188,45)" fg:x="3056" fg:w="6"/><text x="67.7412%" y="414.50"></text></g><g><title>reindex (pandas/core/frame.py:2930) (5 samples, 0.11%)</title><rect x="67.7120%" y="356" width="0.1104%" height="15" fill="rgb(223,154,38)" fg:x="3066" fg:w="5"/><text x="67.9620%" y="366.50"></text></g><g><title>validate_axis_style_args (pandas/util/_validators.py:288) (5 samples, 0.11%)</title><rect x="67.7120%" y="372" width="0.1104%" height="15" fill="rgb(251,22,52)" fg:x="3066" fg:w="5"/><text x="67.9620%" y="382.50"></text></g><g><title>reindex (pandas/core/generic.py:3015) (6 samples, 0.13%)</title><rect x="68.1095%" y="372" width="0.1325%" height="15" fill="rgb(229,209,22)" fg:x="3084" fg:w="6"/><text x="68.3595%" y="382.50"></text></g><g><title>_needs_reindex_multi (pandas/core/generic.py:3047) (6 samples, 0.13%)</title><rect x="68.1095%" y="388" width="0.1325%" height="15" fill="rgb(234,138,34)" fg:x="3084" fg:w="6"/><text x="68.3595%" y="398.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (15 samples, 0.33%)</title><rect x="68.3304%" y="436" width="0.3313%" height="15" fill="rgb(212,95,11)" fg:x="3094" fg:w="15"/><text x="68.5804%" y="446.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:298) (6 samples, 0.13%)</title><rect x="68.8383%" y="452" width="0.1325%" height="15" fill="rgb(240,179,47)" fg:x="3117" fg:w="6"/><text x="69.0883%" y="462.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (5 samples, 0.11%)</title><rect x="68.9708%" y="452" width="0.1104%" height="15" fill="rgb(240,163,11)" fg:x="3123" fg:w="5"/><text x="69.2208%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2975) (37 samples, 0.82%)</title><rect x="68.3083%" y="420" width="0.8171%" height="15" fill="rgb(236,37,12)" fg:x="3093" fg:w="37"/><text x="68.5583%" y="430.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (21 samples, 0.46%)</title><rect x="68.6617%" y="436" width="0.4638%" height="15" fill="rgb(232,164,16)" fg:x="3109" fg:w="21"/><text x="68.9117%" y="446.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (5 samples, 0.11%)</title><rect x="69.2800%" y="452" width="0.1104%" height="15" fill="rgb(244,205,15)" fg:x="3137" fg:w="5"/><text x="69.5300%" y="462.50"></text></g><g><title>_reindex_columns (pandas/core/frame.py:2887) (58 samples, 1.28%)</title><rect x="68.2641%" y="404" width="1.2809%" height="15" fill="rgb(223,117,47)" fg:x="3091" fg:w="58"/><text x="68.5141%" y="414.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2983) (19 samples, 0.42%)</title><rect x="69.1254%" y="420" width="0.4196%" height="15" fill="rgb(244,107,35)" fg:x="3130" fg:w="19"/><text x="69.3754%" y="430.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (13 samples, 0.29%)</title><rect x="69.2580%" y="436" width="0.2871%" height="15" fill="rgb(205,140,8)" fg:x="3136" fg:w="13"/><text x="69.5080%" y="446.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:299) (7 samples, 0.15%)</title><rect x="69.3905%" y="452" width="0.1546%" height="15" fill="rgb(228,84,46)" fg:x="3142" fg:w="7"/><text x="69.6405%" y="462.50"></text></g><g><title>_shallow_copy (pandas/core/indexes/base.py:437) (6 samples, 0.13%)</title><rect x="69.7217%" y="516" width="0.1325%" height="15" fill="rgb(254,188,9)" fg:x="3157" fg:w="6"/><text x="69.9717%" y="526.50"></text></g><g><title>_get_attributes_dict (pandas/core/indexes/base.py:735) (6 samples, 0.13%)</title><rect x="69.7217%" y="532" width="0.1325%" height="15" fill="rgb(206,112,54)" fg:x="3157" fg:w="6"/><text x="69.9717%" y="542.50"></text></g><g><title>view (pandas/core/indexes/base.py:744) (15 samples, 0.33%)</title><rect x="69.6996%" y="500" width="0.3313%" height="15" fill="rgb(216,84,49)" fg:x="3156" fg:w="15"/><text x="69.9496%" y="510.50"></text></g><g><title>_shallow_copy (pandas/core/indexes/base.py:439) (8 samples, 0.18%)</title><rect x="69.8542%" y="516" width="0.1767%" height="15" fill="rgb(214,194,35)" fg:x="3163" fg:w="8"/><text x="70.1042%" y="526.50"></text></g><g><title>copy (pandas/core/internals.py:3660) (18 samples, 0.40%)</title><rect x="69.6555%" y="452" width="0.3975%" height="15" fill="rgb(249,28,3)" fg:x="3154" fg:w="18"/><text x="69.9055%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3660) (17 samples, 0.38%)</title><rect x="69.6776%" y="468" width="0.3754%" height="15" fill="rgb(222,56,52)" fg:x="3155" fg:w="17"/><text x="69.9276%" y="478.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals.py:3659) (16 samples, 0.35%)</title><rect x="69.6996%" y="484" width="0.3534%" height="15" fill="rgb(245,217,50)" fg:x="3156" fg:w="16"/><text x="69.9496%" y="494.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (9 samples, 0.20%)</title><rect x="70.0972%" y="468" width="0.1988%" height="15" fill="rgb(213,201,24)" fg:x="3174" fg:w="9"/><text x="70.3472%" y="478.50"></text></g><g><title>copy (pandas/core/internals.py:737) (7 samples, 0.15%)</title><rect x="70.1413%" y="484" width="0.1546%" height="15" fill="rgb(248,116,28)" fg:x="3176" fg:w="7"/><text x="70.3913%" y="494.50"></text></g><g><title>make_block_same_class (pandas/core/internals.py:224) (7 samples, 0.15%)</title><rect x="70.1413%" y="500" width="0.1546%" height="15" fill="rgb(219,72,43)" fg:x="3176" fg:w="7"/><text x="70.3913%" y="510.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (11 samples, 0.24%)</title><rect x="70.4064%" y="500" width="0.2429%" height="15" fill="rgb(209,138,14)" fg:x="3188" fg:w="11"/><text x="70.6564%" y="510.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (11 samples, 0.24%)</title><rect x="70.4064%" y="516" width="0.2429%" height="15" fill="rgb(222,18,33)" fg:x="3188" fg:w="11"/><text x="70.6564%" y="526.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (11 samples, 0.24%)</title><rect x="70.4064%" y="532" width="0.2429%" height="15" fill="rgb(213,199,7)" fg:x="3188" fg:w="11"/><text x="70.6564%" y="542.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (5 samples, 0.11%)</title><rect x="70.5389%" y="548" width="0.1104%" height="15" fill="rgb(250,110,10)" fg:x="3194" fg:w="5"/><text x="70.7889%" y="558.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (13 samples, 0.29%)</title><rect x="70.4064%" y="484" width="0.2871%" height="15" fill="rgb(248,123,6)" fg:x="3188" fg:w="13"/><text x="70.6564%" y="494.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3118) (6 samples, 0.13%)</title><rect x="70.7155%" y="500" width="0.1325%" height="15" fill="rgb(206,91,31)" fg:x="3202" fg:w="6"/><text x="70.9655%" y="510.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3145) (70 samples, 1.55%)</title><rect x="69.6555%" y="420" width="1.5459%" height="15" fill="rgb(211,154,13)" fg:x="3154" fg:w="70"/><text x="69.9055%" y="430.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4130) (70 samples, 1.55%)</title><rect x="69.6555%" y="436" width="1.5459%" height="15" fill="rgb(225,148,7)" fg:x="3154" fg:w="70"/><text x="69.9055%" y="446.50"></text></g><g><title>copy (pandas/core/internals.py:3664) (52 samples, 1.15%)</title><rect x="70.0530%" y="452" width="1.1484%" height="15" fill="rgb(220,160,43)" fg:x="3172" fg:w="52"/><text x="70.3030%" y="462.50"></text></g><g><title>apply (pandas/core/internals.py:3335) (39 samples, 0.86%)</title><rect x="70.3401%" y="468" width="0.8613%" height="15" fill="rgb(213,52,39)" fg:x="3185" fg:w="39"/><text x="70.5901%" y="478.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (23 samples, 0.51%)</title><rect x="70.6935%" y="484" width="0.5080%" height="15" fill="rgb(243,137,7)" fg:x="3201" fg:w="23"/><text x="70.9435%" y="494.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3128) (6 samples, 0.13%)</title><rect x="71.0689%" y="500" width="0.1325%" height="15" fill="rgb(230,79,13)" fg:x="3218" fg:w="6"/><text x="71.3189%" y="510.50"></text></g><g><title>append (pandas/core/frame.py:5182) (163 samples, 3.60%)</title><rect x="67.6458%" y="324" width="3.5998%" height="15" fill="rgb(247,105,23)" fg:x="3063" fg:w="163"/><text x="67.8958%" y="334.50">appe..</text></g><g><title>wrapper (pandas/util/_decorators.py:127) (160 samples, 3.53%)</title><rect x="67.7120%" y="340" width="3.5336%" height="15" fill="rgb(223,179,41)" fg:x="3066" fg:w="160"/><text x="67.9620%" y="350.50">wra..</text></g><g><title>reindex (pandas/core/frame.py:2935) (154 samples, 3.40%)</title><rect x="67.8445%" y="356" width="3.4011%" height="15" fill="rgb(218,9,34)" fg:x="3072" fg:w="154"/><text x="68.0945%" y="366.50">rei..</text></g><g><title>reindex (pandas/core/generic.py:3023) (136 samples, 3.00%)</title><rect x="68.2420%" y="372" width="3.0035%" height="15" fill="rgb(222,106,8)" fg:x="3090" fg:w="136"/><text x="68.4920%" y="382.50">rei..</text></g><g><title>_reindex_axes (pandas/core/frame.py:2865) (136 samples, 3.00%)</title><rect x="68.2420%" y="388" width="3.0035%" height="15" fill="rgb(211,220,0)" fg:x="3090" fg:w="136"/><text x="68.4920%" y="398.50">_re..</text></g><g><title>_reindex_columns (pandas/core/frame.py:2890) (77 samples, 1.70%)</title><rect x="69.5451%" y="404" width="1.7005%" height="15" fill="rgb(229,52,16)" fg:x="3149" fg:w="77"/><text x="69.7951%" y="414.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:275) (5 samples, 0.11%)</title><rect x="71.5327%" y="356" width="0.1104%" height="15" fill="rgb(212,155,18)" fg:x="3239" fg:w="5"/><text x="71.7827%" y="366.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:544) (5 samples, 0.11%)</title><rect x="72.2173%" y="484" width="0.1104%" height="15" fill="rgb(242,21,14)" fg:x="3270" fg:w="5"/><text x="72.4673%" y="494.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (7 samples, 0.15%)</title><rect x="72.2173%" y="468" width="0.1546%" height="15" fill="rgb(222,19,48)" fg:x="3270" fg:w="7"/><text x="72.4673%" y="478.50"></text></g><g><title>_union_indexes (pandas/core/indexes/api.py:92) (22 samples, 0.49%)</title><rect x="72.0186%" y="436" width="0.4859%" height="15" fill="rgb(232,45,27)" fg:x="3261" fg:w="22"/><text x="72.2686%" y="446.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (17 samples, 0.38%)</title><rect x="72.1290%" y="452" width="0.3754%" height="15" fill="rgb(249,103,42)" fg:x="3266" fg:w="17"/><text x="72.3790%" y="462.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:299) (5 samples, 0.11%)</title><rect x="72.3940%" y="468" width="0.1104%" height="15" fill="rgb(246,81,33)" fg:x="3278" fg:w="5"/><text x="72.6440%" y="478.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:57) (26 samples, 0.57%)</title><rect x="71.9744%" y="420" width="0.5742%" height="15" fill="rgb(252,33,42)" fg:x="3259" fg:w="26"/><text x="72.2244%" y="430.50"></text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:430) (32 samples, 0.71%)</title><rect x="71.8860%" y="372" width="0.7067%" height="15" fill="rgb(209,212,41)" fg:x="3255" fg:w="32"/><text x="72.1360%" y="382.50"></text></g><g><title>_get_comb_axis (pandas/core/reshape/concat.py:450) (31 samples, 0.68%)</title><rect x="71.9081%" y="388" width="0.6846%" height="15" fill="rgb(207,154,6)" fg:x="3256" fg:w="31"/><text x="72.1581%" y="398.50"></text></g><g><title>_get_objs_combined_axis (pandas/core/indexes/api.py:42) (30 samples, 0.66%)</title><rect x="71.9302%" y="404" width="0.6625%" height="15" fill="rgb(223,64,47)" fg:x="3257" fg:w="30"/><text x="72.1802%" y="414.50"></text></g><g><title>construct_from_string (pandas/core/dtypes/dtypes.py:274) (7 samples, 0.15%)</title><rect x="72.9461%" y="500" width="0.1546%" height="15" fill="rgb(211,161,38)" fg:x="3303" fg:w="7"/><text x="73.1961%" y="510.50"></text></g><g><title>__eq__ (pandas/core/dtypes/dtypes.py:454) (7 samples, 0.15%)</title><rect x="72.9461%" y="516" width="0.1546%" height="15" fill="rgb(219,138,40)" fg:x="3303" fg:w="7"/><text x="73.1961%" y="526.50"></text></g><g><title>name (pandas/core/dtypes/dtypes.py:446) (5 samples, 0.11%)</title><rect x="72.9903%" y="532" width="0.1104%" height="15" fill="rgb(241,228,46)" fg:x="3305" fg:w="5"/><text x="73.2403%" y="542.50"></text></g><g><title>get_dtype_kinds (pandas/core/dtypes/concat.py:40) (13 samples, 0.29%)</title><rect x="72.8799%" y="452" width="0.2871%" height="15" fill="rgb(223,209,38)" fg:x="3300" fg:w="13"/><text x="73.1299%" y="462.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (13 samples, 0.29%)</title><rect x="72.8799%" y="468" width="0.2871%" height="15" fill="rgb(236,164,45)" fg:x="3300" fg:w="13"/><text x="73.1299%" y="478.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:99) (10 samples, 0.22%)</title><rect x="72.9461%" y="484" width="0.2208%" height="15" fill="rgb(231,15,5)" fg:x="3303" fg:w="10"/><text x="73.1961%" y="494.50"></text></g><g><title>_concat (pandas/core/indexes/base.py:1791) (24 samples, 0.53%)</title><rect x="72.7694%" y="436" width="0.5300%" height="15" fill="rgb(252,35,15)" fg:x="3295" fg:w="24"/><text x="73.0194%" y="446.50"></text></g><g><title>_concat_datetimetz (pandas/core/dtypes/concat.py:466) (8 samples, 0.18%)</title><rect x="73.3657%" y="468" width="0.1767%" height="15" fill="rgb(248,181,18)" fg:x="3322" fg:w="8"/><text x="73.6157%" y="478.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:212) (108 samples, 2.39%)</title><rect x="71.3560%" y="340" width="2.3852%" height="15" fill="rgb(233,39,42)" fg:x="3231" fg:w="108"/><text x="71.6060%" y="350.50">co..</text></g><g><title>__init__ (pandas/core/reshape/concat.py:363) (87 samples, 1.92%)</title><rect x="71.8198%" y="356" width="1.9214%" height="15" fill="rgb(238,110,33)" fg:x="3252" fg:w="87"/><text x="72.0698%" y="366.50">_..</text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:443) (52 samples, 1.15%)</title><rect x="72.5928%" y="372" width="1.1484%" height="15" fill="rgb(233,195,10)" fg:x="3287" fg:w="52"/><text x="72.8428%" y="382.50"></text></g><g><title>_get_concat_axis (pandas/core/reshape/concat.py:495) (47 samples, 1.04%)</title><rect x="72.7032%" y="388" width="1.0380%" height="15" fill="rgb(254,105,3)" fg:x="3292" fg:w="47"/><text x="72.9532%" y="398.50"></text></g><g><title>_concat_indexes (pandas/core/reshape/concat.py:513) (47 samples, 1.04%)</title><rect x="72.7032%" y="404" width="1.0380%" height="15" fill="rgb(221,225,9)" fg:x="3292" fg:w="47"/><text x="72.9532%" y="414.50"></text></g><g><title>append (pandas/core/indexes/base.py:1787) (44 samples, 0.97%)</title><rect x="72.7694%" y="420" width="0.9717%" height="15" fill="rgb(224,227,45)" fg:x="3295" fg:w="44"/><text x="73.0194%" y="430.50"></text></g><g><title>_concat (pandas/core/indexes/base.py:1794) (20 samples, 0.44%)</title><rect x="73.2995%" y="436" width="0.4417%" height="15" fill="rgb(229,198,43)" fg:x="3319" fg:w="20"/><text x="73.5495%" y="446.50"></text></g><g><title>_concat_same_dtype (pandas/core/indexes/datetimelike.py:847) (18 samples, 0.40%)</title><rect x="73.3436%" y="452" width="0.3975%" height="15" fill="rgb(206,209,35)" fg:x="3321" fg:w="18"/><text x="73.5936%" y="462.50"></text></g><g><title>_concat_datetimetz (pandas/core/dtypes/concat.py:467) (9 samples, 0.20%)</title><rect x="73.5424%" y="468" width="0.1988%" height="15" fill="rgb(245,195,53)" fg:x="3330" fg:w="9"/><text x="73.7924%" y="478.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (6 samples, 0.13%)</title><rect x="73.8737%" y="388" width="0.1325%" height="15" fill="rgb(240,92,26)" fg:x="3345" fg:w="6"/><text x="74.1237%" y="398.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:401) (14 samples, 0.31%)</title><rect x="73.7633%" y="356" width="0.3092%" height="15" fill="rgb(207,40,23)" fg:x="3340" fg:w="14"/><text x="74.0133%" y="366.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (11 samples, 0.24%)</title><rect x="73.8295%" y="372" width="0.2429%" height="15" fill="rgb(223,111,35)" fg:x="3343" fg:w="11"/><text x="74.0795%" y="382.50"></text></g><g><title>get_mgr_concatenation_plan (pandas/core/internals.py:5361) (7 samples, 0.15%)</title><rect x="74.0945%" y="404" width="0.1546%" height="15" fill="rgb(229,147,28)" fg:x="3355" fg:w="7"/><text x="74.3445%" y="414.50"></text></g><g><title>shape (pandas/core/internals.py:3060) (5 samples, 0.11%)</title><rect x="74.1387%" y="420" width="0.1104%" height="15" fill="rgb(211,29,28)" fg:x="3357" fg:w="5"/><text x="74.3887%" y="430.50"></text></g><g><title>get_mgr_concatenation_plan (pandas/core/internals.py:5372) (8 samples, 0.18%)</title><rect x="74.2491%" y="404" width="0.1767%" height="15" fill="rgb(228,72,33)" fg:x="3362" fg:w="8"/><text x="74.4991%" y="414.50"></text></g><g><title>_is_single_block (pandas/core/internals.py:3112) (5 samples, 0.11%)</title><rect x="74.3154%" y="420" width="0.1104%" height="15" fill="rgb(205,214,31)" fg:x="3365" fg:w="5"/><text x="74.5654%" y="430.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5184) (18 samples, 0.40%)</title><rect x="74.0945%" y="372" width="0.3975%" height="15" fill="rgb(224,111,15)" fg:x="3355" fg:w="18"/><text x="74.3445%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5184) (18 samples, 0.40%)</title><rect x="74.0945%" y="388" width="0.3975%" height="15" fill="rgb(253,21,26)" fg:x="3355" fg:w="18"/><text x="74.3445%" y="398.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5188) (10 samples, 0.22%)</title><rect x="74.4920%" y="372" width="0.2208%" height="15" fill="rgb(245,139,43)" fg:x="3373" fg:w="10"/><text x="74.7420%" y="382.50"></text></g><g><title>_all (numpy/core/_methods.py:57) (5 samples, 0.11%)</title><rect x="75.0883%" y="436" width="0.1104%" height="15" fill="rgb(252,170,7)" fg:x="3400" fg:w="5"/><text x="75.3383%" y="446.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:52) (6 samples, 0.13%)</title><rect x="75.1988%" y="452" width="0.1325%" height="15" fill="rgb(231,118,14)" fg:x="3405" fg:w="6"/><text x="75.4488%" y="462.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:153) (7 samples, 0.15%)</title><rect x="75.4859%" y="468" width="0.1546%" height="15" fill="rgb(238,83,0)" fg:x="3418" fg:w="7"/><text x="75.7359%" y="478.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5198) (46 samples, 1.02%)</title><rect x="74.7129%" y="372" width="1.0159%" height="15" fill="rgb(221,39,39)" fg:x="3383" fg:w="46"/><text x="74.9629%" y="382.50"></text></g><g><title>is_uniform_join_units (pandas/core/internals.py:5221) (44 samples, 0.97%)</title><rect x="74.7571%" y="388" width="0.9717%" height="15" fill="rgb(222,119,46)" fg:x="3385" fg:w="44"/><text x="75.0071%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5221) (41 samples, 0.91%)</title><rect x="74.8233%" y="404" width="0.9055%" height="15" fill="rgb(222,165,49)" fg:x="3388" fg:w="41"/><text x="75.0733%" y="414.50"></text></g><g><title>is_na (pandas/core/internals.py:5574) (33 samples, 0.73%)</title><rect x="75.0000%" y="420" width="0.7288%" height="15" fill="rgb(219,113,52)" fg:x="3396" fg:w="33"/><text x="75.2500%" y="430.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (24 samples, 0.53%)</title><rect x="75.1988%" y="436" width="0.5300%" height="15" fill="rgb(214,7,15)" fg:x="3405" fg:w="24"/><text x="75.4488%" y="446.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:58) (16 samples, 0.35%)</title><rect x="75.3754%" y="452" width="0.3534%" height="15" fill="rgb(235,32,4)" fg:x="3413" fg:w="16"/><text x="75.6254%" y="462.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:335) (8 samples, 0.18%)</title><rect x="76.1042%" y="420" width="0.1767%" height="15" fill="rgb(238,90,54)" fg:x="3446" fg:w="8"/><text x="76.3542%" y="430.50"></text></g><g><title>_name_includes_bit_suffix (numpy/core/_dtype.py:314) (6 samples, 0.13%)</title><rect x="76.1484%" y="436" width="0.1325%" height="15" fill="rgb(213,208,19)" fg:x="3448" fg:w="6"/><text x="76.3984%" y="446.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:387) (5 samples, 0.11%)</title><rect x="76.1705%" y="452" width="0.1104%" height="15" fill="rgb(233,156,4)" fg:x="3449" fg:w="5"/><text x="76.4205%" y="462.50"></text></g><g><title>get_empty_dtype_and_na (pandas/core/internals.py:5274) (15 samples, 0.33%)</title><rect x="75.9938%" y="404" width="0.3313%" height="15" fill="rgb(207,194,5)" fg:x="3441" fg:w="15"/><text x="76.2438%" y="414.50"></text></g><g><title>get_empty_dtype_and_na (pandas/core/internals.py:5307) (5 samples, 0.11%)</title><rect x="76.3693%" y="404" width="0.1104%" height="15" fill="rgb(206,111,30)" fg:x="3458" fg:w="5"/><text x="76.6193%" y="414.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5328) (36 samples, 0.80%)</title><rect x="75.7288%" y="388" width="0.7951%" height="15" fill="rgb(243,70,54)" fg:x="3429" fg:w="36"/><text x="75.9788%" y="398.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5332) (11 samples, 0.24%)</title><rect x="76.5239%" y="388" width="0.2429%" height="15" fill="rgb(242,28,8)" fg:x="3465" fg:w="11"/><text x="76.7739%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5332) (11 samples, 0.24%)</title><rect x="76.5239%" y="404" width="0.2429%" height="15" fill="rgb(219,106,18)" fg:x="3465" fg:w="11"/><text x="76.7739%" y="414.50"></text></g><g><title>_concat_compat (pandas/core/dtypes/concat.py:136) (10 samples, 0.22%)</title><rect x="76.8772%" y="404" width="0.2208%" height="15" fill="rgb(244,222,10)" fg:x="3481" fg:w="10"/><text x="77.1272%" y="414.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5203) (70 samples, 1.55%)</title><rect x="75.7288%" y="372" width="1.5459%" height="15" fill="rgb(236,179,52)" fg:x="3429" fg:w="70"/><text x="75.9788%" y="382.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5340) (22 samples, 0.49%)</title><rect x="76.7889%" y="388" width="0.4859%" height="15" fill="rgb(213,23,39)" fg:x="3477" fg:w="22"/><text x="77.0389%" y="398.50"></text></g><g><title>_concat_compat (pandas/core/dtypes/concat.py:168) (7 samples, 0.15%)</title><rect x="77.1201%" y="404" width="0.1546%" height="15" fill="rgb(238,48,10)" fg:x="3492" fg:w="7"/><text x="77.3701%" y="414.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5204) (6 samples, 0.13%)</title><rect x="77.2747%" y="372" width="0.1325%" height="15" fill="rgb(251,196,23)" fg:x="3499" fg:w="6"/><text x="77.5247%" y="382.50"></text></g><g><title>make_block (pandas/core/internals.py:2957) (5 samples, 0.11%)</title><rect x="77.2968%" y="388" width="0.1104%" height="15" fill="rgb(250,152,24)" fg:x="3500" fg:w="5"/><text x="77.5468%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:3033) (5 samples, 0.11%)</title><rect x="77.4072%" y="388" width="0.1104%" height="15" fill="rgb(209,150,17)" fg:x="3505" fg:w="5"/><text x="77.6572%" y="398.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (11 samples, 0.24%)</title><rect x="77.5398%" y="404" width="0.2429%" height="15" fill="rgb(234,202,34)" fg:x="3511" fg:w="11"/><text x="77.7898%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (11 samples, 0.24%)</title><rect x="77.5398%" y="420" width="0.2429%" height="15" fill="rgb(253,148,53)" fg:x="3511" fg:w="11"/><text x="77.7898%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (10 samples, 0.22%)</title><rect x="77.5618%" y="436" width="0.2208%" height="15" fill="rgb(218,129,16)" fg:x="3512" fg:w="10"/><text x="77.8118%" y="446.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (14 samples, 0.31%)</title><rect x="77.5177%" y="388" width="0.3092%" height="15" fill="rgb(216,85,19)" fg:x="3510" fg:w="14"/><text x="77.7677%" y="398.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3118) (6 samples, 0.13%)</title><rect x="77.8489%" y="404" width="0.1325%" height="15" fill="rgb(235,228,7)" fg:x="3525" fg:w="6"/><text x="78.0989%" y="414.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3126) (7 samples, 0.15%)</title><rect x="78.0698%" y="404" width="0.1546%" height="15" fill="rgb(245,175,0)" fg:x="3535" fg:w="7"/><text x="78.3198%" y="414.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:408) (190 samples, 4.20%)</title><rect x="74.0724%" y="356" width="4.1961%" height="15" fill="rgb(208,168,36)" fg:x="3354" fg:w="190"/><text x="74.3224%" y="366.50">get_r..</text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5207) (39 samples, 0.86%)</title><rect x="77.4072%" y="372" width="0.8613%" height="15" fill="rgb(246,171,24)" fg:x="3505" fg:w="39"/><text x="77.6572%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (20 samples, 0.44%)</title><rect x="77.8269%" y="388" width="0.4417%" height="15" fill="rgb(215,142,24)" fg:x="3524" fg:w="20"/><text x="78.0769%" y="398.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:445) (905 samples, 19.99%)</title><rect x="58.5027%" y="308" width="19.9867%" height="15" fill="rgb(250,187,7)" fg:x="2649" fg:w="905"/><text x="58.7527%" y="318.50">_setitem_with_indexer (pandas/c..</text></g><g><title>append (pandas/core/frame.py:5194) (324 samples, 7.16%)</title><rect x="71.3339%" y="324" width="7.1555%" height="15" fill="rgb(228,66,33)" fg:x="3230" fg:w="324"/><text x="71.5839%" y="334.50">append (pa..</text></g><g><title>concat (pandas/core/reshape/concat.py:213) (215 samples, 4.75%)</title><rect x="73.7412%" y="340" width="4.7482%" height="15" fill="rgb(234,215,21)" fg:x="3339" fg:w="215"/><text x="73.9912%" y="350.50">concat..</text></g><g><title>get_result (pandas/core/reshape/concat.py:413) (9 samples, 0.20%)</title><rect x="78.2906%" y="356" width="0.1988%" height="15" fill="rgb(222,191,20)" fg:x="3545" fg:w="9"/><text x="78.5406%" y="366.50"></text></g><g><title>_from_axes (pandas/core/generic.py:338) (8 samples, 0.18%)</title><rect x="78.3127%" y="372" width="0.1767%" height="15" fill="rgb(245,79,54)" fg:x="3546" fg:w="8"/><text x="78.5627%" y="382.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (983 samples, 21.71%)</title><rect x="56.8021%" y="292" width="21.7094%" height="15" fill="rgb(240,10,37)" fg:x="2572" fg:w="983"/><text x="57.0521%" y="302.50">__setitem__ (pandas/core/indexing...</text></g><g><title>parse_csv_kline_d1 (extension.py:166) (1,046 samples, 23.10%)</title><rect x="55.4329%" y="276" width="23.1007%" height="15" fill="rgb(214,192,32)" fg:x="2510" fg:w="1046"/><text x="55.6829%" y="286.50">parse_csv_kline_d1 (extension.py:166)</text></g><g><title>sort_index (pandas/core/frame.py:3694) (6 samples, 0.13%)</title><rect x="78.5777%" y="292" width="0.1325%" height="15" fill="rgb(209,36,54)" fg:x="3558" fg:w="6"/><text x="78.8277%" y="302.50"></text></g><g><title>sort_index (pandas/core/frame.py:3699) (7 samples, 0.15%)</title><rect x="78.7323%" y="292" width="0.1546%" height="15" fill="rgb(220,10,11)" fg:x="3565" fg:w="7"/><text x="78.9823%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:167) (17 samples, 0.38%)</title><rect x="78.5336%" y="276" width="0.3754%" height="15" fill="rgb(221,106,17)" fg:x="3556" fg:w="17"/><text x="78.7836%" y="286.50"></text></g><g><title>replace (pandas/core/internals.py:755) (5 samples, 0.11%)</title><rect x="79.0857%" y="372" width="0.1104%" height="15" fill="rgb(251,142,44)" fg:x="3581" fg:w="5"/><text x="79.3357%" y="382.50"></text></g><g><title>f (pandas/core/internals.py:2125) (12 samples, 0.27%)</title><rect x="79.2182%" y="436" width="0.2650%" height="15" fill="rgb(238,13,15)" fg:x="3587" fg:w="12"/><text x="79.4682%" y="446.50"></text></g><g><title>soft_convert_objects (pandas/core/dtypes/cast.py:807) (11 samples, 0.24%)</title><rect x="79.2403%" y="452" width="0.2429%" height="15" fill="rgb(208,107,27)" fg:x="3588" fg:w="11"/><text x="79.4903%" y="462.50"></text></g><g><title>split_and_operate (pandas/core/internals.py:478) (13 samples, 0.29%)</title><rect x="79.2182%" y="420" width="0.2871%" height="15" fill="rgb(205,136,37)" fg:x="3587" fg:w="13"/><text x="79.4682%" y="430.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (25 samples, 0.55%)</title><rect x="78.9753%" y="324" width="0.5521%" height="15" fill="rgb(250,205,27)" fg:x="3576" fg:w="25"/><text x="79.2253%" y="334.50"></text></g><g><title>replace (pandas/core/internals.py:771) (21 samples, 0.46%)</title><rect x="79.0636%" y="340" width="0.4638%" height="15" fill="rgb(210,80,43)" fg:x="3580" fg:w="21"/><text x="79.3136%" y="350.50"></text></g><g><title>replace (pandas/core/internals.py:2216) (20 samples, 0.44%)</title><rect x="79.0857%" y="356" width="0.4417%" height="15" fill="rgb(247,160,36)" fg:x="3581" fg:w="20"/><text x="79.3357%" y="366.50"></text></g><g><title>replace (pandas/core/internals.py:763) (14 samples, 0.31%)</title><rect x="79.2182%" y="372" width="0.3092%" height="15" fill="rgb(234,13,49)" fg:x="3587" fg:w="14"/><text x="79.4682%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:763) (14 samples, 0.31%)</title><rect x="79.2182%" y="388" width="0.3092%" height="15" fill="rgb(234,122,0)" fg:x="3587" fg:w="14"/><text x="79.4682%" y="398.50"></text></g><g><title>convert (pandas/core/internals.py:2135) (14 samples, 0.31%)</title><rect x="79.2182%" y="404" width="0.3092%" height="15" fill="rgb(207,146,38)" fg:x="3587" fg:w="14"/><text x="79.4682%" y="414.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals.py:3831) (5 samples, 0.11%)</title><rect x="79.6157%" y="340" width="0.1104%" height="15" fill="rgb(207,177,25)" fg:x="3605" fg:w="5"/><text x="79.8657%" y="350.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:170) (38 samples, 0.84%)</title><rect x="78.9090%" y="276" width="0.8392%" height="15" fill="rgb(211,178,42)" fg:x="3573" fg:w="38"/><text x="79.1590%" y="286.50"></text></g><g><title>replace (pandas/core/generic.py:4612) (37 samples, 0.82%)</title><rect x="78.9311%" y="292" width="0.8171%" height="15" fill="rgb(230,69,54)" fg:x="3574" fg:w="37"/><text x="79.1811%" y="302.50"></text></g><g><title>replace (pandas/core/internals.py:3468) (37 samples, 0.82%)</title><rect x="78.9311%" y="308" width="0.8171%" height="15" fill="rgb(214,135,41)" fg:x="3574" fg:w="37"/><text x="79.1811%" y="318.50"></text></g><g><title>apply (pandas/core/internals.py:3336) (6 samples, 0.13%)</title><rect x="79.6157%" y="324" width="0.1325%" height="15" fill="rgb(237,67,25)" fg:x="3605" fg:w="6"/><text x="79.8657%" y="334.50"></text></g><g><title>_interpolate_with_fill (pandas/core/internals.py:1153) (6 samples, 0.13%)</title><rect x="79.7482%" y="372" width="0.1325%" height="15" fill="rgb(222,189,50)" fg:x="3611" fg:w="6"/><text x="79.9982%" y="382.50"></text></g><g><title>interpolate_2d (pandas/core/missing.py:440) (6 samples, 0.13%)</title><rect x="79.7482%" y="388" width="0.1325%" height="15" fill="rgb(245,148,34)" fg:x="3611" fg:w="6"/><text x="79.9982%" y="398.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (7 samples, 0.15%)</title><rect x="79.7482%" y="340" width="0.1546%" height="15" fill="rgb(222,29,6)" fg:x="3611" fg:w="7"/><text x="79.9982%" y="350.50"></text></g><g><title>interpolate (pandas/core/internals.py:1114) (7 samples, 0.15%)</title><rect x="79.7482%" y="356" width="0.1546%" height="15" fill="rgb(221,189,43)" fg:x="3611" fg:w="7"/><text x="79.9982%" y="366.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:171) (9 samples, 0.20%)</title><rect x="79.7482%" y="276" width="0.1988%" height="15" fill="rgb(207,36,27)" fg:x="3611" fg:w="9"/><text x="79.9982%" y="286.50"></text></g><g><title>fillna (pandas/core/frame.py:3035) (9 samples, 0.20%)</title><rect x="79.7482%" y="292" width="0.1988%" height="15" fill="rgb(217,90,24)" fg:x="3611" fg:w="9"/><text x="79.9982%" y="302.50"></text></g><g><title>fillna (pandas/core/generic.py:4309) (9 samples, 0.20%)</title><rect x="79.7482%" y="308" width="0.1988%" height="15" fill="rgb(224,66,35)" fg:x="3611" fg:w="9"/><text x="79.9982%" y="318.50"></text></g><g><title>interpolate (pandas/core/internals.py:3450) (9 samples, 0.20%)</title><rect x="79.7482%" y="324" width="0.1988%" height="15" fill="rgb(221,13,50)" fg:x="3611" fg:w="9"/><text x="79.9982%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:173) (5 samples, 0.11%)</title><rect x="79.9470%" y="276" width="0.1104%" height="15" fill="rgb(236,68,49)" fg:x="3620" fg:w="5"/><text x="80.1970%" y="286.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (6 samples, 0.13%)</title><rect x="80.3666%" y="324" width="0.1325%" height="15" fill="rgb(229,146,28)" fg:x="3639" fg:w="6"/><text x="80.6166%" y="334.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (6 samples, 0.13%)</title><rect x="80.3666%" y="340" width="0.1325%" height="15" fill="rgb(225,31,38)" fg:x="3639" fg:w="6"/><text x="80.6166%" y="350.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (11 samples, 0.24%)</title><rect x="80.3224%" y="292" width="0.2429%" height="15" fill="rgb(250,208,3)" fg:x="3637" fg:w="11"/><text x="80.5724%" y="302.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (11 samples, 0.24%)</title><rect x="80.3224%" y="308" width="0.2429%" height="15" fill="rgb(246,54,23)" fg:x="3637" fg:w="11"/><text x="80.5724%" y="318.50"></text></g><g><title>__iter__ (pandas/core/indexes/datetimes.py:1189) (63 samples, 1.39%)</title><rect x="80.6537%" y="292" width="1.3913%" height="15" fill="rgb(243,76,11)" fg:x="3652" fg:w="63"/><text x="80.9037%" y="302.50"></text></g><g><title>__iter__ (pandas/core/indexes/datetimes.py:1190) (6 samples, 0.13%)</title><rect x="82.0451%" y="292" width="0.1325%" height="15" fill="rgb(245,21,50)" fg:x="3715" fg:w="6"/><text x="82.2951%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:175) (102 samples, 2.25%)</title><rect x="80.0795%" y="276" width="2.2527%" height="15" fill="rgb(228,9,43)" fg:x="3626" fg:w="102"/><text x="80.3295%" y="286.50">p..</text></g><g><title>iteritems (pandas/core/series.py:1131) (5 samples, 0.11%)</title><rect x="82.2217%" y="292" width="0.1104%" height="15" fill="rgb(208,100,47)" fg:x="3723" fg:w="5"/><text x="82.4717%" y="302.50"></text></g><g><title>__iter__ (pandas/core/base.py:825) (5 samples, 0.11%)</title><rect x="82.2217%" y="308" width="0.1104%" height="15" fill="rgb(232,26,8)" fg:x="3723" fg:w="5"/><text x="82.4717%" y="318.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:52) (6 samples, 0.13%)</title><rect x="82.8843%" y="308" width="0.1325%" height="15" fill="rgb(216,166,38)" fg:x="3753" fg:w="6"/><text x="83.1343%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:176) (39 samples, 0.86%)</title><rect x="82.3322%" y="276" width="0.8613%" height="15" fill="rgb(251,202,51)" fg:x="3728" fg:w="39"/><text x="82.5822%" y="286.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (22 samples, 0.49%)</title><rect x="82.7076%" y="292" width="0.4859%" height="15" fill="rgb(254,216,34)" fg:x="3745" fg:w="22"/><text x="82.9576%" y="302.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:53) (8 samples, 0.18%)</title><rect x="83.0168%" y="308" width="0.1767%" height="15" fill="rgb(251,32,27)" fg:x="3759" fg:w="8"/><text x="83.2668%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2121) (11 samples, 0.24%)</title><rect x="83.4143%" y="292" width="0.2429%" height="15" fill="rgb(208,127,28)" fg:x="3777" fg:w="11"/><text x="83.6643%" y="302.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:1696) (7 samples, 0.15%)</title><rect x="83.5027%" y="308" width="0.1546%" height="15" fill="rgb(224,137,22)" fg:x="3781" fg:w="7"/><text x="83.7527%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (7 samples, 0.15%)</title><rect x="83.6572%" y="292" width="0.1546%" height="15" fill="rgb(254,70,32)" fg:x="3788" fg:w="7"/><text x="83.9072%" y="302.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (5 samples, 0.11%)</title><rect x="83.7014%" y="308" width="0.1104%" height="15" fill="rgb(229,75,37)" fg:x="3790" fg:w="5"/><text x="83.9514%" y="318.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1576) (6 samples, 0.13%)</title><rect x="83.9223%" y="308" width="0.1325%" height="15" fill="rgb(252,64,23)" fg:x="3800" fg:w="6"/><text x="84.1723%" y="318.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1584) (9 samples, 0.20%)</title><rect x="84.2314%" y="308" width="0.1988%" height="15" fill="rgb(232,162,48)" fg:x="3814" fg:w="9"/><text x="84.4814%" y="318.50"></text></g><g><title>is_list_like_indexer (pandas/core/indexing.py:2139) (9 samples, 0.20%)</title><rect x="84.2314%" y="324" width="0.1988%" height="15" fill="rgb(246,160,12)" fg:x="3814" fg:w="9"/><text x="84.4814%" y="334.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (6 samples, 0.13%)</title><rect x="84.2977%" y="340" width="0.1325%" height="15" fill="rgb(247,166,0)" fg:x="3817" fg:w="6"/><text x="84.5477%" y="350.50"></text></g><g><title>__instancecheck__ (abc.py:184) (5 samples, 0.11%)</title><rect x="84.3198%" y="356" width="0.1104%" height="15" fill="rgb(249,219,21)" fg:x="3818" fg:w="5"/><text x="84.5698%" y="366.50"></text></g><g><title>_get_axis (pandas/core/generic.py:373) (5 samples, 0.11%)</title><rect x="84.5186%" y="340" width="0.1104%" height="15" fill="rgb(205,209,3)" fg:x="3827" fg:w="5"/><text x="84.7686%" y="350.50"></text></g><g><title>_get_axis_name (pandas/core/generic.py:360) (5 samples, 0.11%)</title><rect x="84.5186%" y="356" width="0.1104%" height="15" fill="rgb(243,44,1)" fg:x="3827" fg:w="5"/><text x="84.7686%" y="366.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1444) (7 samples, 0.15%)</title><rect x="84.4965%" y="324" width="0.1546%" height="15" fill="rgb(206,159,16)" fg:x="3826" fg:w="7"/><text x="84.7465%" y="334.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1457) (6 samples, 0.13%)</title><rect x="84.7615%" y="324" width="0.1325%" height="15" fill="rgb(244,77,30)" fg:x="3838" fg:w="6"/><text x="85.0115%" y="334.50"></text></g><g><title>is_list_like_indexer (pandas/core/indexing.py:2139) (6 samples, 0.13%)</title><rect x="84.7615%" y="340" width="0.1325%" height="15" fill="rgb(218,69,12)" fg:x="3838" fg:w="6"/><text x="85.0115%" y="350.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (5 samples, 0.11%)</title><rect x="84.7836%" y="356" width="0.1104%" height="15" fill="rgb(212,87,7)" fg:x="3839" fg:w="5"/><text x="85.0336%" y="366.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexing.py:254) (9 samples, 0.20%)</title><rect x="84.9161%" y="340" width="0.1988%" height="15" fill="rgb(245,114,25)" fg:x="3845" fg:w="9"/><text x="85.1661%" y="350.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1504) (30 samples, 0.66%)</title><rect x="84.8940%" y="324" width="0.6625%" height="15" fill="rgb(210,61,42)" fg:x="3844" fg:w="30"/><text x="85.1440%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexing.py:256) (20 samples, 0.44%)</title><rect x="85.1148%" y="340" width="0.4417%" height="15" fill="rgb(211,52,33)" fg:x="3854" fg:w="20"/><text x="85.3648%" y="350.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/datetimelike.py:620) (15 samples, 0.33%)</title><rect x="85.2253%" y="356" width="0.3313%" height="15" fill="rgb(234,58,33)" fg:x="3859" fg:w="15"/><text x="85.4753%" y="366.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:168) (8 samples, 0.18%)</title><rect x="85.3799%" y="372" width="0.1767%" height="15" fill="rgb(220,115,36)" fg:x="3866" fg:w="8"/><text x="85.6299%" y="382.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/base.py:1367) (8 samples, 0.18%)</title><rect x="85.3799%" y="388" width="0.1767%" height="15" fill="rgb(243,153,54)" fg:x="3866" fg:w="8"/><text x="85.6299%" y="398.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1425) (12 samples, 0.27%)</title><rect x="85.7111%" y="356" width="0.2650%" height="15" fill="rgb(251,47,18)" fg:x="3881" fg:w="12"/><text x="85.9611%" y="366.50"></text></g><g><title>__contains__ (pandas/core/indexes/datetimelike.py:252) (27 samples, 0.60%)</title><rect x="85.5786%" y="340" width="0.5963%" height="15" fill="rgb(242,102,42)" fg:x="3875" fg:w="27"/><text x="85.8286%" y="350.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1426) (9 samples, 0.20%)</title><rect x="85.9761%" y="356" width="0.1988%" height="15" fill="rgb(234,31,38)" fg:x="3893" fg:w="9"/><text x="86.2261%" y="366.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (8 samples, 0.18%)</title><rect x="85.9982%" y="372" width="0.1767%" height="15" fill="rgb(221,117,51)" fg:x="3894" fg:w="8"/><text x="86.2482%" y="382.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1505) (30 samples, 0.66%)</title><rect x="85.5565%" y="324" width="0.6625%" height="15" fill="rgb(212,20,18)" fg:x="3874" fg:w="30"/><text x="85.8065%" y="334.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1626) (82 samples, 1.81%)</title><rect x="84.4302%" y="308" width="1.8110%" height="15" fill="rgb(245,133,36)" fg:x="3823" fg:w="82"/><text x="84.6802%" y="318.50">_..</text></g><g><title>xs (pandas/core/generic.py:2320) (5 samples, 0.11%)</title><rect x="86.3516%" y="340" width="0.1104%" height="15" fill="rgb(212,6,19)" fg:x="3910" fg:w="5"/><text x="86.6016%" y="350.50"></text></g><g><title>_protect_consolidate (pandas/core/generic.py:3666) (13 samples, 0.29%)</title><rect x="86.5724%" y="372" width="0.2871%" height="15" fill="rgb(218,1,36)" fg:x="3920" fg:w="13"/><text x="86.8224%" y="382.50"></text></g><g><title>f (pandas/core/generic.py:3675) (13 samples, 0.29%)</title><rect x="86.5724%" y="388" width="0.2871%" height="15" fill="rgb(246,84,54)" fg:x="3920" fg:w="13"/><text x="86.8224%" y="398.50"></text></g><g><title>xs (pandas/core/generic.py:2337) (19 samples, 0.42%)</title><rect x="86.4620%" y="340" width="0.4196%" height="15" fill="rgb(242,110,6)" fg:x="3915" fg:w="19"/><text x="86.7120%" y="350.50"></text></g><g><title>_consolidate_inplace (pandas/core/generic.py:3677) (16 samples, 0.35%)</title><rect x="86.5283%" y="356" width="0.3534%" height="15" fill="rgb(214,47,5)" fg:x="3918" fg:w="16"/><text x="86.7783%" y="366.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1425) (9 samples, 0.20%)</title><rect x="87.0362%" y="356" width="0.1988%" height="15" fill="rgb(218,159,25)" fg:x="3941" fg:w="9"/><text x="87.2862%" y="366.50"></text></g><g><title>xs (pandas/core/generic.py:2344) (17 samples, 0.38%)</title><rect x="86.9479%" y="340" width="0.3754%" height="15" fill="rgb(215,211,28)" fg:x="3937" fg:w="17"/><text x="87.1979%" y="350.50"></text></g><g><title>xs (pandas/core/generic.py:2357) (5 samples, 0.11%)</title><rect x="87.3896%" y="340" width="0.1104%" height="15" fill="rgb(238,59,32)" fg:x="3957" fg:w="5"/><text x="87.6396%" y="350.50"></text></g><g><title>xs (pandas/core/generic.py:2364) (7 samples, 0.15%)</title><rect x="87.5000%" y="340" width="0.1546%" height="15" fill="rgb(226,82,3)" fg:x="3962" fg:w="7"/><text x="87.7500%" y="350.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (6 samples, 0.13%)</title><rect x="87.5221%" y="356" width="0.1325%" height="15" fill="rgb(240,164,32)" fg:x="3963" fg:w="6"/><text x="87.7721%" y="366.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1373) (176 samples, 3.89%)</title><rect x="83.8560%" y="292" width="3.8869%" height="15" fill="rgb(232,46,7)" fg:x="3797" fg:w="176"/><text x="84.1060%" y="302.50">__ge..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:1627) (68 samples, 1.50%)</title><rect x="86.2412%" y="308" width="1.5018%" height="15" fill="rgb(229,129,53)" fg:x="3905" fg:w="68"/><text x="86.4912%" y="318.50"></text></g><g><title>_get_label (pandas/core/indexing.py:139) (66 samples, 1.46%)</title><rect x="86.2853%" y="324" width="1.4576%" height="15" fill="rgb(234,188,29)" fg:x="3907" fg:w="66"/><text x="86.5353%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:177) (208 samples, 4.59%)</title><rect x="83.1935%" y="276" width="4.5936%" height="15" fill="rgb(246,141,4)" fg:x="3767" fg:w="208"/><text x="83.4435%" y="286.50">parse..</text></g><g><title>resolve_color_default (click/globals.py:64) (5 samples, 0.11%)</title><rect x="88.8472%" y="308" width="0.1104%" height="15" fill="rgb(229,23,39)" fg:x="4023" fg:w="5"/><text x="89.0972%" y="318.50"></text></g><g><title>echo (click/utils.py:288) (7 samples, 0.15%)</title><rect x="88.8251%" y="292" width="0.1546%" height="15" fill="rgb(206,12,3)" fg:x="4022" fg:w="7"/><text x="89.0751%" y="302.50"></text></g><g><title>echo (click/utils.py:290) (12 samples, 0.27%)</title><rect x="88.9797%" y="292" width="0.2650%" height="15" fill="rgb(252,226,20)" fg:x="4029" fg:w="12"/><text x="89.2297%" y="302.50"></text></g><g><title>should_strip_ansi (click/_compat.py:510) (12 samples, 0.27%)</title><rect x="88.9797%" y="308" width="0.2650%" height="15" fill="rgb(216,123,35)" fg:x="4029" fg:w="12"/><text x="89.2297%" y="318.50"></text></g><g><title>isatty (click/_compat.py:582) (8 samples, 0.18%)</title><rect x="89.0680%" y="324" width="0.1767%" height="15" fill="rgb(212,68,40)" fg:x="4033" fg:w="8"/><text x="89.3180%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:179) (139 samples, 3.07%)</title><rect x="87.7871%" y="276" width="3.0698%" height="15" fill="rgb(254,125,32)" fg:x="3975" fg:w="139"/><text x="88.0371%" y="286.50">par..</text></g><g><title>echo (click/utils.py:299) (69 samples, 1.52%)</title><rect x="89.3330%" y="292" width="1.5239%" height="15" fill="rgb(253,97,22)" fg:x="4045" fg:w="69"/><text x="89.5830%" y="302.50"></text></g><g><title>&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:198) (3,808 samples, 84.10%)</title><rect x="6.8463%" y="260" width="84.0989%" height="15" fill="rgb(241,101,14)" fg:x="310" fg:w="3808"/><text x="7.0963%" y="270.50">&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:198)</text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1496) (16 samples, 0.35%)</title><rect x="90.9894%" y="404" width="0.3534%" height="15" fill="rgb(238,103,29)" fg:x="4120" fg:w="16"/><text x="91.2394%" y="414.50"></text></g><g><title>inferred_freq (pandas/core/indexes/datetimelike.py:323) (14 samples, 0.31%)</title><rect x="91.0336%" y="420" width="0.3092%" height="15" fill="rgb(233,195,47)" fg:x="4122" fg:w="14"/><text x="91.2836%" y="430.50"></text></g><g><title>infer_freq (pandas/tseries/frequencies.py:607) (13 samples, 0.29%)</title><rect x="91.0557%" y="436" width="0.2871%" height="15" fill="rgb(246,218,30)" fg:x="4123" fg:w="13"/><text x="91.3057%" y="446.50"></text></g><g><title>get_freq (pandas/tseries/frequencies.py:663) (11 samples, 0.24%)</title><rect x="91.0998%" y="452" width="0.2429%" height="15" fill="rgb(219,145,47)" fg:x="4125" fg:w="11"/><text x="91.3498%" y="462.50"></text></g><g><title>_infer_daily_rule (pandas/tseries/frequencies.py:792) (6 samples, 0.13%)</title><rect x="91.2102%" y="468" width="0.1325%" height="15" fill="rgb(243,12,26)" fg:x="4130" fg:w="6"/><text x="91.4602%" y="478.50"></text></g><g><title>_get_wom_rule (pandas/tseries/frequencies.py:844) (6 samples, 0.13%)</title><rect x="91.2102%" y="484" width="0.1325%" height="15" fill="rgb(214,87,16)" fg:x="4130" fg:w="6"/><text x="91.4602%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.15%)</title><rect x="91.3428%" y="420" width="0.1546%" height="15" fill="rgb(208,99,42)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (7 samples, 0.15%)</title><rect x="91.3428%" y="436" width="0.1546%" height="15" fill="rgb(253,99,2)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.15%)</title><rect x="91.3428%" y="452" width="0.1546%" height="15" fill="rgb(220,168,23)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.15%)</title><rect x="91.3428%" y="468" width="0.1546%" height="15" fill="rgb(242,38,24)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (7 samples, 0.15%)</title><rect x="91.3428%" y="484" width="0.1546%" height="15" fill="rgb(225,182,9)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.15%)</title><rect x="91.3428%" y="500" width="0.1546%" height="15" fill="rgb(243,178,37)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.15%)</title><rect x="91.3428%" y="516" width="0.1546%" height="15" fill="rgb(232,139,19)" fg:x="4136" fg:w="7"/><text x="91.5928%" y="526.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (26 samples, 0.57%)</title><rect x="90.9894%" y="372" width="0.5742%" height="15" fill="rgb(225,201,24)" fg:x="4120" fg:w="26"/><text x="91.2394%" y="382.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (26 samples, 0.57%)</title><rect x="90.9894%" y="388" width="0.5742%" height="15" fill="rgb(221,47,46)" fg:x="4120" fg:w="26"/><text x="91.2394%" y="398.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (10 samples, 0.22%)</title><rect x="91.3428%" y="404" width="0.2208%" height="15" fill="rgb(249,23,13)" fg:x="4136" fg:w="10"/><text x="91.5928%" y="414.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:357) (29 samples, 0.64%)</title><rect x="90.9894%" y="356" width="0.6405%" height="15" fill="rgb(219,9,5)" fg:x="4120" fg:w="29"/><text x="91.2394%" y="366.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (9 samples, 0.20%)</title><rect x="91.8286%" y="420" width="0.1988%" height="15" fill="rgb(254,171,16)" fg:x="4158" fg:w="9"/><text x="92.0786%" y="430.50"></text></g><g><title>set (pandas/core/internals.py:3998) (5 samples, 0.11%)</title><rect x="91.9170%" y="436" width="0.1104%" height="15" fill="rgb(230,171,20)" fg:x="4162" fg:w="5"/><text x="92.1670%" y="446.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (49 samples, 1.08%)</title><rect x="90.9673%" y="340" width="1.0822%" height="15" fill="rgb(210,71,41)" fg:x="4119" fg:w="49"/><text x="91.2173%" y="350.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:361) (19 samples, 0.42%)</title><rect x="91.6299%" y="356" width="0.4196%" height="15" fill="rgb(206,173,20)" fg:x="4149" fg:w="19"/><text x="91.8799%" y="366.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:621) (12 samples, 0.27%)</title><rect x="91.7845%" y="372" width="0.2650%" height="15" fill="rgb(233,88,34)" fg:x="4156" fg:w="12"/><text x="92.0345%" y="382.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (11 samples, 0.24%)</title><rect x="91.8065%" y="388" width="0.2429%" height="15" fill="rgb(223,209,46)" fg:x="4157" fg:w="11"/><text x="92.0565%" y="398.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (10 samples, 0.22%)</title><rect x="91.8286%" y="404" width="0.2208%" height="15" fill="rgb(250,43,18)" fg:x="4158" fg:w="10"/><text x="92.0786%" y="414.50"></text></g><g><title>_apply_standard (pandas/core/frame.py:4928) (5 samples, 0.11%)</title><rect x="92.0936%" y="356" width="0.1104%" height="15" fill="rgb(208,13,10)" fg:x="4170" fg:w="5"/><text x="92.3436%" y="366.50"></text></g><g><title>_set_axis (pandas/core/series.py:320) (5 samples, 0.11%)</title><rect x="93.5292%" y="372" width="0.1104%" height="15" fill="rgb(212,200,36)" fg:x="4235" fg:w="5"/><text x="93.7792%" y="382.50"></text></g><g><title>set_axis (pandas/core/internals.py:3067) (5 samples, 0.11%)</title><rect x="93.7721%" y="388" width="0.1104%" height="15" fill="rgb(225,90,30)" fg:x="4246" fg:w="5"/><text x="94.0221%" y="398.50"></text></g><g><title>set_axis (pandas/core/internals.py:3068) (10 samples, 0.22%)</title><rect x="93.8825%" y="388" width="0.2208%" height="15" fill="rgb(236,182,39)" fg:x="4251" fg:w="10"/><text x="94.1325%" y="398.50"></text></g><g><title>set_axis (pandas/core/internals.py:3069) (10 samples, 0.22%)</title><rect x="94.1034%" y="388" width="0.2208%" height="15" fill="rgb(212,144,35)" fg:x="4261" fg:w="10"/><text x="94.3534%" y="398.50"></text></g><g><title>_set_axis (pandas/core/series.py:324) (29 samples, 0.64%)</title><rect x="93.7058%" y="372" width="0.6405%" height="15" fill="rgb(228,63,44)" fg:x="4243" fg:w="29"/><text x="93.9558%" y="382.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:112) (166 samples, 3.67%)</title><rect x="90.9673%" y="324" width="3.6661%" height="15" fill="rgb(228,109,6)" fg:x="4119" fg:w="166"/><text x="91.2173%" y="334.50">wins..</text></g><g><title>apply (pandas/core/frame.py:4877) (116 samples, 2.56%)</title><rect x="92.0716%" y="340" width="2.5618%" height="15" fill="rgb(238,117,24)" fg:x="4169" fg:w="116"/><text x="92.3216%" y="350.50">ap..</text></g><g><title>_apply_standard (pandas/core/frame.py:4933) (110 samples, 2.43%)</title><rect x="92.2041%" y="356" width="2.4293%" height="15" fill="rgb(242,26,26)" fg:x="4175" fg:w="110"/><text x="92.4541%" y="366.50">_a..</text></g><g><title>name (pandas/core/series.py:344) (8 samples, 0.18%)</title><rect x="94.4567%" y="372" width="0.1767%" height="15" fill="rgb(221,92,48)" fg:x="4277" fg:w="8"/><text x="94.7067%" y="382.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1256) (5 samples, 0.11%)</title><rect x="94.6334%" y="372" width="0.1104%" height="15" fill="rgb(209,209,32)" fg:x="4285" fg:w="5"/><text x="94.8834%" y="382.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2177) (6 samples, 0.13%)</title><rect x="94.6334%" y="356" width="0.1325%" height="15" fill="rgb(221,70,22)" fg:x="4285" fg:w="6"/><text x="94.8834%" y="366.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (9 samples, 0.20%)</title><rect x="94.7659%" y="372" width="0.1988%" height="15" fill="rgb(248,145,5)" fg:x="4291" fg:w="9"/><text x="95.0159%" y="382.50"></text></g><g><title>take (pandas/core/internals.py:4264) (7 samples, 0.15%)</title><rect x="94.8101%" y="388" width="0.1546%" height="15" fill="rgb(226,116,26)" fg:x="4293" fg:w="7"/><text x="95.0601%" y="398.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4146) (7 samples, 0.15%)</title><rect x="94.8101%" y="404" width="0.1546%" height="15" fill="rgb(244,5,17)" fg:x="4293" fg:w="7"/><text x="95.0601%" y="414.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (16 samples, 0.35%)</title><rect x="94.6334%" y="340" width="0.3534%" height="15" fill="rgb(252,159,33)" fg:x="4285" fg:w="16"/><text x="94.8834%" y="350.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (10 samples, 0.22%)</title><rect x="94.7659%" y="356" width="0.2208%" height="15" fill="rgb(206,71,0)" fg:x="4291" fg:w="10"/><text x="95.0159%" y="366.50"></text></g><g><title>f (pandas/core/ops.py:1335) (7 samples, 0.15%)</title><rect x="94.9867%" y="340" width="0.1546%" height="15" fill="rgb(233,118,54)" fg:x="4301" fg:w="7"/><text x="95.2367%" y="350.50"></text></g><g><title>_combine_const (pandas/core/frame.py:3987) (7 samples, 0.15%)</title><rect x="94.9867%" y="356" width="0.1546%" height="15" fill="rgb(234,83,48)" fg:x="4301" fg:w="7"/><text x="95.2367%" y="366.50"></text></g><g><title>eval (pandas/core/internals.py:3435) (7 samples, 0.15%)</title><rect x="94.9867%" y="372" width="0.1546%" height="15" fill="rgb(228,3,54)" fg:x="4301" fg:w="7"/><text x="95.2367%" y="382.50"></text></g><g><title>fillna (pandas/core/frame.py:3035) (7 samples, 0.15%)</title><rect x="95.1413%" y="356" width="0.1546%" height="15" fill="rgb(226,155,13)" fg:x="4308" fg:w="7"/><text x="95.3913%" y="366.50"></text></g><g><title>fillna (pandas/core/generic.py:4348) (6 samples, 0.13%)</title><rect x="95.1634%" y="372" width="0.1325%" height="15" fill="rgb(241,28,37)" fg:x="4309" fg:w="6"/><text x="95.4134%" y="382.50"></text></g><g><title>fillna (pandas/core/internals.py:3456) (6 samples, 0.13%)</title><rect x="95.1634%" y="388" width="0.1325%" height="15" fill="rgb(233,93,10)" fg:x="4309" fg:w="6"/><text x="95.4134%" y="398.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:87) (32 samples, 0.71%)</title><rect x="94.6334%" y="324" width="0.7067%" height="15" fill="rgb(225,113,19)" fg:x="4285" fg:w="32"/><text x="94.8834%" y="334.50"></text></g><g><title>f (pandas/core/ops.py:1336) (9 samples, 0.20%)</title><rect x="95.1413%" y="340" width="0.1988%" height="15" fill="rgb(241,2,18)" fg:x="4308" fg:w="9"/><text x="95.3913%" y="350.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1256) (7 samples, 0.15%)</title><rect x="95.4064%" y="372" width="0.1546%" height="15" fill="rgb(228,207,21)" fg:x="4320" fg:w="7"/><text x="95.6564%" y="382.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2177) (11 samples, 0.24%)</title><rect x="95.3401%" y="356" width="0.2429%" height="15" fill="rgb(213,211,35)" fg:x="4317" fg:w="11"/><text x="95.5901%" y="366.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4146) (5 samples, 0.11%)</title><rect x="95.6272%" y="404" width="0.1104%" height="15" fill="rgb(209,83,10)" fg:x="4330" fg:w="5"/><text x="95.8772%" y="414.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (9 samples, 0.20%)</title><rect x="95.5830%" y="372" width="0.1988%" height="15" fill="rgb(209,164,1)" fg:x="4328" fg:w="9"/><text x="95.8330%" y="382.50"></text></g><g><title>take (pandas/core/internals.py:4264) (7 samples, 0.15%)</title><rect x="95.6272%" y="388" width="0.1546%" height="15" fill="rgb(213,184,43)" fg:x="4330" fg:w="7"/><text x="95.8772%" y="398.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (22 samples, 0.49%)</title><rect x="95.3401%" y="340" width="0.4859%" height="15" fill="rgb(231,61,34)" fg:x="4317" fg:w="22"/><text x="95.5901%" y="350.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (11 samples, 0.24%)</title><rect x="95.5830%" y="356" width="0.2429%" height="15" fill="rgb(235,75,3)" fg:x="4328" fg:w="11"/><text x="95.8330%" y="366.50"></text></g><g><title>_combine_frame (pandas/core/frame.py:3925) (6 samples, 0.13%)</title><rect x="95.9364%" y="372" width="0.1325%" height="15" fill="rgb(220,106,47)" fg:x="4344" fg:w="6"/><text x="96.1864%" y="382.50"></text></g><g><title>f (pandas/core/ops.py:223) (12 samples, 0.27%)</title><rect x="95.8260%" y="340" width="0.2650%" height="15" fill="rgb(210,196,33)" fg:x="4339" fg:w="12"/><text x="96.0760%" y="350.50"></text></g><g><title>f (pandas/core/ops.py:1260) (11 samples, 0.24%)</title><rect x="95.8481%" y="356" width="0.2429%" height="15" fill="rgb(229,154,42)" fg:x="4340" fg:w="11"/><text x="96.0981%" y="366.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:90) (46 samples, 1.02%)</title><rect x="95.3401%" y="324" width="1.0159%" height="15" fill="rgb(228,114,26)" fg:x="4317" fg:w="46"/><text x="95.5901%" y="334.50"></text></g><g><title>isnull (pandas/core/frame.py:3394) (8 samples, 0.18%)</title><rect x="96.1793%" y="340" width="0.1767%" height="15" fill="rgb(208,144,1)" fg:x="4355" fg:w="8"/><text x="96.4293%" y="350.50"></text></g><g><title>isnull (pandas/core/generic.py:4899) (8 samples, 0.18%)</title><rect x="96.1793%" y="356" width="0.1767%" height="15" fill="rgb(239,112,37)" fg:x="4355" fg:w="8"/><text x="96.4293%" y="366.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (8 samples, 0.18%)</title><rect x="96.1793%" y="372" width="0.1767%" height="15" fill="rgb(210,96,50)" fg:x="4355" fg:w="8"/><text x="96.4293%" y="382.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:60) (8 samples, 0.18%)</title><rect x="96.1793%" y="388" width="0.1767%" height="15" fill="rgb(222,178,2)" fg:x="4355" fg:w="8"/><text x="96.4293%" y="398.50"></text></g><g><title>isna (pandas/core/internals.py:3429) (7 samples, 0.15%)</title><rect x="96.2014%" y="404" width="0.1546%" height="15" fill="rgb(226,74,18)" fg:x="4356" fg:w="7"/><text x="96.4514%" y="414.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:364) (246 samples, 5.43%)</title><rect x="90.9452%" y="292" width="5.4329%" height="15" fill="rgb(225,67,54)" fg:x="4118" fg:w="246"/><text x="91.1952%" y="302.50">to_ctab..</text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:71) (245 samples, 5.41%)</title><rect x="90.9673%" y="308" width="5.4108%" height="15" fill="rgb(251,92,32)" fg:x="4119" fg:w="245"/><text x="91.2173%" y="318.50">winsori..</text></g><g><title>_getitem_array (pandas/core/frame.py:2177) (7 samples, 0.15%)</title><rect x="96.4002%" y="324" width="0.1546%" height="15" fill="rgb(228,149,22)" fg:x="4365" fg:w="7"/><text x="96.6502%" y="334.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1256) (5 samples, 0.11%)</title><rect x="96.4443%" y="340" width="0.1104%" height="15" fill="rgb(243,54,13)" fg:x="4367" fg:w="5"/><text x="96.6943%" y="350.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (6 samples, 0.13%)</title><rect x="96.5989%" y="340" width="0.1325%" height="15" fill="rgb(243,180,28)" fg:x="4374" fg:w="6"/><text x="96.8489%" y="350.50"></text></g><g><title>take (pandas/core/internals.py:4264) (5 samples, 0.11%)</title><rect x="96.6210%" y="356" width="0.1104%" height="15" fill="rgb(208,167,24)" fg:x="4375" fg:w="5"/><text x="96.8710%" y="366.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (20 samples, 0.44%)</title><rect x="96.4002%" y="308" width="0.4417%" height="15" fill="rgb(245,73,45)" fg:x="4365" fg:w="20"/><text x="96.6502%" y="318.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (13 samples, 0.29%)</title><rect x="96.5548%" y="324" width="0.2871%" height="15" fill="rgb(237,203,48)" fg:x="4372" fg:w="13"/><text x="96.8048%" y="334.50"></text></g><g><title>get_result (pandas/core/internals.py:1346) (5 samples, 0.11%)</title><rect x="96.9523%" y="388" width="0.1104%" height="15" fill="rgb(211,197,16)" fg:x="4390" fg:w="5"/><text x="97.2023%" y="398.50"></text></g><g><title>na_op (pandas/core/ops.py:1202) (5 samples, 0.11%)</title><rect x="96.9523%" y="404" width="0.1104%" height="15" fill="rgb(243,99,51)" fg:x="4390" fg:w="5"/><text x="97.2023%" y="414.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:204) (5 samples, 0.11%)</title><rect x="96.9523%" y="420" width="0.1104%" height="15" fill="rgb(215,123,29)" fg:x="4390" fg:w="5"/><text x="97.2023%" y="430.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (10 samples, 0.22%)</title><rect x="96.8640%" y="356" width="0.2208%" height="15" fill="rgb(239,186,37)" fg:x="4386" fg:w="10"/><text x="97.1140%" y="366.50"></text></g><g><title>eval (pandas/core/internals.py:1377) (8 samples, 0.18%)</title><rect x="96.9081%" y="372" width="0.1767%" height="15" fill="rgb(252,136,39)" fg:x="4388" fg:w="8"/><text x="97.1581%" y="382.50"></text></g><g><title>f (pandas/core/ops.py:1267) (11 samples, 0.24%)</title><rect x="96.8640%" y="308" width="0.2429%" height="15" fill="rgb(223,213,32)" fg:x="4386" fg:w="11"/><text x="97.1140%" y="318.50"></text></g><g><title>_combine_const (pandas/core/frame.py:3987) (11 samples, 0.24%)</title><rect x="96.8640%" y="324" width="0.2429%" height="15" fill="rgb(233,115,5)" fg:x="4386" fg:w="11"/><text x="97.1140%" y="334.50"></text></g><g><title>eval (pandas/core/internals.py:3435) (11 samples, 0.24%)</title><rect x="96.8640%" y="340" width="0.2429%" height="15" fill="rgb(207,226,44)" fg:x="4386" fg:w="11"/><text x="97.1140%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/frame.py:5449) (7 samples, 0.15%)</title><rect x="97.1290%" y="324" width="0.1546%" height="15" fill="rgb(208,126,0)" fg:x="4398" fg:w="7"/><text x="97.3790%" y="334.50"></text></g><g><title>iteritems (pandas/core/frame.py:698) (6 samples, 0.13%)</title><rect x="97.1511%" y="340" width="0.1325%" height="15" fill="rgb(244,66,21)" fg:x="4399" fg:w="6"/><text x="97.4011%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (5 samples, 0.11%)</title><rect x="97.3277%" y="372" width="0.1104%" height="15" fill="rgb(222,97,12)" fg:x="4407" fg:w="5"/><text x="97.5777%" y="382.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (5 samples, 0.11%)</title><rect x="97.3277%" y="388" width="0.1104%" height="15" fill="rgb(219,213,19)" fg:x="4407" fg:w="5"/><text x="97.5777%" y="398.50"></text></g><g><title>_try_cast (pandas/core/series.py:3157) (5 samples, 0.11%)</title><rect x="97.3277%" y="404" width="0.1104%" height="15" fill="rgb(252,169,30)" fg:x="4407" fg:w="5"/><text x="97.5777%" y="414.50"></text></g><g><title>round (pandas/core/frame.py:5450) (16 samples, 0.35%)</title><rect x="97.1290%" y="308" width="0.3534%" height="15" fill="rgb(206,32,51)" fg:x="4398" fg:w="16"/><text x="97.3790%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/frame.py:5450) (9 samples, 0.20%)</title><rect x="97.2836%" y="324" width="0.1988%" height="15" fill="rgb(250,172,42)" fg:x="4405" fg:w="9"/><text x="97.5336%" y="334.50"></text></g><g><title>_series_round (pandas/core/frame.py:5437) (9 samples, 0.20%)</title><rect x="97.2836%" y="340" width="0.1988%" height="15" fill="rgb(209,34,43)" fg:x="4405" fg:w="9"/><text x="97.5336%" y="350.50"></text></g><g><title>round (pandas/core/series.py:1411) (8 samples, 0.18%)</title><rect x="97.3057%" y="356" width="0.1767%" height="15" fill="rgb(223,11,35)" fg:x="4406" fg:w="8"/><text x="97.5557%" y="366.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:308) (7 samples, 0.15%)</title><rect x="97.5265%" y="340" width="0.1546%" height="15" fill="rgb(251,219,26)" fg:x="4416" fg:w="7"/><text x="97.7765%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (6 samples, 0.13%)</title><rect x="97.5486%" y="356" width="0.1325%" height="15" fill="rgb(231,119,3)" fg:x="4417" fg:w="6"/><text x="97.7986%" y="366.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:212) (14 samples, 0.31%)</title><rect x="97.5044%" y="324" width="0.3092%" height="15" fill="rgb(216,97,11)" fg:x="4415" fg:w="14"/><text x="97.7544%" y="334.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:363) (6 samples, 0.13%)</title><rect x="97.6811%" y="340" width="0.1325%" height="15" fill="rgb(223,59,9)" fg:x="4423" fg:w="6"/><text x="97.9311%" y="350.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (8 samples, 0.18%)</title><rect x="97.8578%" y="404" width="0.1767%" height="15" fill="rgb(233,93,31)" fg:x="4431" fg:w="8"/><text x="98.1078%" y="414.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:385) (11 samples, 0.24%)</title><rect x="97.8136%" y="340" width="0.2429%" height="15" fill="rgb(239,81,33)" fg:x="4429" fg:w="11"/><text x="98.0636%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (11 samples, 0.24%)</title><rect x="97.8136%" y="356" width="0.2429%" height="15" fill="rgb(213,120,34)" fg:x="4429" fg:w="11"/><text x="98.0636%" y="366.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (9 samples, 0.20%)</title><rect x="97.8578%" y="372" width="0.1988%" height="15" fill="rgb(243,49,53)" fg:x="4431" fg:w="9"/><text x="98.1078%" y="382.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (9 samples, 0.20%)</title><rect x="97.8578%" y="388" width="0.1988%" height="15" fill="rgb(247,216,33)" fg:x="4431" fg:w="9"/><text x="98.1078%" y="398.50"></text></g><g><title>round (pandas/core/frame.py:5456) (26 samples, 0.57%)</title><rect x="97.5044%" y="308" width="0.5742%" height="15" fill="rgb(226,26,14)" fg:x="4415" fg:w="26"/><text x="97.7544%" y="318.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:213) (12 samples, 0.27%)</title><rect x="97.8136%" y="324" width="0.2650%" height="15" fill="rgb(215,49,53)" fg:x="4429" fg:w="12"/><text x="98.0636%" y="334.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:365) (83 samples, 1.83%)</title><rect x="96.3781%" y="292" width="1.8330%" height="15" fill="rgb(245,162,40)" fg:x="4364" fg:w="83"/><text x="96.6281%" y="302.50">t..</text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (6 samples, 0.13%)</title><rect x="98.2332%" y="308" width="0.1325%" height="15" fill="rgb(229,68,17)" fg:x="4448" fg:w="6"/><text x="98.4832%" y="318.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (6 samples, 0.13%)</title><rect x="98.2332%" y="324" width="0.1325%" height="15" fill="rgb(213,182,10)" fg:x="4448" fg:w="6"/><text x="98.4832%" y="334.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (6 samples, 0.13%)</title><rect x="98.2332%" y="340" width="0.1325%" height="15" fill="rgb(245,125,30)" fg:x="4448" fg:w="6"/><text x="98.4832%" y="350.50"></text></g><g><title>insert (pandas/core/indexes/base.py:3720) (5 samples, 0.11%)</title><rect x="98.3878%" y="388" width="0.1104%" height="15" fill="rgb(232,202,2)" fg:x="4455" fg:w="5"/><text x="98.6378%" y="398.50"></text></g><g><title>insert (pandas/core/internals.py:4069) (7 samples, 0.15%)</title><rect x="98.3657%" y="372" width="0.1546%" height="15" fill="rgb(237,140,51)" fg:x="4454" fg:w="7"/><text x="98.6157%" y="382.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:368) (17 samples, 0.38%)</title><rect x="98.2111%" y="292" width="0.3754%" height="15" fill="rgb(236,157,25)" fg:x="4447" fg:w="17"/><text x="98.4611%" y="302.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (10 samples, 0.22%)</title><rect x="98.3657%" y="308" width="0.2208%" height="15" fill="rgb(219,209,0)" fg:x="4454" fg:w="10"/><text x="98.6157%" y="318.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (10 samples, 0.22%)</title><rect x="98.3657%" y="324" width="0.2208%" height="15" fill="rgb(240,116,54)" fg:x="4454" fg:w="10"/><text x="98.6157%" y="334.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (10 samples, 0.22%)</title><rect x="98.3657%" y="340" width="0.2208%" height="15" fill="rgb(216,10,36)" fg:x="4454" fg:w="10"/><text x="98.6157%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3971) (10 samples, 0.22%)</title><rect x="98.3657%" y="356" width="0.2208%" height="15" fill="rgb(222,72,44)" fg:x="4454" fg:w="10"/><text x="98.6157%" y="366.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (7 samples, 0.15%)</title><rect x="98.5866%" y="308" width="0.1546%" height="15" fill="rgb(232,159,9)" fg:x="4464" fg:w="7"/><text x="98.8366%" y="318.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (6 samples, 0.13%)</title><rect x="98.6087%" y="324" width="0.1325%" height="15" fill="rgb(210,39,32)" fg:x="4465" fg:w="6"/><text x="98.8587%" y="334.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (6 samples, 0.13%)</title><rect x="98.6087%" y="340" width="0.1325%" height="15" fill="rgb(216,194,45)" fg:x="4465" fg:w="6"/><text x="98.8587%" y="350.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (8 samples, 0.18%)</title><rect x="98.7412%" y="308" width="0.1767%" height="15" fill="rgb(218,18,35)" fg:x="4471" fg:w="8"/><text x="98.9912%" y="318.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (6 samples, 0.13%)</title><rect x="98.7853%" y="324" width="0.1325%" height="15" fill="rgb(207,83,51)" fg:x="4473" fg:w="6"/><text x="99.0353%" y="334.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (6 samples, 0.13%)</title><rect x="98.7853%" y="340" width="0.1325%" height="15" fill="rgb(225,63,43)" fg:x="4473" fg:w="6"/><text x="99.0353%" y="350.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:369) (18 samples, 0.40%)</title><rect x="98.5866%" y="292" width="0.3975%" height="15" fill="rgb(207,57,36)" fg:x="4464" fg:w="18"/><text x="98.8366%" y="302.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (5 samples, 0.11%)</title><rect x="99.0724%" y="356" width="0.1104%" height="15" fill="rgb(216,99,33)" fg:x="4486" fg:w="5"/><text x="99.3224%" y="366.50"></text></g><g><title>fromdataframe (bcolz/ctable.py:692) (11 samples, 0.24%)</title><rect x="99.0283%" y="308" width="0.2429%" height="15" fill="rgb(225,42,16)" fg:x="4484" fg:w="11"/><text x="99.2783%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (9 samples, 0.20%)</title><rect x="99.0724%" y="324" width="0.1988%" height="15" fill="rgb(220,201,45)" fg:x="4486" fg:w="9"/><text x="99.3224%" y="334.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (9 samples, 0.20%)</title><rect x="99.0724%" y="340" width="0.1988%" height="15" fill="rgb(225,33,4)" fg:x="4486" fg:w="9"/><text x="99.3224%" y="350.50"></text></g><g><title>generator (click/_termui_impl.py:328) (4,188 samples, 92.49%)</title><rect x="6.8463%" y="244" width="92.4912%" height="15" fill="rgb(224,33,50)" fg:x="310" fg:w="4188"/><text x="7.0963%" y="254.50">generator (click/_termui_impl.py:328)</text></g><g><title>&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:199) (380 samples, 8.39%)</title><rect x="90.9452%" y="260" width="8.3922%" height="15" fill="rgb(246,198,51)" fg:x="4118" fg:w="380"/><text x="91.1952%" y="270.50">&lt;genexpr&gt; (z..</text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:362) (380 samples, 8.39%)</title><rect x="90.9452%" y="276" width="8.3922%" height="15" fill="rgb(205,22,4)" fg:x="4118" fg:w="380"/><text x="91.1952%" y="286.50">to_ctable (z..</text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:370) (16 samples, 0.35%)</title><rect x="98.9841%" y="292" width="0.3534%" height="15" fill="rgb(206,3,8)" fg:x="4482" fg:w="16"/><text x="99.2341%" y="302.50"></text></g><g><title>_write_internal (zipline/data/bcolz_daily_bars.py:267) (4,193 samples, 92.60%)</title><rect x="6.8463%" y="228" width="92.6016%" height="15" fill="rgb(251,23,15)" fg:x="310" fg:w="4193"/><text x="7.0963%" y="238.50">_write_internal (zipline/data/bcolz_daily_bars.py:267)</text></g><g><title>__getitem__ (bcolz/ctable.py:1215) (5 samples, 0.11%)</title><rect x="99.4920%" y="244" width="0.1104%" height="15" fill="rgb(252,88,28)" fg:x="4505" fg:w="5"/><text x="99.7420%" y="254.50"></text></g><g><title>_write_internal (zipline/data/bcolz_daily_bars.py:278) (10 samples, 0.22%)</title><rect x="99.4700%" y="228" width="0.2208%" height="15" fill="rgb(212,127,14)" fg:x="4504" fg:w="10"/><text x="99.7200%" y="238.50"></text></g><g><title>all (4,528 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(247,145,37)" fg:x="0" fg:w="4528"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (zipline:8) (4,528 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(209,117,53)" fg:x="0" fg:w="4528"/><text x="0.2500%" y="78.50">&lt;module&gt; (zipline:8)</text></g><g><title>__call__ (click/core.py:1137) (4,528 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(212,90,42)" fg:x="0" fg:w="4528"/><text x="0.2500%" y="94.50">__call__ (click/core.py:1137)</text></g><g><title>main (click/core.py:1062) (4,528 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(218,164,37)" fg:x="0" fg:w="4528"/><text x="0.2500%" y="110.50">main (click/core.py:1062)</text></g><g><title>invoke (click/core.py:1668) (4,493 samples, 99.23%)</title><rect x="0.7730%" y="116" width="99.2270%" height="15" fill="rgb(246,65,34)" fg:x="35" fg:w="4493"/><text x="1.0230%" y="126.50">invoke (click/core.py:1668)</text></g><g><title>invoke (click/core.py:1404) (4,493 samples, 99.23%)</title><rect x="0.7730%" y="132" width="99.2270%" height="15" fill="rgb(231,100,33)" fg:x="35" fg:w="4493"/><text x="1.0230%" y="142.50">invoke (click/core.py:1404)</text></g><g><title>invoke (click/core.py:763) (4,493 samples, 99.23%)</title><rect x="0.7730%" y="148" width="99.2270%" height="15" fill="rgb(228,126,14)" fg:x="35" fg:w="4493"/><text x="1.0230%" y="158.50">invoke (click/core.py:763)</text></g><g><title>ingest (zipline/__main__.py:385) (4,493 samples, 99.23%)</title><rect x="0.7730%" y="164" width="99.2270%" height="15" fill="rgb(215,173,21)" fg:x="35" fg:w="4493"/><text x="1.0230%" y="174.50">ingest (zipline/__main__.py:385)</text></g><g><title>ingest (zipline/data/bundles/core.py:443) (4,480 samples, 98.94%)</title><rect x="1.0601%" y="180" width="98.9399%" height="15" fill="rgb(210,6,40)" fg:x="48" fg:w="4480"/><text x="1.3101%" y="190.50">ingest (zipline/data/bundles/core.py:443)</text></g><g><title>ingest_bundle (extension.py:60) (4,219 samples, 93.18%)</title><rect x="6.8242%" y="196" width="93.1758%" height="15" fill="rgb(212,48,18)" fg:x="309" fg:w="4219"/><text x="7.0742%" y="206.50">ingest_bundle (extension.py:60)</text></g><g><title>write (zipline/data/bcolz_daily_bars.py:207) (4,219 samples, 93.18%)</title><rect x="6.8242%" y="212" width="93.1758%" height="15" fill="rgb(230,214,11)" fg:x="309" fg:w="4219"/><text x="7.0742%" y="222.50">write (zipline/data/bcolz_daily_bars.py:207)</text></g><g><title>_write_internal (zipline/data/bcolz_daily_bars.py:304) (6 samples, 0.13%)</title><rect x="99.8675%" y="228" width="0.1325%" height="15" fill="rgb(254,105,39)" fg:x="4522" fg:w="6"/><text x="100.1175%" y="238.50"></text></g></svg></svg>