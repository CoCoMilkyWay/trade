<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="586" onload="init(evt)" viewBox="0 0 1200 586" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="586" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o /root/work/trade/system/profile.svg --pid 7088</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="575.00"> </text><svg id="frames" x="10" width="1180" total_samples="5367"><g><title>_strptime_datetime (_strptime.py:565) (7 samples, 0.13%)</title><rect x="0.0373%" y="244" width="0.1304%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="7"/><text x="0.2873%" y="254.50"></text></g><g><title>parse_api_tradedate (extension.py:243) (8 samples, 0.15%)</title><rect x="0.0373%" y="228" width="0.1491%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="8"/><text x="0.2873%" y="238.50"></text></g><g><title>&lt;module&gt; (extension.py:310) (11 samples, 0.20%)</title><rect x="0.0000%" y="212" width="0.2050%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="11"/><text x="0.2500%" y="222.50"></text></g><g><title>wrapper (pandas/tseries/offsets.py:69) (6 samples, 0.11%)</title><rect x="0.2236%" y="340" width="0.1118%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="6"/><text x="0.4736%" y="350.50"></text></g><g><title>wrapper (pandas/tseries/offsets.py:71) (9 samples, 0.17%)</title><rect x="0.3354%" y="340" width="0.1677%" height="15" fill="rgb(208,68,35)" fg:x="18" fg:w="9"/><text x="0.5854%" y="350.50"></text></g><g><title>_generate_regular_range (pandas/core/indexes/datetimes.py:2009) (17 samples, 0.32%)</title><rect x="0.2050%" y="308" width="0.3168%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="17"/><text x="0.4550%" y="318.50"></text></g><g><title>generate_range (pandas/tseries/offsets.py:2971) (17 samples, 0.32%)</title><rect x="0.2050%" y="324" width="0.3168%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="17"/><text x="0.4550%" y="334.50"></text></g><g><title>__init__ (trading_calendars/trading_calendar.py:109) (18 samples, 0.34%)</title><rect x="0.2050%" y="228" width="0.3354%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="18"/><text x="0.4550%" y="238.50"></text></g><g><title>date_range (pandas/core/indexes/datetimes.py:2057) (18 samples, 0.34%)</title><rect x="0.2050%" y="244" width="0.3354%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="18"/><text x="0.4550%" y="254.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (18 samples, 0.34%)</title><rect x="0.2050%" y="260" width="0.3354%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="18"/><text x="0.4550%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:324) (18 samples, 0.34%)</title><rect x="0.2050%" y="276" width="0.3354%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="18"/><text x="0.4550%" y="286.50"></text></g><g><title>_generate (pandas/core/indexes/datetimes.py:531) (18 samples, 0.34%)</title><rect x="0.2050%" y="292" width="0.3354%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="18"/><text x="0.4550%" y="302.50"></text></g><g><title>invoke (click/core.py:1665) (32 samples, 0.60%)</title><rect x="0.0000%" y="116" width="0.5962%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="32"/><text x="0.2500%" y="126.50"></text></g><g><title>invoke (click/core.py:1404) (32 samples, 0.60%)</title><rect x="0.0000%" y="132" width="0.5962%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="32"/><text x="0.2500%" y="142.50"></text></g><g><title>invoke (click/core.py:763) (32 samples, 0.60%)</title><rect x="0.0000%" y="148" width="0.5962%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="32"/><text x="0.2500%" y="158.50"></text></g><g><title>new_func (click/decorators.py:26) (32 samples, 0.60%)</title><rect x="0.0000%" y="164" width="0.5962%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="32"/><text x="0.2500%" y="174.50"></text></g><g><title>main (zipline/__main__.py:60) (32 samples, 0.60%)</title><rect x="0.0000%" y="180" width="0.5962%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="32"/><text x="0.2500%" y="190.50"></text></g><g><title>load_extensions (zipline/utils/run_algo.py:280) (32 samples, 0.60%)</title><rect x="0.0000%" y="196" width="0.5962%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="32"/><text x="0.2500%" y="206.50"></text></g><g><title>&lt;module&gt; (extension.py:334) (21 samples, 0.39%)</title><rect x="0.2050%" y="212" width="0.3913%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="21"/><text x="0.4550%" y="222.50"></text></g><g><title>_calc_minute_index (zipline/data/minute_bars.py:79) (8 samples, 0.15%)</title><rect x="0.6149%" y="212" width="0.1491%" height="15" fill="rgb(226,26,5)" fg:x="33" fg:w="8"/><text x="0.8649%" y="222.50"></text></g><g><title>__init__ (zipline/data/minute_bars.py:469) (14 samples, 0.26%)</title><rect x="0.6149%" y="196" width="0.2609%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="14"/><text x="0.8649%" y="206.50"></text></g><g><title>_calc_minute_index (zipline/data/minute_bars.py:82) (6 samples, 0.11%)</title><rect x="0.7639%" y="212" width="0.1118%" height="15" fill="rgb(235,183,28)" fg:x="41" fg:w="6"/><text x="1.0139%" y="222.50"></text></g><g><title>ingest (zipline/data/bundles/core.py:410) (15 samples, 0.28%)</title><rect x="0.6149%" y="180" width="0.2795%" height="15" fill="rgb(221,5,38)" fg:x="33" fg:w="15"/><text x="0.8649%" y="190.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1842) (6 samples, 0.11%)</title><rect x="1.2297%" y="308" width="0.1118%" height="15" fill="rgb(247,18,42)" fg:x="66" fg:w="6"/><text x="1.4797%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (7 samples, 0.13%)</title><rect x="1.3415%" y="308" width="0.1304%" height="15" fill="rgb(241,131,45)" fg:x="72" fg:w="7"/><text x="1.5915%" y="318.50"></text></g><g><title>_box_item_values (pandas/core/frame.py:2498) (7 samples, 0.13%)</title><rect x="1.3415%" y="324" width="0.1304%" height="15" fill="rgb(249,31,29)" fg:x="72" fg:w="7"/><text x="1.5915%" y="334.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:2503) (7 samples, 0.13%)</title><rect x="1.3415%" y="340" width="0.1304%" height="15" fill="rgb(225,111,53)" fg:x="72" fg:w="7"/><text x="1.5915%" y="350.50"></text></g><g><title>from_array (pandas/core/series.py:282) (6 samples, 0.11%)</title><rect x="1.3602%" y="356" width="0.1118%" height="15" fill="rgb(238,160,17)" fg:x="73" fg:w="6"/><text x="1.6102%" y="366.50"></text></g><g><title>setter (pandas/core/indexing.py:516) (15 samples, 0.28%)</title><rect x="1.2111%" y="260" width="0.2795%" height="15" fill="rgb(214,148,48)" fg:x="65" fg:w="15"/><text x="1.4611%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (15 samples, 0.28%)</title><rect x="1.2111%" y="276" width="0.2795%" height="15" fill="rgb(232,36,49)" fg:x="65" fg:w="15"/><text x="1.4611%" y="286.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (15 samples, 0.28%)</title><rect x="1.2111%" y="292" width="0.2795%" height="15" fill="rgb(209,103,24)" fg:x="65" fg:w="15"/><text x="1.4611%" y="302.50"></text></g><g><title>copy (pandas/core/internals.py:3660) (6 samples, 0.11%)</title><rect x="1.5092%" y="292" width="0.1118%" height="15" fill="rgb(229,88,8)" fg:x="81" fg:w="6"/><text x="1.7592%" y="302.50"></text></g><g><title>copy (pandas/core/generic.py:4026) (11 samples, 0.20%)</title><rect x="1.5092%" y="276" width="0.2050%" height="15" fill="rgb(213,181,19)" fg:x="81" fg:w="11"/><text x="1.7592%" y="286.50"></text></g><g><title>setter (pandas/core/indexing.py:532) (13 samples, 0.24%)</title><rect x="1.4906%" y="260" width="0.2422%" height="15" fill="rgb(254,191,54)" fg:x="80" fg:w="13"/><text x="1.7406%" y="270.50"></text></g><g><title>setitem (pandas/core/internals.py:904) (19 samples, 0.35%)</title><rect x="1.9378%" y="308" width="0.3540%" height="15" fill="rgb(241,83,37)" fg:x="104" fg:w="19"/><text x="2.1878%" y="318.50"></text></g><g><title>_try_coerce_and_cast_result (pandas/core/internals.py:711) (18 samples, 0.34%)</title><rect x="1.9564%" y="324" width="0.3354%" height="15" fill="rgb(233,36,39)" fg:x="105" fg:w="18"/><text x="2.2064%" y="334.50"></text></g><g><title>_try_cast_result (pandas/core/internals.py:691) (14 samples, 0.26%)</title><rect x="2.0309%" y="340" width="0.2609%" height="15" fill="rgb(226,3,54)" fg:x="109" fg:w="14"/><text x="2.2809%" y="350.50"></text></g><g><title>maybe_downcast_to_dtype (pandas/core/dtypes/cast.py:82) (9 samples, 0.17%)</title><rect x="2.1241%" y="356" width="0.1677%" height="15" fill="rgb(245,192,40)" fg:x="114" fg:w="9"/><text x="2.3741%" y="366.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (28 samples, 0.52%)</title><rect x="1.8446%" y="292" width="0.5217%" height="15" fill="rgb(238,167,29)" fg:x="99" fg:w="28"/><text x="2.0946%" y="302.50"></text></g><g><title>setter (pandas/core/indexing.py:533) (38 samples, 0.71%)</title><rect x="1.7328%" y="260" width="0.7080%" height="15" fill="rgb(232,182,51)" fg:x="93" fg:w="38"/><text x="1.9828%" y="270.50"></text></g><g><title>setitem (pandas/core/internals.py:3441) (33 samples, 0.61%)</title><rect x="1.8260%" y="276" width="0.6149%" height="15" fill="rgb(231,60,39)" fg:x="98" fg:w="33"/><text x="2.0760%" y="286.50"></text></g><g><title>_set_item (pandas/core/frame.py:2585) (6 samples, 0.11%)</title><rect x="2.5526%" y="292" width="0.1118%" height="15" fill="rgb(208,69,12)" fg:x="137" fg:w="6"/><text x="2.8026%" y="302.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (13 samples, 0.24%)</title><rect x="2.6644%" y="292" width="0.2422%" height="15" fill="rgb(235,93,37)" fg:x="143" fg:w="13"/><text x="2.9144%" y="302.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (13 samples, 0.24%)</title><rect x="2.6644%" y="308" width="0.2422%" height="15" fill="rgb(213,116,39)" fg:x="143" fg:w="13"/><text x="2.9144%" y="318.50"></text></g><g><title>parse_csv_metadata (extension.py:130) (102 samples, 1.90%)</title><rect x="1.0434%" y="212" width="1.9005%" height="15" fill="rgb(222,207,29)" fg:x="56" fg:w="102"/><text x="1.2934%" y="222.50">p..</text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (99 samples, 1.84%)</title><rect x="1.0993%" y="228" width="1.8446%" height="15" fill="rgb(206,96,30)" fg:x="59" fg:w="99"/><text x="1.3493%" y="238.50">_..</text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:603) (93 samples, 1.73%)</title><rect x="1.2111%" y="244" width="1.7328%" height="15" fill="rgb(218,138,4)" fg:x="65" fg:w="93"/><text x="1.4611%" y="254.50"></text></g><g><title>setter (pandas/core/indexing.py:537) (26 samples, 0.48%)</title><rect x="2.4595%" y="260" width="0.4844%" height="15" fill="rgb(250,191,14)" fg:x="132" fg:w="26"/><text x="2.7095%" y="270.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (22 samples, 0.41%)</title><rect x="2.5340%" y="276" width="0.4099%" height="15" fill="rgb(239,60,40)" fg:x="136" fg:w="22"/><text x="2.7840%" y="286.50"></text></g><g><title>parse_csv_metadata (extension.py:87) (19 samples, 0.35%)</title><rect x="2.9439%" y="212" width="0.3540%" height="15" fill="rgb(206,27,48)" fg:x="158" fg:w="19"/><text x="3.1939%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (extension.py:87) (17 samples, 0.32%)</title><rect x="2.9812%" y="228" width="0.3168%" height="15" fill="rgb(225,35,8)" fg:x="160" fg:w="17"/><text x="3.2312%" y="238.50"></text></g><g><title>_read (pandas/io/parsers.py:431) (12 samples, 0.22%)</title><rect x="3.2979%" y="244" width="0.2236%" height="15" fill="rgb(250,213,24)" fg:x="177" fg:w="12"/><text x="3.5479%" y="254.50"></text></g><g><title>_infer_compression (pandas/io/common.py:270) (12 samples, 0.22%)</title><rect x="3.2979%" y="260" width="0.2236%" height="15" fill="rgb(247,123,22)" fg:x="177" fg:w="12"/><text x="3.5479%" y="270.50"></text></g><g><title>_stringify_path (pandas/io/common.py:157) (12 samples, 0.22%)</title><rect x="3.2979%" y="276" width="0.2236%" height="15" fill="rgb(231,138,38)" fg:x="177" fg:w="12"/><text x="3.5479%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (10 samples, 0.19%)</title><rect x="3.3352%" y="292" width="0.1863%" height="15" fill="rgb(231,145,46)" fg:x="179" fg:w="10"/><text x="3.5852%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (10 samples, 0.19%)</title><rect x="3.3352%" y="308" width="0.1863%" height="15" fill="rgb(251,118,11)" fg:x="179" fg:w="10"/><text x="3.5852%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 0.19%)</title><rect x="3.3352%" y="324" width="0.1863%" height="15" fill="rgb(217,147,25)" fg:x="179" fg:w="10"/><text x="3.5852%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (9 samples, 0.17%)</title><rect x="3.3538%" y="340" width="0.1677%" height="15" fill="rgb(247,81,37)" fg:x="180" fg:w="9"/><text x="3.6038%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (7 samples, 0.13%)</title><rect x="3.3911%" y="356" width="0.1304%" height="15" fill="rgb(209,12,38)" fg:x="182" fg:w="7"/><text x="3.6411%" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (6 samples, 0.11%)</title><rect x="3.4097%" y="372" width="0.1118%" height="15" fill="rgb(227,1,9)" fg:x="183" fg:w="6"/><text x="3.6597%" y="382.50"></text></g><g><title>get_filepath_or_buffer (pandas/io/common.py:187) (6 samples, 0.11%)</title><rect x="3.5215%" y="260" width="0.1118%" height="15" fill="rgb(248,47,43)" fg:x="189" fg:w="6"/><text x="3.7715%" y="270.50"></text></g><g><title>_read (pandas/io/parsers.py:433) (8 samples, 0.15%)</title><rect x="3.5215%" y="244" width="0.1491%" height="15" fill="rgb(221,10,30)" fg:x="189" fg:w="8"/><text x="3.7715%" y="254.50"></text></g><g><title>read (pandas/io/parsers.py:1069) (15 samples, 0.28%)</title><rect x="3.7451%" y="260" width="0.2795%" height="15" fill="rgb(210,229,1)" fg:x="201" fg:w="15"/><text x="3.9951%" y="270.50"></text></g><g><title>read (pandas/io/parsers.py:1839) (15 samples, 0.28%)</title><rect x="3.7451%" y="276" width="0.2795%" height="15" fill="rgb(222,148,37)" fg:x="201" fg:w="15"/><text x="3.9951%" y="286.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (7 samples, 0.13%)</title><rect x="4.1737%" y="340" width="0.1304%" height="15" fill="rgb(234,67,33)" fg:x="224" fg:w="7"/><text x="4.4237%" y="350.50"></text></g><g><title>_homogenize (pandas/core/frame.py:6477) (9 samples, 0.17%)</title><rect x="4.1550%" y="324" width="0.1677%" height="15" fill="rgb(247,98,35)" fg:x="223" fg:w="9"/><text x="4.4050%" y="334.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6168) (10 samples, 0.19%)</title><rect x="4.1550%" y="308" width="0.1863%" height="15" fill="rgb(247,138,52)" fg:x="223" fg:w="10"/><text x="4.4050%" y="318.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4659) (6 samples, 0.11%)</title><rect x="4.3413%" y="340" width="0.1118%" height="15" fill="rgb(213,79,30)" fg:x="233" fg:w="6"/><text x="4.5913%" y="350.50"></text></g><g><title>_simple_blockify (pandas/core/internals.py:4759) (7 samples, 0.13%)</title><rect x="4.5090%" y="356" width="0.1304%" height="15" fill="rgb(246,177,23)" fg:x="242" fg:w="7"/><text x="4.7590%" y="366.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (17 samples, 0.32%)</title><rect x="4.3413%" y="324" width="0.3168%" height="15" fill="rgb(230,62,27)" fg:x="233" fg:w="17"/><text x="4.5913%" y="334.50"></text></g><g><title>form_blocks (pandas/core/internals.py:4729) (8 samples, 0.15%)</title><rect x="4.5090%" y="340" width="0.1491%" height="15" fill="rgb(216,154,8)" fg:x="242" fg:w="8"/><text x="4.7590%" y="350.50"></text></g><g><title>parse_csv_metadata (extension.py:91) (79 samples, 1.47%)</title><rect x="3.2979%" y="212" width="1.4720%" height="15" fill="rgb(244,35,45)" fg:x="177" fg:w="79"/><text x="3.5479%" y="222.50"></text></g><g><title>parser_f (pandas/io/parsers.py:709) (79 samples, 1.47%)</title><rect x="3.2979%" y="228" width="1.4720%" height="15" fill="rgb(251,115,12)" fg:x="177" fg:w="79"/><text x="3.5479%" y="238.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (55 samples, 1.02%)</title><rect x="3.7451%" y="244" width="1.0248%" height="15" fill="rgb(240,54,50)" fg:x="201" fg:w="55"/><text x="3.9951%" y="254.50"></text></g><g><title>read (pandas/io/parsers.py:1087) (38 samples, 0.71%)</title><rect x="4.0619%" y="260" width="0.7080%" height="15" fill="rgb(233,84,52)" fg:x="218" fg:w="38"/><text x="4.3119%" y="270.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (37 samples, 0.69%)</title><rect x="4.0805%" y="276" width="0.6894%" height="15" fill="rgb(207,117,47)" fg:x="219" fg:w="37"/><text x="4.3305%" y="286.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (33 samples, 0.61%)</title><rect x="4.1550%" y="292" width="0.6149%" height="15" fill="rgb(249,43,39)" fg:x="223" fg:w="33"/><text x="4.4050%" y="302.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (23 samples, 0.43%)</title><rect x="4.3413%" y="308" width="0.4285%" height="15" fill="rgb(209,38,44)" fg:x="233" fg:w="23"/><text x="4.5913%" y="318.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4638) (6 samples, 0.11%)</title><rect x="4.6581%" y="324" width="0.1118%" height="15" fill="rgb(236,212,23)" fg:x="250" fg:w="6"/><text x="4.9081%" y="334.50"></text></g><g><title>parse_csv_metadata (extension.py:95) (6 samples, 0.11%)</title><rect x="4.7699%" y="212" width="0.1118%" height="15" fill="rgb(242,79,21)" fg:x="256" fg:w="6"/><text x="5.0199%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1364) (6 samples, 0.11%)</title><rect x="4.7699%" y="228" width="0.1118%" height="15" fill="rgb(211,96,35)" fg:x="256" fg:w="6"/><text x="5.0199%" y="238.50"></text></g><g><title>_getitem_scalar (pandas/core/indexing.py:1704) (6 samples, 0.11%)</title><rect x="4.7699%" y="244" width="0.1118%" height="15" fill="rgb(253,215,40)" fg:x="256" fg:w="6"/><text x="5.0199%" y="254.50"></text></g><g><title>_get_value (pandas/core/frame.py:1978) (6 samples, 0.11%)</title><rect x="4.7699%" y="260" width="0.1118%" height="15" fill="rgb(211,81,21)" fg:x="256" fg:w="6"/><text x="5.0199%" y="270.50"></text></g><g><title>ingest_bundle (extension.py:47) (220 samples, 4.10%)</title><rect x="0.8944%" y="196" width="4.0991%" height="15" fill="rgb(208,190,38)" fg:x="48" fg:w="220"/><text x="1.1444%" y="206.50">inge..</text></g><g><title>__getitem__ (pandas/core/indexing.py:1373) (6 samples, 0.11%)</title><rect x="5.0680%" y="356" width="0.1118%" height="15" fill="rgb(235,213,38)" fg:x="272" fg:w="6"/><text x="5.3180%" y="366.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1832) (6 samples, 0.11%)</title><rect x="5.0680%" y="372" width="0.1118%" height="15" fill="rgb(237,122,38)" fg:x="272" fg:w="6"/><text x="5.3180%" y="382.50"></text></g><g><title>_get_loc (pandas/core/indexing.py:150) (6 samples, 0.11%)</title><rect x="5.0680%" y="388" width="0.1118%" height="15" fill="rgb(244,218,35)" fg:x="272" fg:w="6"/><text x="5.3180%" y="398.50"></text></g><g><title>sort_values (pandas/core/frame.py:3638) (8 samples, 0.15%)</title><rect x="5.2916%" y="356" width="0.1491%" height="15" fill="rgb(240,68,47)" fg:x="284" fg:w="8"/><text x="5.5416%" y="366.50"></text></g><g><title>take (pandas/core/internals.py:4264) (7 samples, 0.13%)</title><rect x="5.3102%" y="372" width="0.1304%" height="15" fill="rgb(210,16,53)" fg:x="285" fg:w="7"/><text x="5.5602%" y="382.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:257) (21 samples, 0.39%)</title><rect x="5.0680%" y="340" width="0.3913%" height="15" fill="rgb(235,124,12)" fg:x="272" fg:w="21"/><text x="5.3180%" y="350.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:258) (6 samples, 0.11%)</title><rect x="5.4593%" y="340" width="0.1118%" height="15" fill="rgb(224,169,11)" fg:x="293" fg:w="6"/><text x="5.7093%" y="350.50"></text></g><g><title>_python_apply_general (pandas/core/groupby.py:809) (47 samples, 0.88%)</title><rect x="5.0494%" y="292" width="0.8757%" height="15" fill="rgb(250,166,2)" fg:x="271" fg:w="47"/><text x="5.2994%" y="302.50"></text></g><g><title>apply (pandas/core/groupby.py:1953) (47 samples, 0.88%)</title><rect x="5.0494%" y="308" width="0.8757%" height="15" fill="rgb(242,216,29)" fg:x="271" fg:w="47"/><text x="5.2994%" y="318.50"></text></g><g><title>fast_apply (pandas/core/groupby.py:4712) (47 samples, 0.88%)</title><rect x="5.0494%" y="324" width="0.8757%" height="15" fill="rgb(230,116,27)" fg:x="271" fg:w="47"/><text x="5.2994%" y="334.50"></text></g><g><title>_check_asset_group (zipline/assets/asset_writer.py:260) (14 samples, 0.26%)</title><rect x="5.6642%" y="340" width="0.2609%" height="15" fill="rgb(228,99,48)" fg:x="304" fg:w="14"/><text x="5.9142%" y="350.50"></text></g><g><title>drop (pandas/core/generic.py:2530) (14 samples, 0.26%)</title><rect x="5.6642%" y="356" width="0.2609%" height="15" fill="rgb(253,11,6)" fg:x="304" fg:w="14"/><text x="5.9142%" y="366.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:2563) (11 samples, 0.20%)</title><rect x="5.7201%" y="372" width="0.2050%" height="15" fill="rgb(247,143,39)" fg:x="307" fg:w="11"/><text x="5.9701%" y="382.50"></text></g><g><title>reindex (pandas/core/series.py:2681) (11 samples, 0.20%)</title><rect x="5.7201%" y="388" width="0.2050%" height="15" fill="rgb(236,97,10)" fg:x="307" fg:w="11"/><text x="5.9701%" y="398.50"></text></g><g><title>reindex (pandas/core/generic.py:3023) (8 samples, 0.15%)</title><rect x="5.7760%" y="404" width="0.1491%" height="15" fill="rgb(233,208,19)" fg:x="310" fg:w="8"/><text x="6.0260%" y="414.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:3041) (8 samples, 0.15%)</title><rect x="5.7760%" y="420" width="0.1491%" height="15" fill="rgb(216,164,2)" fg:x="310" fg:w="8"/><text x="6.0260%" y="430.50"></text></g><g><title>_load_data (zipline/assets/asset_writer.py:1003) (54 samples, 1.01%)</title><rect x="4.9935%" y="228" width="1.0061%" height="15" fill="rgb(220,129,5)" fg:x="268" fg:w="54"/><text x="5.2435%" y="238.50"></text></g><g><title>_normalize_equities (zipline/assets/asset_writer.py:938) (54 samples, 1.01%)</title><rect x="4.9935%" y="244" width="1.0061%" height="15" fill="rgb(242,17,10)" fg:x="268" fg:w="54"/><text x="5.2435%" y="254.50"></text></g><g><title>_split_symbol_mappings (zipline/assets/asset_writer.py:365) (51 samples, 0.95%)</title><rect x="5.0494%" y="260" width="0.9503%" height="15" fill="rgb(242,107,0)" fg:x="271" fg:w="51"/><text x="5.2994%" y="270.50"></text></g><g><title>apply (pandas/core/groupby.py:805) (51 samples, 0.95%)</title><rect x="5.0494%" y="276" width="0.9503%" height="15" fill="rgb(251,28,31)" fg:x="271" fg:w="51"/><text x="5.2994%" y="286.50"></text></g><g><title>write (zipline/assets/asset_writer.py:785) (55 samples, 1.02%)</title><rect x="4.9935%" y="212" width="1.0248%" height="15" fill="rgb(233,223,10)" fg:x="268" fg:w="55"/><text x="5.2435%" y="222.50"></text></g><g><title>_real_write (zipline/assets/asset_writer.py:470) (7 samples, 0.13%)</title><rect x="6.0183%" y="228" width="0.1304%" height="15" fill="rgb(215,21,27)" fg:x="323" fg:w="7"/><text x="6.2683%" y="238.50"></text></g><g><title>ingest_bundle (extension.py:52) (66 samples, 1.23%)</title><rect x="4.9935%" y="196" width="1.2297%" height="15" fill="rgb(232,23,21)" fg:x="268" fg:w="66"/><text x="5.2435%" y="206.50"></text></g><g><title>write (zipline/assets/asset_writer.py:795) (11 samples, 0.20%)</title><rect x="6.0183%" y="212" width="0.2050%" height="15" fill="rgb(244,5,23)" fg:x="323" fg:w="11"/><text x="6.2683%" y="222.50"></text></g><g><title>try_datetime (pandas/core/dtypes/cast.py:882) (8 samples, 0.15%)</title><rect x="6.3164%" y="388" width="0.1491%" height="15" fill="rgb(226,81,46)" fg:x="339" fg:w="8"/><text x="6.5664%" y="398.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (16 samples, 0.30%)</title><rect x="6.2791%" y="308" width="0.2981%" height="15" fill="rgb(247,70,30)" fg:x="337" fg:w="16"/><text x="6.5291%" y="318.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (16 samples, 0.30%)</title><rect x="6.2791%" y="324" width="0.2981%" height="15" fill="rgb(212,68,19)" fg:x="337" fg:w="16"/><text x="6.5291%" y="334.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (16 samples, 0.30%)</title><rect x="6.2791%" y="340" width="0.2981%" height="15" fill="rgb(240,187,13)" fg:x="337" fg:w="16"/><text x="6.5291%" y="350.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (16 samples, 0.30%)</title><rect x="6.2791%" y="356" width="0.2981%" height="15" fill="rgb(223,113,26)" fg:x="337" fg:w="16"/><text x="6.5291%" y="366.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:914) (14 samples, 0.26%)</title><rect x="6.3164%" y="372" width="0.2609%" height="15" fill="rgb(206,192,2)" fg:x="339" fg:w="14"/><text x="6.5664%" y="382.50"></text></g><g><title>try_datetime (pandas/core/dtypes/cast.py:890) (6 samples, 0.11%)</title><rect x="6.4654%" y="388" width="0.1118%" height="15" fill="rgb(241,108,4)" fg:x="347" fg:w="6"/><text x="6.7154%" y="398.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:380) (6 samples, 0.11%)</title><rect x="6.4654%" y="404" width="0.1118%" height="15" fill="rgb(247,173,49)" fg:x="347" fg:w="6"/><text x="6.7154%" y="414.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:136) (20 samples, 0.37%)</title><rect x="6.2418%" y="276" width="0.3726%" height="15" fill="rgb(224,114,35)" fg:x="335" fg:w="20"/><text x="6.4918%" y="286.50"></text></g><g><title>iterrows (pandas/core/frame.py:748) (20 samples, 0.37%)</title><rect x="6.2418%" y="292" width="0.3726%" height="15" fill="rgb(245,159,27)" fg:x="335" fg:w="20"/><text x="6.4918%" y="302.50"></text></g><g><title>__str__ (tqdm/std.py:1148) (9 samples, 0.17%)</title><rect x="6.6518%" y="340" width="0.1677%" height="15" fill="rgb(245,172,44)" fg:x="357" fg:w="9"/><text x="6.9018%" y="350.50"></text></g><g><title>refresh (tqdm/std.py:1344) (13 samples, 0.24%)</title><rect x="6.6331%" y="308" width="0.2422%" height="15" fill="rgb(236,23,11)" fg:x="356" fg:w="13"/><text x="6.8831%" y="318.50"></text></g><g><title>display (tqdm/std.py:1492) (12 samples, 0.22%)</title><rect x="6.6518%" y="324" width="0.2236%" height="15" fill="rgb(205,117,38)" fg:x="357" fg:w="12"/><text x="6.9018%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:142) (14 samples, 0.26%)</title><rect x="6.6331%" y="276" width="0.2609%" height="15" fill="rgb(237,72,25)" fg:x="356" fg:w="14"/><text x="6.8831%" y="286.50"></text></g><g><title>set_description (tqdm/std.py:1391) (14 samples, 0.26%)</title><rect x="6.6331%" y="292" width="0.2609%" height="15" fill="rgb(244,70,9)" fg:x="356" fg:w="14"/><text x="6.8831%" y="302.50"></text></g><g><title>__init__ (pandas/io/parsers.py:1695) (8 samples, 0.15%)</title><rect x="7.0617%" y="356" width="0.1491%" height="15" fill="rgb(217,125,39)" fg:x="379" fg:w="8"/><text x="7.3117%" y="366.50"></text></g><g><title>_read (pandas/io/parsers.py:449) (11 samples, 0.20%)</title><rect x="7.0244%" y="308" width="0.2050%" height="15" fill="rgb(235,36,10)" fg:x="377" fg:w="11"/><text x="7.2744%" y="318.50"></text></g><g><title>__init__ (pandas/io/parsers.py:818) (9 samples, 0.17%)</title><rect x="7.0617%" y="324" width="0.1677%" height="15" fill="rgb(251,123,47)" fg:x="379" fg:w="9"/><text x="7.3117%" y="334.50"></text></g><g><title>_make_engine (pandas/io/parsers.py:1049) (9 samples, 0.17%)</title><rect x="7.0617%" y="340" width="0.1677%" height="15" fill="rgb(221,13,13)" fg:x="379" fg:w="9"/><text x="7.3117%" y="350.50"></text></g><g><title>read (pandas/io/parsers.py:1069) (41 samples, 0.76%)</title><rect x="7.2294%" y="324" width="0.7639%" height="15" fill="rgb(238,131,9)" fg:x="388" fg:w="41"/><text x="7.4794%" y="334.50"></text></g><g><title>read (pandas/io/parsers.py:1839) (41 samples, 0.76%)</title><rect x="7.2294%" y="340" width="0.7639%" height="15" fill="rgb(211,50,8)" fg:x="388" fg:w="41"/><text x="7.4794%" y="350.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (7 samples, 0.13%)</title><rect x="8.2169%" y="388" width="0.1304%" height="15" fill="rgb(245,182,24)" fg:x="441" fg:w="7"/><text x="8.4669%" y="398.50"></text></g><g><title>_read (pandas/io/parsers.py:455) (64 samples, 1.19%)</title><rect x="7.2294%" y="308" width="1.1925%" height="15" fill="rgb(242,14,37)" fg:x="388" fg:w="64"/><text x="7.4794%" y="318.50"></text></g><g><title>read (pandas/io/parsers.py:1087) (21 samples, 0.39%)</title><rect x="8.0306%" y="324" width="0.3913%" height="15" fill="rgb(246,228,12)" fg:x="431" fg:w="21"/><text x="8.2806%" y="334.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (21 samples, 0.39%)</title><rect x="8.0306%" y="340" width="0.3913%" height="15" fill="rgb(213,55,15)" fg:x="431" fg:w="21"/><text x="8.2806%" y="350.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (15 samples, 0.28%)</title><rect x="8.1424%" y="356" width="0.2795%" height="15" fill="rgb(209,9,3)" fg:x="437" fg:w="15"/><text x="8.3924%" y="366.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (11 samples, 0.20%)</title><rect x="8.2169%" y="372" width="0.2050%" height="15" fill="rgb(230,59,30)" fg:x="441" fg:w="11"/><text x="8.4669%" y="382.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:144) (84 samples, 1.57%)</title><rect x="6.8940%" y="276" width="1.5651%" height="15" fill="rgb(209,121,21)" fg:x="370" fg:w="84"/><text x="7.1440%" y="286.50"></text></g><g><title>parser_f (pandas/io/parsers.py:709) (83 samples, 1.55%)</title><rect x="6.9126%" y="292" width="1.5465%" height="15" fill="rgb(220,109,13)" fg:x="371" fg:w="83"/><text x="7.1626%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:145) (11 samples, 0.20%)</title><rect x="8.4591%" y="276" width="0.2050%" height="15" fill="rgb(232,18,1)" fg:x="454" fg:w="11"/><text x="8.7091%" y="286.50"></text></g><g><title>iterrows (pandas/core/frame.py:747) (15 samples, 0.28%)</title><rect x="8.9622%" y="292" width="0.2795%" height="15" fill="rgb(215,41,42)" fg:x="481" fg:w="15"/><text x="9.2122%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:172) (12 samples, 0.22%)</title><rect x="10.5087%" y="308" width="0.2236%" height="15" fill="rgb(224,123,36)" fg:x="564" fg:w="12"/><text x="10.7587%" y="318.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4185) (7 samples, 0.13%)</title><rect x="10.6018%" y="324" width="0.1304%" height="15" fill="rgb(240,125,3)" fg:x="569" fg:w="7"/><text x="10.8518%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:179) (13 samples, 0.24%)</title><rect x="10.8068%" y="308" width="0.2422%" height="15" fill="rgb(205,98,50)" fg:x="580" fg:w="13"/><text x="11.0568%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:189) (6 samples, 0.11%)</title><rect x="11.0863%" y="308" width="0.1118%" height="15" fill="rgb(205,185,37)" fg:x="595" fg:w="6"/><text x="11.3363%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:190) (7 samples, 0.13%)</title><rect x="11.1981%" y="308" width="0.1304%" height="15" fill="rgb(238,207,15)" fg:x="601" fg:w="7"/><text x="11.4481%" y="318.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3175) (12 samples, 0.22%)</title><rect x="11.9247%" y="324" width="0.2236%" height="15" fill="rgb(213,199,42)" fg:x="640" fg:w="12"/><text x="12.1747%" y="334.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:328) (13 samples, 0.24%)</title><rect x="13.9184%" y="372" width="0.2422%" height="15" fill="rgb(235,201,11)" fg:x="747" fg:w="13"/><text x="14.1684%" y="382.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:332) (10 samples, 0.19%)</title><rect x="14.1606%" y="372" width="0.1863%" height="15" fill="rgb(207,46,11)" fg:x="760" fg:w="10"/><text x="14.4106%" y="382.50"></text></g><g><title>_name_includes_bit_suffix (numpy/core/_dtype.py:308) (11 samples, 0.20%)</title><rect x="14.4401%" y="388" width="0.2050%" height="15" fill="rgb(241,35,35)" fg:x="775" fg:w="11"/><text x="14.6901%" y="398.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:335) (19 samples, 0.35%)</title><rect x="14.3469%" y="372" width="0.3540%" height="15" fill="rgb(243,32,47)" fg:x="770" fg:w="19"/><text x="14.5969%" y="382.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:339) (15 samples, 0.28%)</title><rect x="14.7010%" y="372" width="0.2795%" height="15" fill="rgb(247,202,23)" fg:x="789" fg:w="15"/><text x="14.9510%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3157) (142 samples, 2.65%)</title><rect x="12.3533%" y="340" width="2.6458%" height="15" fill="rgb(219,102,11)" fg:x="663" fg:w="142"/><text x="12.6033%" y="350.50">_t..</text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:835) (128 samples, 2.38%)</title><rect x="12.6141%" y="356" width="2.3849%" height="15" fill="rgb(243,110,44)" fg:x="677" fg:w="128"/><text x="12.8641%" y="366.50">ma..</text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1030) (15 samples, 0.28%)</title><rect x="15.1854%" y="356" width="0.2795%" height="15" fill="rgb(222,74,54)" fg:x="815" fg:w="15"/><text x="15.4354%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1042) (7 samples, 0.13%)</title><rect x="15.4649%" y="356" width="0.1304%" height="15" fill="rgb(216,99,12)" fg:x="830" fg:w="7"/><text x="15.7149%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1043) (9 samples, 0.17%)</title><rect x="15.5953%" y="356" width="0.1677%" height="15" fill="rgb(226,22,26)" fg:x="837" fg:w="9"/><text x="15.8453%" y="366.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:856) (57 samples, 1.06%)</title><rect x="16.0238%" y="372" width="1.0620%" height="15" fill="rgb(217,163,10)" fg:x="860" fg:w="57"/><text x="16.2738%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (27 samples, 0.50%)</title><rect x="16.5828%" y="388" width="0.5031%" height="15" fill="rgb(213,25,53)" fg:x="890" fg:w="27"/><text x="16.8328%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:858) (22 samples, 0.41%)</title><rect x="17.0859%" y="372" width="0.4099%" height="15" fill="rgb(252,105,26)" fg:x="917" fg:w="22"/><text x="17.3359%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (11 samples, 0.20%)</title><rect x="17.2909%" y="388" width="0.2050%" height="15" fill="rgb(220,39,43)" fg:x="928" fg:w="11"/><text x="17.5409%" y="398.50"></text></g><g><title>__contains__ (_weakrefset.py:72) (7 samples, 0.13%)</title><rect x="18.3156%" y="420" width="0.1304%" height="15" fill="rgb(229,68,48)" fg:x="983" fg:w="7"/><text x="18.5656%" y="430.50"></text></g><g><title>__instancecheck__ (abc.py:184) (31 samples, 0.58%)</title><rect x="18.0175%" y="404" width="0.5776%" height="15" fill="rgb(252,8,32)" fg:x="967" fg:w="31"/><text x="18.2675%" y="414.50"></text></g><g><title>__contains__ (_weakrefset.py:75) (8 samples, 0.15%)</title><rect x="18.4461%" y="420" width="0.1491%" height="15" fill="rgb(223,20,43)" fg:x="990" fg:w="8"/><text x="18.6961%" y="430.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (51 samples, 0.95%)</title><rect x="17.6635%" y="388" width="0.9503%" height="15" fill="rgb(229,81,49)" fg:x="948" fg:w="51"/><text x="17.9135%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:864) (68 samples, 1.27%)</title><rect x="17.5144%" y="372" width="1.2670%" height="15" fill="rgb(236,28,36)" fg:x="940" fg:w="68"/><text x="17.7644%" y="382.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:267) (9 samples, 0.17%)</title><rect x="18.6138%" y="388" width="0.1677%" height="15" fill="rgb(249,185,26)" fg:x="999" fg:w="9"/><text x="18.8638%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:866) (15 samples, 0.28%)</title><rect x="18.7814%" y="372" width="0.2795%" height="15" fill="rgb(249,174,33)" fg:x="1008" fg:w="15"/><text x="19.0314%" y="382.50"></text></g><g><title>_get_dtype_type (pandas/core/dtypes/common.py:1789) (8 samples, 0.15%)</title><rect x="19.3218%" y="404" width="0.1491%" height="15" fill="rgb(233,201,37)" fg:x="1037" fg:w="8"/><text x="19.5718%" y="414.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:114) (33 samples, 0.61%)</title><rect x="19.2659%" y="388" width="0.6149%" height="15" fill="rgb(221,78,26)" fg:x="1034" fg:w="33"/><text x="19.5159%" y="398.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:869) (49 samples, 0.91%)</title><rect x="19.0609%" y="372" width="0.9130%" height="15" fill="rgb(250,127,30)" fg:x="1023" fg:w="49"/><text x="19.3109%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:872) (10 samples, 0.19%)</title><rect x="19.9739%" y="372" width="0.1863%" height="15" fill="rgb(230,49,44)" fg:x="1072" fg:w="10"/><text x="20.2239%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:876) (8 samples, 0.15%)</title><rect x="20.2534%" y="372" width="0.1491%" height="15" fill="rgb(229,67,23)" fg:x="1087" fg:w="8"/><text x="20.5034%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:879) (7 samples, 0.13%)</title><rect x="20.4025%" y="372" width="0.1304%" height="15" fill="rgb(249,83,47)" fg:x="1095" fg:w="7"/><text x="20.6525%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:909) (53 samples, 0.99%)</title><rect x="20.5888%" y="372" width="0.9875%" height="15" fill="rgb(215,43,3)" fg:x="1105" fg:w="53"/><text x="20.8388%" y="382.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:911) (6 samples, 0.11%)</title><rect x="21.5763%" y="372" width="0.1118%" height="15" fill="rgb(238,154,13)" fg:x="1158" fg:w="6"/><text x="21.8263%" y="382.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (319 samples, 5.94%)</title><rect x="15.7630%" y="356" width="5.9437%" height="15" fill="rgb(219,56,2)" fg:x="846" fg:w="319"/><text x="16.0130%" y="366.50">maybe_ca..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1007) (25 samples, 0.47%)</title><rect x="22.0235%" y="372" width="0.4658%" height="15" fill="rgb(233,0,4)" fg:x="1182" fg:w="25"/><text x="22.2735%" y="382.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:939) (42 samples, 0.78%)</title><rect x="21.7254%" y="356" width="0.7826%" height="15" fill="rgb(235,30,7)" fg:x="1166" fg:w="42"/><text x="21.9754%" y="366.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:940) (27 samples, 0.50%)</title><rect x="22.5079%" y="356" width="0.5031%" height="15" fill="rgb(250,79,13)" fg:x="1208" fg:w="27"/><text x="22.7579%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1007) (10 samples, 0.19%)</title><rect x="22.8247%" y="372" width="0.1863%" height="15" fill="rgb(211,146,34)" fg:x="1225" fg:w="10"/><text x="23.0747%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (433 samples, 8.07%)</title><rect x="14.9991%" y="340" width="8.0678%" height="15" fill="rgb(228,22,38)" fg:x="805" fg:w="433"/><text x="15.2491%" y="350.50">_try_cast (..</text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (12 samples, 0.22%)</title><rect x="23.5513%" y="388" width="0.2236%" height="15" fill="rgb(235,168,5)" fg:x="1264" fg:w="12"/><text x="23.8013%" y="398.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1646) (52 samples, 0.97%)</title><rect x="23.1228%" y="356" width="0.9689%" height="15" fill="rgb(221,155,16)" fg:x="1241" fg:w="52"/><text x="23.3728%" y="366.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:220) (50 samples, 0.93%)</title><rect x="23.1601%" y="372" width="0.9316%" height="15" fill="rgb(215,215,53)" fg:x="1243" fg:w="50"/><text x="23.4101%" y="382.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (14 samples, 0.26%)</title><rect x="23.8308%" y="388" width="0.2609%" height="15" fill="rgb(223,4,10)" fg:x="1279" fg:w="14"/><text x="24.0808%" y="398.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:92) (7 samples, 0.13%)</title><rect x="23.9612%" y="404" width="0.1304%" height="15" fill="rgb(234,103,6)" fg:x="1286" fg:w="7"/><text x="24.2112%" y="414.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1648) (46 samples, 0.86%)</title><rect x="24.0917%" y="356" width="0.8571%" height="15" fill="rgb(227,97,0)" fg:x="1293" fg:w="46"/><text x="24.3417%" y="366.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:148) (42 samples, 0.78%)</title><rect x="24.1662%" y="372" width="0.7826%" height="15" fill="rgb(234,150,53)" fg:x="1297" fg:w="42"/><text x="24.4162%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (17 samples, 0.32%)</title><rect x="24.6320%" y="388" width="0.3168%" height="15" fill="rgb(228,201,54)" fg:x="1322" fg:w="17"/><text x="24.8820%" y="398.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:264) (11 samples, 0.20%)</title><rect x="25.0233%" y="372" width="0.2050%" height="15" fill="rgb(222,22,37)" fg:x="1343" fg:w="11"/><text x="25.2733%" y="382.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1650) (36 samples, 0.67%)</title><rect x="24.9488%" y="356" width="0.6708%" height="15" fill="rgb(237,53,32)" fg:x="1339" fg:w="36"/><text x="25.1988%" y="366.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:266) (21 samples, 0.39%)</title><rect x="25.2282%" y="372" width="0.3913%" height="15" fill="rgb(233,25,53)" fg:x="1354" fg:w="21"/><text x="25.4782%" y="382.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:369) (13 samples, 0.24%)</title><rect x="25.3773%" y="388" width="0.2422%" height="15" fill="rgb(210,40,34)" fg:x="1362" fg:w="13"/><text x="25.6273%" y="398.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:92) (6 samples, 0.11%)</title><rect x="25.5077%" y="404" width="0.1118%" height="15" fill="rgb(241,220,44)" fg:x="1369" fg:w="6"/><text x="25.7577%" y="414.50"></text></g><g><title>_try_cast (pandas/core/series.py:3162) (138 samples, 2.57%)</title><rect x="23.0669%" y="340" width="2.5713%" height="15" fill="rgb(235,28,35)" fg:x="1238" fg:w="138"/><text x="23.3169%" y="350.50">_t..</text></g><g><title>_try_cast (pandas/core/series.py:3163) (15 samples, 0.28%)</title><rect x="25.6382%" y="340" width="0.2795%" height="15" fill="rgb(210,56,17)" fg:x="1376" fg:w="15"/><text x="25.8882%" y="350.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3195) (737 samples, 13.73%)</title><rect x="12.2228%" y="324" width="13.7321%" height="15" fill="rgb(224,130,29)" fg:x="656" fg:w="737"/><text x="12.4728%" y="334.50">_sanitize_array (pand..</text></g><g><title>_sanitize_array (pandas/core/series.py:3246) (8 samples, 0.15%)</title><rect x="25.9735%" y="324" width="0.1491%" height="15" fill="rgb(235,212,8)" fg:x="1394" fg:w="8"/><text x="26.2235%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3266) (6 samples, 0.11%)</title><rect x="26.1412%" y="324" width="0.1118%" height="15" fill="rgb(223,33,50)" fg:x="1403" fg:w="6"/><text x="26.3912%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3269) (13 samples, 0.24%)</title><rect x="26.2530%" y="324" width="0.2422%" height="15" fill="rgb(219,149,13)" fg:x="1409" fg:w="13"/><text x="26.5030%" y="334.50"></text></g><g><title>__len__ (pandas/core/indexes/base.py:561) (7 samples, 0.13%)</title><rect x="26.3648%" y="340" width="0.1304%" height="15" fill="rgb(250,156,29)" fg:x="1415" fg:w="7"/><text x="26.6148%" y="350.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3281) (16 samples, 0.30%)</title><rect x="26.4952%" y="324" width="0.2981%" height="15" fill="rgb(216,193,19)" fg:x="1422" fg:w="16"/><text x="26.7452%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (820 samples, 15.28%)</title><rect x="11.5521%" y="308" width="15.2786%" height="15" fill="rgb(216,135,14)" fg:x="620" fg:w="820"/><text x="11.8021%" y="318.50">__init__ (pandas/core/s..</text></g><g><title>__init__ (pandas/core/internals.py:4365) (8 samples, 0.15%)</title><rect x="27.0729%" y="324" width="0.1491%" height="15" fill="rgb(241,47,5)" fg:x="1453" fg:w="8"/><text x="27.3229%" y="334.50"></text></g><g><title>__init__ (pandas/core/internals.py:4401) (18 samples, 0.34%)</title><rect x="27.4269%" y="324" width="0.3354%" height="15" fill="rgb(233,42,35)" fg:x="1472" fg:w="18"/><text x="27.6769%" y="334.50"></text></g><g><title>__len__ (pandas/core/indexes/base.py:561) (6 samples, 0.11%)</title><rect x="27.6505%" y="340" width="0.1118%" height="15" fill="rgb(231,13,6)" fg:x="1484" fg:w="6"/><text x="27.9005%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2923) (6 samples, 0.11%)</title><rect x="27.9113%" y="340" width="0.1118%" height="15" fill="rgb(207,181,40)" fg:x="1498" fg:w="6"/><text x="28.1613%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2929) (8 samples, 0.15%)</title><rect x="28.2281%" y="340" width="0.1491%" height="15" fill="rgb(254,173,49)" fg:x="1515" fg:w="8"/><text x="28.4781%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2931) (6 samples, 0.11%)</title><rect x="28.3771%" y="340" width="0.1118%" height="15" fill="rgb(221,1,38)" fg:x="1523" fg:w="6"/><text x="28.6271%" y="350.50"></text></g><g><title>make_block (pandas/core/internals.py:2937) (16 samples, 0.30%)</title><rect x="28.5262%" y="340" width="0.2981%" height="15" fill="rgb(206,124,46)" fg:x="1531" fg:w="16"/><text x="28.7762%" y="350.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:264) (16 samples, 0.30%)</title><rect x="28.9920%" y="356" width="0.2981%" height="15" fill="rgb(249,21,11)" fg:x="1556" fg:w="16"/><text x="29.2420%" y="366.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (8 samples, 0.15%)</title><rect x="29.1410%" y="372" width="0.1491%" height="15" fill="rgb(222,201,40)" fg:x="1564" fg:w="8"/><text x="29.3910%" y="382.50"></text></g><g><title>make_block (pandas/core/internals.py:2944) (34 samples, 0.63%)</title><rect x="28.8616%" y="340" width="0.6335%" height="15" fill="rgb(235,61,29)" fg:x="1549" fg:w="34"/><text x="29.1116%" y="350.50"></text></g><g><title>is_datetimetz (pandas/core/dtypes/common.py:266) (11 samples, 0.20%)</title><rect x="29.2901%" y="356" width="0.2050%" height="15" fill="rgb(219,207,3)" fg:x="1572" fg:w="11"/><text x="29.5401%" y="366.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:369) (9 samples, 0.17%)</title><rect x="29.3274%" y="372" width="0.1677%" height="15" fill="rgb(222,56,46)" fg:x="1574" fg:w="9"/><text x="29.5774%" y="382.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (14 samples, 0.26%)</title><rect x="29.9236%" y="372" width="0.2609%" height="15" fill="rgb(239,76,54)" fg:x="1606" fg:w="14"/><text x="30.1736%" y="382.50"></text></g><g><title>make_block (pandas/core/internals.py:2948) (46 samples, 0.86%)</title><rect x="29.5510%" y="340" width="0.8571%" height="15" fill="rgb(231,124,27)" fg:x="1586" fg:w="46"/><text x="29.8010%" y="350.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:220) (42 samples, 0.78%)</title><rect x="29.6255%" y="356" width="0.7826%" height="15" fill="rgb(249,195,6)" fg:x="1590" fg:w="42"/><text x="29.8755%" y="366.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (11 samples, 0.20%)</title><rect x="30.2031%" y="372" width="0.2050%" height="15" fill="rgb(237,174,47)" fg:x="1621" fg:w="11"/><text x="30.4531%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:2078) (7 samples, 0.13%)</title><rect x="30.7062%" y="356" width="0.1304%" height="15" fill="rgb(206,201,31)" fg:x="1648" fg:w="7"/><text x="30.9562%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:2081) (19 samples, 0.35%)</title><rect x="30.8366%" y="356" width="0.3540%" height="15" fill="rgb(231,57,52)" fg:x="1655" fg:w="19"/><text x="31.0866%" y="366.50"></text></g><g><title>__init__ (pandas/core/internals.py:110) (6 samples, 0.11%)</title><rect x="31.7868%" y="372" width="0.1118%" height="15" fill="rgb(248,177,22)" fg:x="1706" fg:w="6"/><text x="32.0368%" y="382.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:228) (6 samples, 0.11%)</title><rect x="32.0104%" y="388" width="0.1118%" height="15" fill="rgb(215,211,37)" fg:x="1718" fg:w="6"/><text x="32.2604%" y="398.50"></text></g><g><title>mgr_locs (pandas/core/internals.py:229) (15 samples, 0.28%)</title><rect x="32.1222%" y="388" width="0.2795%" height="15" fill="rgb(241,128,51)" fg:x="1724" fg:w="15"/><text x="32.3722%" y="398.50"></text></g><g><title>__init__ (pandas/core/internals.py:114) (27 samples, 0.50%)</title><rect x="31.9359%" y="372" width="0.5031%" height="15" fill="rgb(227,165,31)" fg:x="1714" fg:w="27"/><text x="32.1859%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:4402) (281 samples, 5.24%)</title><rect x="27.7623%" y="324" width="5.2357%" height="15" fill="rgb(228,167,24)" fg:x="1490" fg:w="281"/><text x="28.0123%" y="334.50">__init..</text></g><g><title>make_block (pandas/core/internals.py:2957) (138 samples, 2.57%)</title><rect x="30.4267%" y="340" width="2.5713%" height="15" fill="rgb(228,143,12)" fg:x="1633" fg:w="138"/><text x="30.6767%" y="350.50">ma..</text></g><g><title>__init__ (pandas/core/internals.py:2082) (97 samples, 1.81%)</title><rect x="31.1906%" y="356" width="1.8073%" height="15" fill="rgb(249,149,8)" fg:x="1674" fg:w="97"/><text x="31.4406%" y="366.50">_..</text></g><g><title>__init__ (pandas/core/internals.py:117) (29 samples, 0.54%)</title><rect x="32.4576%" y="372" width="0.5403%" height="15" fill="rgb(243,35,44)" fg:x="1742" fg:w="29"/><text x="32.7076%" y="382.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (335 samples, 6.24%)</title><rect x="26.8306%" y="308" width="6.2418%" height="15" fill="rgb(246,89,9)" fg:x="1440" fg:w="335"/><text x="27.0806%" y="318.50">__init__..</text></g><g><title>__init__ (pandas/core/generic.py:133) (18 samples, 0.34%)</title><rect x="33.2774%" y="324" width="0.3354%" height="15" fill="rgb(233,213,13)" fg:x="1786" fg:w="18"/><text x="33.5274%" y="334.50"></text></g><g><title>__init__ (pandas/core/generic.py:134) (8 samples, 0.15%)</title><rect x="33.6128%" y="324" width="0.1491%" height="15" fill="rgb(233,141,41)" fg:x="1804" fg:w="8"/><text x="33.8628%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (46 samples, 0.86%)</title><rect x="33.0725%" y="308" width="0.8571%" height="15" fill="rgb(239,167,4)" fg:x="1775" fg:w="46"/><text x="33.3225%" y="318.50"></text></g><g><title>__init__ (pandas/core/generic.py:135) (9 samples, 0.17%)</title><rect x="33.7619%" y="324" width="0.1677%" height="15" fill="rgb(209,217,16)" fg:x="1812" fg:w="9"/><text x="34.0119%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3626) (66 samples, 1.23%)</title><rect x="34.1532%" y="324" width="1.2297%" height="15" fill="rgb(219,88,35)" fg:x="1833" fg:w="66"/><text x="34.4032%" y="334.50"></text></g><g><title>name (pandas/core/series.py:338) (33 samples, 0.61%)</title><rect x="34.7680%" y="340" width="0.6149%" height="15" fill="rgb(220,193,23)" fg:x="1866" fg:w="33"/><text x="35.0180%" y="350.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:3610) (12 samples, 0.22%)</title><rect x="35.1593%" y="356" width="0.2236%" height="15" fill="rgb(230,90,52)" fg:x="1887" fg:w="12"/><text x="35.4093%" y="366.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3628) (6 samples, 0.11%)</title><rect x="35.3829%" y="324" width="0.1118%" height="15" fill="rgb(252,106,19)" fg:x="1899" fg:w="6"/><text x="35.6329%" y="334.50"></text></g><g><title>name (pandas/core/series.py:342) (14 samples, 0.26%)</title><rect x="35.9232%" y="340" width="0.2609%" height="15" fill="rgb(206,74,20)" fg:x="1928" fg:w="14"/><text x="36.1732%" y="350.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:3636) (30 samples, 0.56%)</title><rect x="35.7369%" y="324" width="0.5590%" height="15" fill="rgb(230,138,44)" fg:x="1918" fg:w="30"/><text x="35.9869%" y="334.50"></text></g><g><title>name (pandas/core/series.py:344) (6 samples, 0.11%)</title><rect x="36.1841%" y="340" width="0.1118%" height="15" fill="rgb(235,182,43)" fg:x="1942" fg:w="6"/><text x="36.4341%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (129 samples, 2.40%)</title><rect x="33.9296%" y="308" width="2.4036%" height="15" fill="rgb(242,16,51)" fg:x="1821" fg:w="129"/><text x="34.1796%" y="318.50">__..</text></g><g><title>_set_axis (pandas/core/series.py:306) (11 samples, 0.20%)</title><rect x="36.5008%" y="324" width="0.2050%" height="15" fill="rgb(248,9,4)" fg:x="1959" fg:w="11"/><text x="36.7508%" y="334.50"></text></g><g><title>_set_axis (pandas/core/series.py:320) (13 samples, 0.24%)</title><rect x="36.7058%" y="324" width="0.2422%" height="15" fill="rgb(210,31,22)" fg:x="1970" fg:w="13"/><text x="36.9558%" y="334.50"></text></g><g><title>_set_subtyp (pandas/core/series.py:330) (8 samples, 0.15%)</title><rect x="36.7990%" y="340" width="0.1491%" height="15" fill="rgb(239,54,39)" fg:x="1975" fg:w="8"/><text x="37.0490%" y="350.50"></text></g><g><title>iterrows (pandas/core/frame.py:748) (1,497 samples, 27.89%)</title><rect x="9.2417%" y="292" width="27.8927%" height="15" fill="rgb(230,99,41)" fg:x="496" fg:w="1497"/><text x="9.4917%" y="302.50">iterrows (pandas/core/frame.py:748)</text></g><g><title>__init__ (pandas/core/series.py:271) (43 samples, 0.80%)</title><rect x="36.3331%" y="308" width="0.8012%" height="15" fill="rgb(253,106,12)" fg:x="1950" fg:w="43"/><text x="36.5831%" y="318.50"></text></g><g><title>_set_axis (pandas/core/series.py:322) (10 samples, 0.19%)</title><rect x="36.9480%" y="324" width="0.1863%" height="15" fill="rgb(213,46,41)" fg:x="1983" fg:w="10"/><text x="37.1980%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:146) (1,533 samples, 28.56%)</title><rect x="8.6641%" y="276" width="28.5634%" height="15" fill="rgb(215,133,35)" fg:x="465" fg:w="1533"/><text x="8.9141%" y="286.50">parse_csv_kline_d1 (extension.py:146)</text></g><g><title>__getitem__ (pandas/core/series.py:621) (16 samples, 0.30%)</title><rect x="37.8424%" y="292" width="0.2981%" height="15" fill="rgb(213,28,5)" fg:x="2031" fg:w="16"/><text x="38.0924%" y="302.50"></text></g><g><title>_block (pandas/core/internals.py:4411) (7 samples, 0.13%)</title><rect x="39.0721%" y="356" width="0.1304%" height="15" fill="rgb(215,77,49)" fg:x="2097" fg:w="7"/><text x="39.3221%" y="366.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2545) (40 samples, 0.75%)</title><rect x="38.5504%" y="308" width="0.7453%" height="15" fill="rgb(248,100,22)" fg:x="2069" fg:w="40"/><text x="38.8004%" y="318.50"></text></g><g><title>_values (pandas/core/series.py:403) (27 samples, 0.50%)</title><rect x="38.7926%" y="324" width="0.5031%" height="15" fill="rgb(208,67,9)" fg:x="2082" fg:w="27"/><text x="39.0426%" y="334.50"></text></g><g><title>internal_values (pandas/core/internals.py:4507) (23 samples, 0.43%)</title><rect x="38.8672%" y="340" width="0.4285%" height="15" fill="rgb(219,133,21)" fg:x="2086" fg:w="23"/><text x="39.1172%" y="350.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2546) (7 samples, 0.13%)</title><rect x="39.2957%" y="308" width="0.1304%" height="15" fill="rgb(246,46,29)" fg:x="2109" fg:w="7"/><text x="39.5457%" y="318.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2554) (64 samples, 1.19%)</title><rect x="39.4261%" y="308" width="1.1925%" height="15" fill="rgb(246,185,52)" fg:x="2116" fg:w="64"/><text x="39.6761%" y="318.50"></text></g><g><title>get_values (pandas/core/series.py:413) (49 samples, 0.91%)</title><rect x="39.7056%" y="324" width="0.9130%" height="15" fill="rgb(252,136,11)" fg:x="2131" fg:w="49"/><text x="39.9556%" y="334.50"></text></g><g><title>get_values (pandas/core/internals.py:4515) (46 samples, 0.86%)</title><rect x="39.7615%" y="340" width="0.8571%" height="15" fill="rgb(219,138,53)" fg:x="2134" fg:w="46"/><text x="40.0115%" y="350.50"></text></g><g><title>to_dense (pandas/core/internals.py:179) (28 samples, 0.52%)</title><rect x="40.0969%" y="356" width="0.5217%" height="15" fill="rgb(211,51,23)" fg:x="2152" fg:w="28"/><text x="40.3469%" y="366.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2555) (17 samples, 0.32%)</title><rect x="40.6186%" y="308" width="0.3168%" height="15" fill="rgb(247,221,28)" fg:x="2180" fg:w="17"/><text x="40.8686%" y="318.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:166) (11 samples, 0.20%)</title><rect x="41.1403%" y="324" width="0.2050%" height="15" fill="rgb(251,222,45)" fg:x="2208" fg:w="11"/><text x="41.3903%" y="334.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:3473) (7 samples, 0.13%)</title><rect x="41.2148%" y="340" width="0.1304%" height="15" fill="rgb(217,162,53)" fg:x="2212" fg:w="7"/><text x="41.4648%" y="350.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:167) (12 samples, 0.22%)</title><rect x="41.3453%" y="324" width="0.2236%" height="15" fill="rgb(229,93,14)" fg:x="2219" fg:w="12"/><text x="41.5953%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/base.py:1367) (30 samples, 0.56%)</title><rect x="41.6993%" y="340" width="0.5590%" height="15" fill="rgb(209,67,49)" fg:x="2238" fg:w="30"/><text x="41.9493%" y="350.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (10 samples, 0.19%)</title><rect x="42.0719%" y="356" width="0.1863%" height="15" fill="rgb(213,87,29)" fg:x="2258" fg:w="10"/><text x="42.3219%" y="366.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2557) (78 samples, 1.45%)</title><rect x="40.9353%" y="308" width="1.4533%" height="15" fill="rgb(205,151,52)" fg:x="2197" fg:w="78"/><text x="41.1853%" y="318.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:168) (44 samples, 0.82%)</title><rect x="41.5688%" y="324" width="0.8198%" height="15" fill="rgb(253,215,39)" fg:x="2231" fg:w="44"/><text x="41.8188%" y="334.50"></text></g><g><title>get_value (pandas/core/indexes/base.py:2559) (7 samples, 0.13%)</title><rect x="42.3887%" y="308" width="0.1304%" height="15" fill="rgb(221,220,41)" fg:x="2275" fg:w="7"/><text x="42.6387%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/series.py:623) (334 samples, 6.22%)</title><rect x="38.1405%" y="292" width="6.2232%" height="15" fill="rgb(218,133,21)" fg:x="2047" fg:w="334"/><text x="38.3905%" y="302.50">__getite..</text></g><g><title>get_value (pandas/core/indexes/base.py:2560) (99 samples, 1.84%)</title><rect x="42.5191%" y="308" width="1.8446%" height="15" fill="rgb(221,193,43)" fg:x="2282" fg:w="99"/><text x="42.7691%" y="318.50">g..</text></g><g><title>dtype (pandas/core/series.py:350) (25 samples, 0.47%)</title><rect x="43.8979%" y="324" width="0.4658%" height="15" fill="rgb(240,128,52)" fg:x="2356" fg:w="25"/><text x="44.1479%" y="334.50"></text></g><g><title>dtype (pandas/core/internals.py:4481) (16 samples, 0.30%)</title><rect x="44.0656%" y="340" width="0.2981%" height="15" fill="rgb(253,114,12)" fg:x="2365" fg:w="16"/><text x="44.3156%" y="350.50"></text></g><g><title>dtype (pandas/core/internals.py:309) (6 samples, 0.11%)</title><rect x="44.2519%" y="356" width="0.1118%" height="15" fill="rgb(215,223,47)" fg:x="2375" fg:w="6"/><text x="44.5019%" y="366.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:147) (388 samples, 7.23%)</title><rect x="37.2275%" y="276" width="7.2294%" height="15" fill="rgb(248,225,23)" fg:x="1998" fg:w="388"/><text x="37.4775%" y="286.50">parse_csv_..</text></g><g><title>parse_csv_kline_d1 (extension.py:150) (7 samples, 0.13%)</title><rect x="44.4755%" y="276" width="0.1304%" height="15" fill="rgb(250,108,0)" fg:x="2387" fg:w="7"/><text x="44.7255%" y="286.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:153) (6 samples, 0.11%)</title><rect x="44.7364%" y="276" width="0.1118%" height="15" fill="rgb(228,208,7)" fg:x="2401" fg:w="6"/><text x="44.9864%" y="286.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:154) (77 samples, 1.43%)</title><rect x="44.8481%" y="276" width="1.4347%" height="15" fill="rgb(244,45,10)" fg:x="2407" fg:w="77"/><text x="45.0981%" y="286.50"></text></g><g><title>convert (pandas/core/frame.py:6425) (15 samples, 0.28%)</title><rect x="46.4505%" y="372" width="0.2795%" height="15" fill="rgb(207,125,25)" fg:x="2493" fg:w="15"/><text x="46.7005%" y="382.50"></text></g><g><title>__init__ (pandas/core/frame.py:369) (23 samples, 0.43%)</title><rect x="46.3387%" y="292" width="0.4285%" height="15" fill="rgb(210,195,18)" fg:x="2487" fg:w="23"/><text x="46.5887%" y="302.50"></text></g><g><title>_to_arrays (pandas/core/frame.py:6284) (23 samples, 0.43%)</title><rect x="46.3387%" y="308" width="0.4285%" height="15" fill="rgb(249,80,12)" fg:x="2487" fg:w="23"/><text x="46.5887%" y="318.50"></text></g><g><title>_list_to_arrays (pandas/core/frame.py:6363) (17 samples, 0.32%)</title><rect x="46.4505%" y="324" width="0.3168%" height="15" fill="rgb(221,65,9)" fg:x="2493" fg:w="17"/><text x="46.7005%" y="334.50"></text></g><g><title>_convert_object_array (pandas/core/frame.py:6429) (17 samples, 0.32%)</title><rect x="46.4505%" y="340" width="0.3168%" height="15" fill="rgb(235,49,36)" fg:x="2493" fg:w="17"/><text x="46.7005%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/frame.py:6429) (17 samples, 0.32%)</title><rect x="46.4505%" y="356" width="0.3168%" height="15" fill="rgb(225,32,20)" fg:x="2493" fg:w="17"/><text x="46.7005%" y="366.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (12 samples, 0.22%)</title><rect x="46.9536%" y="324" width="0.2236%" height="15" fill="rgb(215,141,46)" fg:x="2520" fg:w="12"/><text x="47.2036%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:157) (58 samples, 1.08%)</title><rect x="46.2828%" y="276" width="1.0807%" height="15" fill="rgb(250,160,47)" fg:x="2484" fg:w="58"/><text x="46.5328%" y="286.50"></text></g><g><title>__init__ (pandas/core/frame.py:382) (27 samples, 0.50%)</title><rect x="46.8604%" y="292" width="0.5031%" height="15" fill="rgb(216,222,40)" fg:x="2515" fg:w="27"/><text x="47.1104%" y="302.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (22 samples, 0.41%)</title><rect x="46.9536%" y="308" width="0.4099%" height="15" fill="rgb(234,217,39)" fg:x="2520" fg:w="22"/><text x="47.2036%" y="318.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4638) (10 samples, 0.19%)</title><rect x="47.1772%" y="324" width="0.1863%" height="15" fill="rgb(207,178,40)" fg:x="2532" fg:w="10"/><text x="47.4272%" y="334.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (9 samples, 0.17%)</title><rect x="47.4939%" y="308" width="0.1677%" height="15" fill="rgb(221,136,13)" fg:x="2549" fg:w="9"/><text x="47.7439%" y="318.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (9 samples, 0.17%)</title><rect x="47.4939%" y="324" width="0.1677%" height="15" fill="rgb(249,199,10)" fg:x="2549" fg:w="9"/><text x="47.7439%" y="334.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (14 samples, 0.26%)</title><rect x="47.4194%" y="292" width="0.2609%" height="15" fill="rgb(249,222,13)" fg:x="2545" fg:w="14"/><text x="47.6694%" y="302.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:294) (6 samples, 0.11%)</title><rect x="47.7362%" y="308" width="0.1118%" height="15" fill="rgb(244,185,38)" fg:x="2562" fg:w="6"/><text x="47.9862%" y="318.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:373) (10 samples, 0.19%)</title><rect x="47.6803%" y="292" width="0.1863%" height="15" fill="rgb(236,202,9)" fg:x="2559" fg:w="10"/><text x="47.9303%" y="302.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:158) (31 samples, 0.58%)</title><rect x="47.3635%" y="276" width="0.5776%" height="15" fill="rgb(250,229,37)" fg:x="2542" fg:w="31"/><text x="47.6135%" y="286.50"></text></g><g><title>set_index (pandas/core/frame.py:3146) (8 samples, 0.15%)</title><rect x="47.9411%" y="292" width="0.1491%" height="15" fill="rgb(206,174,23)" fg:x="2573" fg:w="8"/><text x="48.1911%" y="302.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (8 samples, 0.15%)</title><rect x="47.9411%" y="308" width="0.1491%" height="15" fill="rgb(211,33,43)" fg:x="2573" fg:w="8"/><text x="48.1911%" y="318.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (8 samples, 0.15%)</title><rect x="47.9411%" y="324" width="0.1491%" height="15" fill="rgb(245,58,50)" fg:x="2573" fg:w="8"/><text x="48.1911%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:159) (20 samples, 0.37%)</title><rect x="47.9411%" y="276" width="0.3726%" height="15" fill="rgb(244,68,36)" fg:x="2573" fg:w="20"/><text x="48.1911%" y="286.50"></text></g><g><title>set_index (pandas/core/frame.py:3159) (9 samples, 0.17%)</title><rect x="48.1461%" y="292" width="0.1677%" height="15" fill="rgb(232,229,15)" fg:x="2584" fg:w="9"/><text x="48.3961%" y="302.50"></text></g><g><title>__delitem__ (pandas/core/generic.py:2096) (9 samples, 0.17%)</title><rect x="48.1461%" y="308" width="0.1677%" height="15" fill="rgb(254,30,23)" fg:x="2584" fg:w="9"/><text x="48.3961%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:163) (186 samples, 3.47%)</title><rect x="48.3138%" y="276" width="3.4656%" height="15" fill="rgb(235,160,14)" fg:x="2593" fg:w="186"/><text x="48.5638%" y="286.50">par..</text></g><g><title>&lt;listcomp&gt; (extension.py:163) (186 samples, 3.47%)</title><rect x="48.3138%" y="292" width="3.4656%" height="15" fill="rgb(212,155,44)" fg:x="2593" fg:w="186"/><text x="48.5638%" y="302.50">&lt;li..</text></g><g><title>_box_values (pandas/core/indexes/datetimelike.py:244) (63 samples, 1.17%)</title><rect x="52.5992%" y="324" width="1.1738%" height="15" fill="rgb(226,2,50)" fg:x="2823" fg:w="63"/><text x="52.8492%" y="334.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/indexes/datetimes.py:554) (57 samples, 1.06%)</title><rect x="52.7110%" y="340" width="1.0620%" height="15" fill="rgb(234,177,6)" fg:x="2829" fg:w="57"/><text x="52.9610%" y="350.50"></text></g><g><title>tolist (pandas/core/indexes/datetimelike.py:470) (77 samples, 1.43%)</title><rect x="52.3570%" y="292" width="1.4347%" height="15" fill="rgb(217,24,9)" fg:x="2810" fg:w="77"/><text x="52.6070%" y="302.50"></text></g><g><title>asobject (pandas/core/indexes/datetimelike.py:432) (74 samples, 1.38%)</title><rect x="52.4129%" y="308" width="1.3788%" height="15" fill="rgb(220,13,46)" fg:x="2813" fg:w="74"/><text x="52.6629%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:164) (110 samples, 2.05%)</title><rect x="51.7794%" y="276" width="2.0496%" height="15" fill="rgb(239,221,27)" fg:x="2779" fg:w="110"/><text x="52.0294%" y="286.50">p..</text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1425) (7 samples, 0.13%)</title><rect x="54.0898%" y="340" width="0.1304%" height="15" fill="rgb(222,198,25)" fg:x="2903" fg:w="7"/><text x="54.3398%" y="350.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (28 samples, 0.52%)</title><rect x="54.2389%" y="356" width="0.5217%" height="15" fill="rgb(211,99,13)" fg:x="2911" fg:w="28"/><text x="54.4889%" y="366.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1205) (44 samples, 0.82%)</title><rect x="54.0712%" y="324" width="0.8198%" height="15" fill="rgb(232,111,31)" fg:x="2902" fg:w="44"/><text x="54.3212%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1426) (36 samples, 0.67%)</title><rect x="54.2202%" y="340" width="0.6708%" height="15" fill="rgb(245,82,37)" fg:x="2910" fg:w="36"/><text x="54.4702%" y="350.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1275) (8 samples, 0.15%)</title><rect x="55.0773%" y="324" width="0.1491%" height="15" fill="rgb(227,149,46)" fg:x="2956" fg:w="8"/><text x="55.3273%" y="334.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1426) (6 samples, 0.11%)</title><rect x="55.1146%" y="340" width="0.1118%" height="15" fill="rgb(218,36,50)" fg:x="2958" fg:w="6"/><text x="55.3646%" y="350.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:193) (76 samples, 1.42%)</title><rect x="53.8849%" y="292" width="1.4161%" height="15" fill="rgb(226,80,48)" fg:x="2892" fg:w="76"/><text x="54.1349%" y="302.50"></text></g><g><title>_get_setitem_indexer (pandas/core/indexing.py:179) (74 samples, 1.38%)</title><rect x="53.9221%" y="308" width="1.3788%" height="15" fill="rgb(238,224,15)" fg:x="2894" fg:w="74"/><text x="54.1721%" y="318.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:302) (18 samples, 0.34%)</title><rect x="55.4313%" y="308" width="0.3354%" height="15" fill="rgb(241,136,10)" fg:x="2975" fg:w="18"/><text x="55.6813%" y="318.50"></text></g><g><title>_is_mixed_type (pandas/core/generic.py:3713) (16 samples, 0.30%)</title><rect x="55.4686%" y="324" width="0.2981%" height="15" fill="rgb(208,32,45)" fg:x="2977" fg:w="16"/><text x="55.7186%" y="334.50"></text></g><g><title>_protect_consolidate (pandas/core/generic.py:3666) (15 samples, 0.28%)</title><rect x="55.4872%" y="340" width="0.2795%" height="15" fill="rgb(207,135,9)" fg:x="2978" fg:w="15"/><text x="55.7372%" y="350.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/generic.py:3712) (14 samples, 0.26%)</title><rect x="55.5059%" y="356" width="0.2609%" height="15" fill="rgb(206,86,44)" fg:x="2979" fg:w="14"/><text x="55.7559%" y="366.50"></text></g><g><title>is_mixed_type (pandas/core/internals.py:3540) (13 samples, 0.24%)</title><rect x="55.5245%" y="372" width="0.2422%" height="15" fill="rgb(245,177,15)" fg:x="2980" fg:w="13"/><text x="55.7745%" y="382.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals.py:3831) (9 samples, 0.17%)</title><rect x="55.5990%" y="388" width="0.1677%" height="15" fill="rgb(206,64,50)" fg:x="2984" fg:w="9"/><text x="55.8490%" y="398.50"></text></g><g><title>_consolidate (pandas/core/internals.py:4853) (8 samples, 0.15%)</title><rect x="55.6177%" y="404" width="0.1491%" height="15" fill="rgb(234,36,40)" fg:x="2985" fg:w="8"/><text x="55.8677%" y="414.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1044) (12 samples, 0.22%)</title><rect x="55.9903%" y="372" width="0.2236%" height="15" fill="rgb(213,64,8)" fg:x="3005" fg:w="12"/><text x="56.2403%" y="382.50"></text></g><g><title>_try_cast (pandas/core/series.py:3161) (17 samples, 0.32%)</title><rect x="55.9717%" y="356" width="0.3168%" height="15" fill="rgb(210,75,36)" fg:x="3004" fg:w="17"/><text x="56.2217%" y="366.50"></text></g><g><title>_try_cast (pandas/core/series.py:3162) (12 samples, 0.22%)</title><rect x="56.2884%" y="356" width="0.2236%" height="15" fill="rgb(229,88,21)" fg:x="3021" fg:w="12"/><text x="56.5384%" y="366.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3228) (32 samples, 0.60%)</title><rect x="55.9717%" y="340" width="0.5962%" height="15" fill="rgb(252,204,47)" fg:x="3004" fg:w="32"/><text x="56.2217%" y="350.50"></text></g><g><title>create_from_value (pandas/core/series.py:3233) (6 samples, 0.11%)</title><rect x="56.6052%" y="356" width="0.1118%" height="15" fill="rgb(208,77,27)" fg:x="3038" fg:w="6"/><text x="56.8552%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (46 samples, 0.86%)</title><rect x="55.9344%" y="324" width="0.8571%" height="15" fill="rgb(221,76,26)" fg:x="3002" fg:w="46"/><text x="56.1844%" y="334.50"></text></g><g><title>_sanitize_array (pandas/core/series.py:3259) (10 samples, 0.19%)</title><rect x="56.6052%" y="340" width="0.1863%" height="15" fill="rgb(225,139,18)" fg:x="3038" fg:w="10"/><text x="56.8552%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (11 samples, 0.20%)</title><rect x="56.7915%" y="324" width="0.2050%" height="15" fill="rgb(230,137,11)" fg:x="3048" fg:w="11"/><text x="57.0415%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (8 samples, 0.15%)</title><rect x="57.0710%" y="324" width="0.1491%" height="15" fill="rgb(212,28,1)" fg:x="3063" fg:w="8"/><text x="57.3210%" y="334.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:443) (79 samples, 1.47%)</title><rect x="55.8971%" y="308" width="1.4720%" height="15" fill="rgb(248,164,17)" fg:x="3000" fg:w="79"/><text x="56.1471%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:271) (8 samples, 0.15%)</title><rect x="57.2200%" y="324" width="0.1491%" height="15" fill="rgb(222,171,42)" fg:x="3071" fg:w="8"/><text x="57.4700%" y="334.50"></text></g><g><title>_set_axis (pandas/core/series.py:306) (8 samples, 0.15%)</title><rect x="57.2200%" y="340" width="0.1491%" height="15" fill="rgb(243,84,45)" fg:x="3071" fg:w="8"/><text x="57.4700%" y="350.50"></text></g><g><title>is_all_dates (pandas/core/indexes/base.py:1639) (8 samples, 0.15%)</title><rect x="57.2200%" y="356" width="0.1491%" height="15" fill="rgb(252,49,23)" fg:x="3071" fg:w="8"/><text x="57.4700%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:298) (6 samples, 0.11%)</title><rect x="58.0958%" y="356" width="0.1118%" height="15" fill="rgb(215,19,7)" fg:x="3118" fg:w="6"/><text x="58.3458%" y="366.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (17 samples, 0.32%)</title><rect x="58.2076%" y="356" width="0.3168%" height="15" fill="rgb(238,81,41)" fg:x="3124" fg:w="17"/><text x="58.4576%" y="366.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:294) (15 samples, 0.28%)</title><rect x="59.0274%" y="420" width="0.2795%" height="15" fill="rgb(210,199,37)" fg:x="3168" fg:w="15"/><text x="59.2774%" y="430.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:303) (9 samples, 0.17%)</title><rect x="59.3069%" y="420" width="0.1677%" height="15" fill="rgb(244,192,49)" fg:x="3183" fg:w="9"/><text x="59.5569%" y="430.50"></text></g><g><title>_convert_listlike (pandas/core/tools/datetimes.py:304) (14 samples, 0.26%)</title><rect x="59.4746%" y="420" width="0.2609%" height="15" fill="rgb(226,211,11)" fg:x="3192" fg:w="14"/><text x="59.7246%" y="430.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:342) (51 samples, 0.95%)</title><rect x="58.8224%" y="388" width="0.9503%" height="15" fill="rgb(236,162,54)" fg:x="3157" fg:w="51"/><text x="59.0724%" y="398.50"></text></g><g><title>to_datetime (pandas/core/tools/datetimes.py:380) (44 samples, 0.82%)</title><rect x="58.9529%" y="404" width="0.8198%" height="15" fill="rgb(220,229,9)" fg:x="3164" fg:w="44"/><text x="59.2029%" y="414.50"></text></g><g><title>append (pandas/core/frame.py:5172) (138 samples, 2.57%)</title><rect x="57.4809%" y="324" width="2.5713%" height="15" fill="rgb(250,87,22)" fg:x="3085" fg:w="138"/><text x="57.7309%" y="334.50">ap..</text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (122 samples, 2.27%)</title><rect x="57.7790%" y="340" width="2.2732%" height="15" fill="rgb(239,43,17)" fg:x="3101" fg:w="122"/><text x="58.0290%" y="350.50">_..</text></g><g><title>__new__ (pandas/core/indexes/base.py:335) (80 samples, 1.49%)</title><rect x="58.5616%" y="356" width="1.4906%" height="15" fill="rgb(231,177,25)" fg:x="3143" fg:w="80"/><text x="58.8116%" y="366.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:118) (79 samples, 1.47%)</title><rect x="58.5802%" y="372" width="1.4720%" height="15" fill="rgb(219,179,1)" fg:x="3144" fg:w="79"/><text x="58.8302%" y="382.50"></text></g><g><title>__new__ (pandas/core/indexes/datetimes.py:391) (6 samples, 0.11%)</title><rect x="59.9404%" y="388" width="0.1118%" height="15" fill="rgb(238,219,53)" fg:x="3217" fg:w="6"/><text x="60.1904%" y="398.50"></text></g><g><title>append (pandas/core/frame.py:5174) (6 samples, 0.11%)</title><rect x="60.0522%" y="324" width="0.1118%" height="15" fill="rgb(232,167,36)" fg:x="3223" fg:w="6"/><text x="60.3022%" y="334.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (7 samples, 0.13%)</title><rect x="60.7975%" y="372" width="0.1304%" height="15" fill="rgb(244,19,51)" fg:x="3263" fg:w="7"/><text x="61.0475%" y="382.50"></text></g><g><title>difference (pandas/core/indexes/base.py:2360) (38 samples, 0.71%)</title><rect x="60.2385%" y="340" width="0.7080%" height="15" fill="rgb(224,6,22)" fg:x="3233" fg:w="38"/><text x="60.4885%" y="350.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:375) (21 samples, 0.39%)</title><rect x="60.5552%" y="356" width="0.3913%" height="15" fill="rgb(224,145,5)" fg:x="3250" fg:w="21"/><text x="60.8052%" y="366.50"></text></g><g><title>append (pandas/core/frame.py:5175) (51 samples, 0.95%)</title><rect x="60.1640%" y="324" width="0.9503%" height="15" fill="rgb(234,130,49)" fg:x="3229" fg:w="51"/><text x="60.4140%" y="334.50"></text></g><g><title>reindex (pandas/core/generic.py:3009) (8 samples, 0.15%)</title><rect x="61.3192%" y="356" width="0.1491%" height="15" fill="rgb(254,6,2)" fg:x="3291" fg:w="8"/><text x="61.5692%" y="366.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/generic.py:3009) (7 samples, 0.13%)</title><rect x="61.3378%" y="372" width="0.1304%" height="15" fill="rgb(208,96,46)" fg:x="3292" fg:w="7"/><text x="61.5878%" y="382.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (9 samples, 0.17%)</title><rect x="61.5614%" y="404" width="0.1677%" height="15" fill="rgb(239,3,39)" fg:x="3304" fg:w="9"/><text x="61.8114%" y="414.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (11 samples, 0.20%)</title><rect x="61.9713%" y="420" width="0.2050%" height="15" fill="rgb(233,210,1)" fg:x="3326" fg:w="11"/><text x="62.2213%" y="430.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2975) (38 samples, 0.71%)</title><rect x="61.5614%" y="388" width="0.7080%" height="15" fill="rgb(244,137,37)" fg:x="3304" fg:w="38"/><text x="61.8114%" y="398.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (28 samples, 0.52%)</title><rect x="61.7477%" y="404" width="0.5217%" height="15" fill="rgb(240,136,2)" fg:x="3314" fg:w="28"/><text x="61.9977%" y="414.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:114) (9 samples, 0.17%)</title><rect x="62.2881%" y="420" width="0.1677%" height="15" fill="rgb(239,18,37)" fg:x="3343" fg:w="9"/><text x="62.5381%" y="430.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2031) (10 samples, 0.19%)</title><rect x="62.2881%" y="404" width="0.1863%" height="15" fill="rgb(218,185,22)" fg:x="3343" fg:w="10"/><text x="62.5381%" y="414.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:544) (6 samples, 0.11%)</title><rect x="62.5675%" y="436" width="0.1118%" height="15" fill="rgb(225,218,4)" fg:x="3358" fg:w="6"/><text x="62.8175%" y="446.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (8 samples, 0.15%)</title><rect x="62.5675%" y="420" width="0.1491%" height="15" fill="rgb(230,182,32)" fg:x="3358" fg:w="8"/><text x="62.8175%" y="430.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2983) (28 samples, 0.52%)</title><rect x="62.2694%" y="388" width="0.5217%" height="15" fill="rgb(242,56,43)" fg:x="3342" fg:w="28"/><text x="62.5194%" y="398.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (16 samples, 0.30%)</title><rect x="62.4930%" y="404" width="0.2981%" height="15" fill="rgb(233,99,24)" fg:x="3354" fg:w="16"/><text x="62.7430%" y="414.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:3036) (73 samples, 1.36%)</title><rect x="61.5055%" y="372" width="1.3602%" height="15" fill="rgb(234,209,42)" fg:x="3301" fg:w="73"/><text x="61.7555%" y="382.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (8 samples, 0.15%)</title><rect x="63.1451%" y="436" width="0.1491%" height="15" fill="rgb(227,7,12)" fg:x="3389" fg:w="8"/><text x="63.3951%" y="446.50"></text></g><g><title>copy (pandas/core/internals.py:737) (6 samples, 0.11%)</title><rect x="63.1824%" y="452" width="0.1118%" height="15" fill="rgb(245,203,43)" fg:x="3391" fg:w="6"/><text x="63.4324%" y="462.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3145) (17 samples, 0.32%)</title><rect x="63.0147%" y="388" width="0.3168%" height="15" fill="rgb(238,205,33)" fg:x="3382" fg:w="17"/><text x="63.2647%" y="398.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4130) (15 samples, 0.28%)</title><rect x="63.0520%" y="404" width="0.2795%" height="15" fill="rgb(231,56,7)" fg:x="3384" fg:w="15"/><text x="63.3020%" y="414.50"></text></g><g><title>copy (pandas/core/internals.py:3664) (15 samples, 0.28%)</title><rect x="63.0520%" y="420" width="0.2795%" height="15" fill="rgb(244,186,29)" fg:x="3384" fg:w="15"/><text x="63.3020%" y="430.50"></text></g><g><title>__init__ (pandas/core/series.py:270) (6 samples, 0.11%)</title><rect x="63.4246%" y="404" width="0.1118%" height="15" fill="rgb(234,111,31)" fg:x="3404" fg:w="6"/><text x="63.6746%" y="414.50"></text></g><g><title>_set_axis (pandas/core/series.py:306) (11 samples, 0.20%)</title><rect x="63.5364%" y="420" width="0.2050%" height="15" fill="rgb(241,149,10)" fg:x="3410" fg:w="11"/><text x="63.7864%" y="430.50"></text></g><g><title>is_all_dates (pandas/core/indexes/base.py:1639) (9 samples, 0.17%)</title><rect x="63.5737%" y="436" width="0.1677%" height="15" fill="rgb(249,206,44)" fg:x="3412" fg:w="9"/><text x="63.8237%" y="446.50"></text></g><g><title>append (pandas/core/frame.py:5176) (144 samples, 2.68%)</title><rect x="61.1142%" y="324" width="2.6831%" height="15" fill="rgb(251,153,30)" fg:x="3280" fg:w="144"/><text x="61.3642%" y="334.50">ap..</text></g><g><title>reindex (pandas/core/series.py:2681) (141 samples, 2.63%)</title><rect x="61.1701%" y="340" width="2.6272%" height="15" fill="rgb(239,152,38)" fg:x="3283" fg:w="141"/><text x="61.4201%" y="350.50">re..</text></g><g><title>reindex (pandas/core/generic.py:3023) (125 samples, 2.33%)</title><rect x="61.4682%" y="356" width="2.3290%" height="15" fill="rgb(249,139,47)" fg:x="3299" fg:w="125"/><text x="61.7182%" y="366.50">r..</text></g><g><title>_reindex_axes (pandas/core/generic.py:3041) (49 samples, 0.91%)</title><rect x="62.8843%" y="372" width="0.9130%" height="15" fill="rgb(244,64,35)" fg:x="3375" fg:w="49"/><text x="63.1343%" y="382.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3150) (25 samples, 0.47%)</title><rect x="63.3315%" y="388" width="0.4658%" height="15" fill="rgb(216,46,15)" fg:x="3399" fg:w="25"/><text x="63.5815%" y="398.50"></text></g><g><title>__init__ (pandas/core/series.py:271) (14 samples, 0.26%)</title><rect x="63.5364%" y="404" width="0.2609%" height="15" fill="rgb(250,74,19)" fg:x="3410" fg:w="14"/><text x="63.7864%" y="414.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (16 samples, 0.30%)</title><rect x="64.1513%" y="388" width="0.2981%" height="15" fill="rgb(249,42,33)" fg:x="3443" fg:w="16"/><text x="64.4013%" y="398.50"></text></g><g><title>_init_ndarray (pandas/core/frame.py:524) (47 samples, 0.88%)</title><rect x="64.0581%" y="356" width="0.8757%" height="15" fill="rgb(242,149,17)" fg:x="3438" fg:w="47"/><text x="64.3081%" y="366.50"></text></g><g><title>_get_axes (pandas/core/frame.py:491) (43 samples, 0.80%)</title><rect x="64.1327%" y="372" width="0.8012%" height="15" fill="rgb(244,29,21)" fg:x="3442" fg:w="43"/><text x="64.3827%" y="382.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (26 samples, 0.48%)</title><rect x="64.4494%" y="388" width="0.4844%" height="15" fill="rgb(220,130,37)" fg:x="3459" fg:w="26"/><text x="64.6994%" y="398.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:349) (6 samples, 0.11%)</title><rect x="64.8221%" y="404" width="0.1118%" height="15" fill="rgb(211,67,2)" fg:x="3479" fg:w="6"/><text x="65.0721%" y="414.50"></text></g><g><title>_verify_integrity (pandas/core/internals.py:3240) (6 samples, 0.11%)</title><rect x="65.1947%" y="404" width="0.1118%" height="15" fill="rgb(235,68,52)" fg:x="3499" fg:w="6"/><text x="65.4447%" y="414.50"></text></g><g><title>shape (pandas/core/internals.py:3060) (6 samples, 0.11%)</title><rect x="65.1947%" y="420" width="0.1118%" height="15" fill="rgb(246,142,3)" fg:x="3499" fg:w="6"/><text x="65.4447%" y="430.50"></text></g><g><title>__init__ (pandas/core/internals.py:3033) (12 samples, 0.22%)</title><rect x="65.1947%" y="388" width="0.2236%" height="15" fill="rgb(241,25,7)" fg:x="3499" fg:w="12"/><text x="65.4447%" y="398.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (10 samples, 0.19%)</title><rect x="65.4183%" y="404" width="0.1863%" height="15" fill="rgb(242,119,39)" fg:x="3511" fg:w="10"/><text x="65.6683%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (10 samples, 0.19%)</title><rect x="65.4183%" y="420" width="0.1863%" height="15" fill="rgb(241,98,45)" fg:x="3511" fg:w="10"/><text x="65.6683%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (9 samples, 0.17%)</title><rect x="65.4369%" y="436" width="0.1677%" height="15" fill="rgb(254,28,30)" fg:x="3512" fg:w="9"/><text x="65.6869%" y="446.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (7 samples, 0.13%)</title><rect x="65.4742%" y="452" width="0.1304%" height="15" fill="rgb(241,142,54)" fg:x="3514" fg:w="7"/><text x="65.7242%" y="462.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (11 samples, 0.20%)</title><rect x="65.4183%" y="388" width="0.2050%" height="15" fill="rgb(222,85,15)" fg:x="3511" fg:w="11"/><text x="65.6683%" y="398.50"></text></g><g><title>create_block_manager_from_blocks (pandas/core/internals.py:4624) (51 samples, 0.95%)</title><rect x="65.1574%" y="372" width="0.9503%" height="15" fill="rgb(210,85,47)" fg:x="3497" fg:w="51"/><text x="65.4074%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (26 samples, 0.48%)</title><rect x="65.6233%" y="388" width="0.4844%" height="15" fill="rgb(224,206,25)" fg:x="3522" fg:w="26"/><text x="65.8733%" y="398.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3128) (13 samples, 0.24%)</title><rect x="65.8655%" y="404" width="0.2422%" height="15" fill="rgb(243,201,19)" fg:x="3535" fg:w="13"/><text x="66.1155%" y="414.50"></text></g><g><title>_any (numpy/core/_methods.py:54) (7 samples, 0.13%)</title><rect x="65.9773%" y="420" width="0.1304%" height="15" fill="rgb(236,59,4)" fg:x="3541" fg:w="7"/><text x="66.2273%" y="430.50"></text></g><g><title>__init__ (pandas/core/frame.py:361) (119 samples, 2.22%)</title><rect x="63.9277%" y="340" width="2.2173%" height="15" fill="rgb(254,179,45)" fg:x="3431" fg:w="119"/><text x="64.1777%" y="350.50">_..</text></g><g><title>_init_ndarray (pandas/core/frame.py:533) (61 samples, 1.14%)</title><rect x="65.0084%" y="356" width="1.1366%" height="15" fill="rgb(226,14,10)" fg:x="3489" fg:w="61"/><text x="65.2584%" y="366.50"></text></g><g><title>append (pandas/core/frame.py:5179) (124 samples, 2.31%)</title><rect x="63.8718%" y="324" width="2.3104%" height="15" fill="rgb(244,27,41)" fg:x="3428" fg:w="124"/><text x="64.1218%" y="334.50">a..</text></g><g><title>apply (pandas/core/internals.py:3329) (7 samples, 0.13%)</title><rect x="66.3685%" y="372" width="0.1304%" height="15" fill="rgb(235,35,32)" fg:x="3562" fg:w="7"/><text x="66.6185%" y="382.50"></text></g><g><title>convert (pandas/core/internals.py:650) (7 samples, 0.13%)</title><rect x="66.3685%" y="388" width="0.1304%" height="15" fill="rgb(218,68,31)" fg:x="3562" fg:w="7"/><text x="66.6185%" y="398.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (7 samples, 0.13%)</title><rect x="66.6853%" y="452" width="0.1304%" height="15" fill="rgb(207,120,37)" fg:x="3579" fg:w="7"/><text x="66.9353%" y="462.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (13 samples, 0.24%)</title><rect x="66.5921%" y="388" width="0.2422%" height="15" fill="rgb(227,98,0)" fg:x="3574" fg:w="13"/><text x="66.8421%" y="398.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (13 samples, 0.24%)</title><rect x="66.5921%" y="404" width="0.2422%" height="15" fill="rgb(207,7,3)" fg:x="3574" fg:w="13"/><text x="66.8421%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (13 samples, 0.24%)</title><rect x="66.5921%" y="420" width="0.2422%" height="15" fill="rgb(206,98,19)" fg:x="3574" fg:w="13"/><text x="66.8421%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (11 samples, 0.20%)</title><rect x="66.6294%" y="436" width="0.2050%" height="15" fill="rgb(217,5,26)" fg:x="3576" fg:w="11"/><text x="66.8794%" y="446.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3118) (6 samples, 0.11%)</title><rect x="66.8344%" y="404" width="0.1118%" height="15" fill="rgb(235,190,38)" fg:x="3587" fg:w="6"/><text x="67.0844%" y="414.50"></text></g><g><title>apply (pandas/core/internals.py:3335) (34 samples, 0.63%)</title><rect x="66.5176%" y="372" width="0.6335%" height="15" fill="rgb(247,86,24)" fg:x="3570" fg:w="34"/><text x="66.7676%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (17 samples, 0.32%)</title><rect x="66.8344%" y="388" width="0.3168%" height="15" fill="rgb(205,101,16)" fg:x="3587" fg:w="17"/><text x="67.0844%" y="398.50"></text></g><g><title>append (pandas/core/frame.py:5180) (53 samples, 0.99%)</title><rect x="66.1822%" y="324" width="0.9875%" height="15" fill="rgb(246,168,33)" fg:x="3552" fg:w="53"/><text x="66.4322%" y="334.50"></text></g><g><title>_convert (pandas/core/generic.py:4066) (52 samples, 0.97%)</title><rect x="66.2009%" y="340" width="0.9689%" height="15" fill="rgb(231,114,1)" fg:x="3553" fg:w="52"/><text x="66.4509%" y="350.50"></text></g><g><title>convert (pandas/core/internals.py:3465) (47 samples, 0.88%)</title><rect x="66.2940%" y="356" width="0.8757%" height="15" fill="rgb(207,184,53)" fg:x="3558" fg:w="47"/><text x="66.5440%" y="366.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4198) (7 samples, 0.13%)</title><rect x="67.6542%" y="436" width="0.1304%" height="15" fill="rgb(224,95,51)" fg:x="3631" fg:w="7"/><text x="67.9042%" y="446.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:298) (6 samples, 0.11%)</title><rect x="68.2504%" y="452" width="0.1118%" height="15" fill="rgb(212,188,45)" fg:x="3663" fg:w="6"/><text x="68.5004%" y="462.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:306) (8 samples, 0.15%)</title><rect x="68.3622%" y="452" width="0.1491%" height="15" fill="rgb(223,154,38)" fg:x="3669" fg:w="8"/><text x="68.6122%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2975) (49 samples, 0.91%)</title><rect x="67.6356%" y="420" width="0.9130%" height="15" fill="rgb(251,22,52)" fg:x="3630" fg:w="49"/><text x="67.8856%" y="430.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4212) (41 samples, 0.76%)</title><rect x="67.7846%" y="436" width="0.7639%" height="15" fill="rgb(229,209,22)" fg:x="3638" fg:w="41"/><text x="68.0346%" y="446.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2031) (6 samples, 0.11%)</title><rect x="68.5672%" y="436" width="0.1118%" height="15" fill="rgb(234,138,34)" fg:x="3680" fg:w="6"/><text x="68.8172%" y="446.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:114) (6 samples, 0.11%)</title><rect x="68.5672%" y="452" width="0.1118%" height="15" fill="rgb(212,95,11)" fg:x="3680" fg:w="6"/><text x="68.8172%" y="462.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:294) (7 samples, 0.13%)</title><rect x="68.7535%" y="452" width="0.1304%" height="15" fill="rgb(240,179,47)" fg:x="3690" fg:w="7"/><text x="69.0035%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:2983) (22 samples, 0.41%)</title><rect x="68.5485%" y="420" width="0.4099%" height="15" fill="rgb(240,163,11)" fg:x="3679" fg:w="22"/><text x="68.7985%" y="430.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (12 samples, 0.22%)</title><rect x="68.7349%" y="436" width="0.2236%" height="15" fill="rgb(236,37,12)" fg:x="3689" fg:w="12"/><text x="68.9849%" y="446.50"></text></g><g><title>_reindex_columns (pandas/core/frame.py:2887) (74 samples, 1.38%)</title><rect x="67.5983%" y="404" width="1.3788%" height="15" fill="rgb(232,164,16)" fg:x="3628" fg:w="74"/><text x="67.8483%" y="414.50"></text></g><g><title>copy (pandas/core/internals.py:3660) (14 samples, 0.26%)</title><rect x="69.0702%" y="452" width="0.2609%" height="15" fill="rgb(244,205,15)" fg:x="3707" fg:w="14"/><text x="69.3202%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3660) (14 samples, 0.26%)</title><rect x="69.0702%" y="468" width="0.2609%" height="15" fill="rgb(223,117,47)" fg:x="3707" fg:w="14"/><text x="69.3202%" y="478.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals.py:3659) (13 samples, 0.24%)</title><rect x="69.0889%" y="484" width="0.2422%" height="15" fill="rgb(244,107,35)" fg:x="3708" fg:w="13"/><text x="69.3389%" y="494.50"></text></g><g><title>view (pandas/core/indexes/base.py:744) (13 samples, 0.24%)</title><rect x="69.0889%" y="500" width="0.2422%" height="15" fill="rgb(205,140,8)" fg:x="3708" fg:w="13"/><text x="69.3389%" y="510.50"></text></g><g><title>_shallow_copy (pandas/core/indexes/base.py:439) (11 samples, 0.20%)</title><rect x="69.1261%" y="516" width="0.2050%" height="15" fill="rgb(228,84,46)" fg:x="3710" fg:w="11"/><text x="69.3761%" y="526.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (8 samples, 0.15%)</title><rect x="69.4243%" y="468" width="0.1491%" height="15" fill="rgb(254,188,9)" fg:x="3726" fg:w="8"/><text x="69.6743%" y="478.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (11 samples, 0.20%)</title><rect x="69.6851%" y="500" width="0.2050%" height="15" fill="rgb(206,112,54)" fg:x="3740" fg:w="11"/><text x="69.9351%" y="510.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (11 samples, 0.20%)</title><rect x="69.6851%" y="516" width="0.2050%" height="15" fill="rgb(216,84,49)" fg:x="3740" fg:w="11"/><text x="69.9351%" y="526.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (10 samples, 0.19%)</title><rect x="69.7037%" y="532" width="0.1863%" height="15" fill="rgb(214,194,35)" fg:x="3741" fg:w="10"/><text x="69.9537%" y="542.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (7 samples, 0.13%)</title><rect x="69.7596%" y="548" width="0.1304%" height="15" fill="rgb(249,28,3)" fg:x="3744" fg:w="7"/><text x="70.0096%" y="558.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (13 samples, 0.24%)</title><rect x="69.6851%" y="484" width="0.2422%" height="15" fill="rgb(222,56,52)" fg:x="3740" fg:w="13"/><text x="69.9351%" y="494.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3145) (62 samples, 1.16%)</title><rect x="69.0702%" y="420" width="1.1552%" height="15" fill="rgb(245,217,50)" fg:x="3707" fg:w="62"/><text x="69.3202%" y="430.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4130) (62 samples, 1.16%)</title><rect x="69.0702%" y="436" width="1.1552%" height="15" fill="rgb(213,201,24)" fg:x="3707" fg:w="62"/><text x="69.3202%" y="446.50"></text></g><g><title>copy (pandas/core/internals.py:3664) (48 samples, 0.89%)</title><rect x="69.3311%" y="452" width="0.8944%" height="15" fill="rgb(248,116,28)" fg:x="3721" fg:w="48"/><text x="69.5811%" y="462.50"></text></g><g><title>apply (pandas/core/internals.py:3335) (35 samples, 0.65%)</title><rect x="69.5733%" y="468" width="0.6521%" height="15" fill="rgb(219,72,43)" fg:x="3734" fg:w="35"/><text x="69.8233%" y="478.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (16 samples, 0.30%)</title><rect x="69.9273%" y="484" width="0.2981%" height="15" fill="rgb(209,138,14)" fg:x="3753" fg:w="16"/><text x="70.1773%" y="494.50"></text></g><g><title>append (pandas/core/frame.py:5182) (172 samples, 3.20%)</title><rect x="67.2256%" y="324" width="3.2048%" height="15" fill="rgb(222,18,33)" fg:x="3608" fg:w="172"/><text x="67.4756%" y="334.50">app..</text></g><g><title>wrapper (pandas/util/_decorators.py:127) (171 samples, 3.19%)</title><rect x="67.2443%" y="340" width="3.1861%" height="15" fill="rgb(213,199,7)" fg:x="3609" fg:w="171"/><text x="67.4943%" y="350.50">wra..</text></g><g><title>reindex (pandas/core/frame.py:2935) (167 samples, 3.11%)</title><rect x="67.3188%" y="356" width="3.1116%" height="15" fill="rgb(250,110,10)" fg:x="3613" fg:w="167"/><text x="67.5688%" y="366.50">rei..</text></g><g><title>reindex (pandas/core/generic.py:3023) (155 samples, 2.89%)</title><rect x="67.5424%" y="372" width="2.8880%" height="15" fill="rgb(248,123,6)" fg:x="3625" fg:w="155"/><text x="67.7924%" y="382.50">re..</text></g><g><title>_reindex_axes (pandas/core/frame.py:2865) (152 samples, 2.83%)</title><rect x="67.5983%" y="388" width="2.8321%" height="15" fill="rgb(206,91,31)" fg:x="3628" fg:w="152"/><text x="67.8483%" y="398.50">_r..</text></g><g><title>_reindex_columns (pandas/core/frame.py:2890) (78 samples, 1.45%)</title><rect x="68.9771%" y="404" width="1.4533%" height="15" fill="rgb(211,154,13)" fg:x="3702" fg:w="78"/><text x="69.2271%" y="414.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:3150) (10 samples, 0.19%)</title><rect x="70.2441%" y="420" width="0.1863%" height="15" fill="rgb(225,148,7)" fg:x="3770" fg:w="10"/><text x="70.4941%" y="430.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:275) (10 samples, 0.19%)</title><rect x="70.5422%" y="356" width="0.1863%" height="15" fill="rgb(220,160,43)" fg:x="3786" fg:w="10"/><text x="70.7922%" y="366.50"></text></g><g><title>_consolidate (pandas/core/generic.py:3695) (6 samples, 0.11%)</title><rect x="70.6167%" y="372" width="0.1118%" height="15" fill="rgb(213,52,39)" fg:x="3790" fg:w="6"/><text x="70.8667%" y="382.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:292) (6 samples, 0.11%)</title><rect x="70.7472%" y="356" width="0.1118%" height="15" fill="rgb(243,137,7)" fg:x="3797" fg:w="6"/><text x="70.9972%" y="366.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/reshape/concat.py:293) (6 samples, 0.11%)</title><rect x="70.7472%" y="372" width="0.1118%" height="15" fill="rgb(230,79,13)" fg:x="3797" fg:w="6"/><text x="70.9972%" y="382.50"></text></g><g><title>_union_indexes (pandas/core/indexes/api.py:92) (15 samples, 0.28%)</title><rect x="71.2875%" y="436" width="0.2795%" height="15" fill="rgb(247,105,23)" fg:x="3826" fg:w="15"/><text x="71.5375%" y="446.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (12 samples, 0.22%)</title><rect x="71.3434%" y="452" width="0.2236%" height="15" fill="rgb(223,179,41)" fg:x="3829" fg:w="12"/><text x="71.5934%" y="462.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:299) (9 samples, 0.17%)</title><rect x="71.3993%" y="468" width="0.1677%" height="15" fill="rgb(218,9,34)" fg:x="3832" fg:w="9"/><text x="71.6493%" y="478.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:57) (23 samples, 0.43%)</title><rect x="71.1943%" y="420" width="0.4285%" height="15" fill="rgb(222,106,8)" fg:x="3821" fg:w="23"/><text x="71.4443%" y="430.50"></text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:430) (34 samples, 0.63%)</title><rect x="71.0080%" y="372" width="0.6335%" height="15" fill="rgb(211,220,0)" fg:x="3811" fg:w="34"/><text x="71.2580%" y="382.50"></text></g><g><title>_get_comb_axis (pandas/core/reshape/concat.py:450) (32 samples, 0.60%)</title><rect x="71.0453%" y="388" width="0.5962%" height="15" fill="rgb(229,52,16)" fg:x="3813" fg:w="32"/><text x="71.2953%" y="398.50"></text></g><g><title>_get_objs_combined_axis (pandas/core/indexes/api.py:42) (27 samples, 0.50%)</title><rect x="71.1384%" y="404" width="0.5031%" height="15" fill="rgb(212,155,18)" fg:x="3818" fg:w="27"/><text x="71.3884%" y="414.50"></text></g><g><title>get_dtype_kinds (pandas/core/dtypes/concat.py:40) (10 samples, 0.19%)</title><rect x="71.8278%" y="452" width="0.1863%" height="15" fill="rgb(242,21,14)" fg:x="3855" fg:w="10"/><text x="72.0778%" y="462.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:508) (10 samples, 0.19%)</title><rect x="71.8278%" y="468" width="0.1863%" height="15" fill="rgb(222,19,48)" fg:x="3855" fg:w="10"/><text x="72.0778%" y="478.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:99) (7 samples, 0.13%)</title><rect x="71.8837%" y="484" width="0.1304%" height="15" fill="rgb(232,45,27)" fg:x="3858" fg:w="7"/><text x="72.1337%" y="494.50"></text></g><g><title>construct_from_string (pandas/core/dtypes/dtypes.py:274) (7 samples, 0.13%)</title><rect x="71.8837%" y="500" width="0.1304%" height="15" fill="rgb(249,103,42)" fg:x="3858" fg:w="7"/><text x="72.1337%" y="510.50"></text></g><g><title>_concat (pandas/core/indexes/base.py:1791) (20 samples, 0.37%)</title><rect x="71.7347%" y="436" width="0.3726%" height="15" fill="rgb(246,81,33)" fg:x="3850" fg:w="20"/><text x="71.9847%" y="446.50"></text></g><g><title>_concat_datetimetz (pandas/core/dtypes/concat.py:466) (9 samples, 0.17%)</title><rect x="72.2191%" y="468" width="0.1677%" height="15" fill="rgb(252,33,42)" fg:x="3876" fg:w="9"/><text x="72.4691%" y="478.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:212) (109 samples, 2.03%)</title><rect x="70.4863%" y="340" width="2.0309%" height="15" fill="rgb(209,212,41)" fg:x="3783" fg:w="109"/><text x="70.7363%" y="350.50">c..</text></g><g><title>__init__ (pandas/core/reshape/concat.py:363) (83 samples, 1.55%)</title><rect x="70.9707%" y="356" width="1.5465%" height="15" fill="rgb(207,154,6)" fg:x="3809" fg:w="83"/><text x="71.2207%" y="366.50"></text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:443) (47 samples, 0.88%)</title><rect x="71.6415%" y="372" width="0.8757%" height="15" fill="rgb(223,64,47)" fg:x="3845" fg:w="47"/><text x="71.8915%" y="382.50"></text></g><g><title>_get_concat_axis (pandas/core/reshape/concat.py:495) (46 samples, 0.86%)</title><rect x="71.6601%" y="388" width="0.8571%" height="15" fill="rgb(211,161,38)" fg:x="3846" fg:w="46"/><text x="71.9101%" y="398.50"></text></g><g><title>_concat_indexes (pandas/core/reshape/concat.py:513) (46 samples, 0.86%)</title><rect x="71.6601%" y="404" width="0.8571%" height="15" fill="rgb(219,138,40)" fg:x="3846" fg:w="46"/><text x="71.9101%" y="414.50"></text></g><g><title>append (pandas/core/indexes/base.py:1787) (42 samples, 0.78%)</title><rect x="71.7347%" y="420" width="0.7826%" height="15" fill="rgb(241,228,46)" fg:x="3850" fg:w="42"/><text x="71.9847%" y="430.50"></text></g><g><title>_concat (pandas/core/indexes/base.py:1794) (22 samples, 0.41%)</title><rect x="72.1073%" y="436" width="0.4099%" height="15" fill="rgb(223,209,38)" fg:x="3870" fg:w="22"/><text x="72.3573%" y="446.50"></text></g><g><title>_concat_same_dtype (pandas/core/indexes/datetimelike.py:847) (17 samples, 0.32%)</title><rect x="72.2005%" y="452" width="0.3168%" height="15" fill="rgb(236,164,45)" fg:x="3875" fg:w="17"/><text x="72.4505%" y="462.50"></text></g><g><title>_concat_datetimetz (pandas/core/dtypes/concat.py:467) (7 samples, 0.13%)</title><rect x="72.3868%" y="468" width="0.1304%" height="15" fill="rgb(231,15,5)" fg:x="3885" fg:w="7"/><text x="72.6368%" y="478.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:401) (17 samples, 0.32%)</title><rect x="72.6104%" y="356" width="0.3168%" height="15" fill="rgb(252,35,15)" fg:x="3897" fg:w="17"/><text x="72.8604%" y="366.50"></text></g><g><title>equals (pandas/core/indexes/base.py:2037) (11 samples, 0.20%)</title><rect x="72.7222%" y="372" width="0.2050%" height="15" fill="rgb(248,181,18)" fg:x="3903" fg:w="11"/><text x="72.9722%" y="382.50"></text></g><g><title>get_mgr_concatenation_plan (pandas/core/internals.py:5361) (7 samples, 0.13%)</title><rect x="72.9644%" y="404" width="0.1304%" height="15" fill="rgb(233,39,42)" fg:x="3916" fg:w="7"/><text x="73.2144%" y="414.50"></text></g><g><title>shape (pandas/core/internals.py:3060) (6 samples, 0.11%)</title><rect x="72.9830%" y="420" width="0.1118%" height="15" fill="rgb(238,110,33)" fg:x="3917" fg:w="6"/><text x="73.2330%" y="430.50"></text></g><g><title>get_mgr_concatenation_plan (pandas/core/internals.py:5372) (7 samples, 0.13%)</title><rect x="73.1321%" y="404" width="0.1304%" height="15" fill="rgb(233,195,10)" fg:x="3925" fg:w="7"/><text x="73.3821%" y="414.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5184) (18 samples, 0.34%)</title><rect x="72.9458%" y="372" width="0.3354%" height="15" fill="rgb(254,105,3)" fg:x="3915" fg:w="18"/><text x="73.1958%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5184) (18 samples, 0.34%)</title><rect x="72.9458%" y="388" width="0.3354%" height="15" fill="rgb(221,225,9)" fg:x="3915" fg:w="18"/><text x="73.1958%" y="398.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5188) (9 samples, 0.17%)</title><rect x="73.2812%" y="372" width="0.1677%" height="15" fill="rgb(224,227,45)" fg:x="3933" fg:w="9"/><text x="73.5312%" y="382.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:149) (9 samples, 0.17%)</title><rect x="73.8215%" y="468" width="0.1677%" height="15" fill="rgb(229,198,43)" fg:x="3962" fg:w="9"/><text x="74.0715%" y="478.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:153) (7 samples, 0.13%)</title><rect x="73.9892%" y="468" width="0.1304%" height="15" fill="rgb(206,209,35)" fg:x="3971" fg:w="7"/><text x="74.2392%" y="478.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5198) (37 samples, 0.69%)</title><rect x="73.4489%" y="372" width="0.6894%" height="15" fill="rgb(245,195,53)" fg:x="3942" fg:w="37"/><text x="73.6989%" y="382.50"></text></g><g><title>is_uniform_join_units (pandas/core/internals.py:5221) (34 samples, 0.63%)</title><rect x="73.5048%" y="388" width="0.6335%" height="15" fill="rgb(240,92,26)" fg:x="3945" fg:w="34"/><text x="73.7548%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5221) (33 samples, 0.61%)</title><rect x="73.5234%" y="404" width="0.6149%" height="15" fill="rgb(207,40,23)" fg:x="3946" fg:w="33"/><text x="73.7734%" y="414.50"></text></g><g><title>is_na (pandas/core/internals.py:5574) (32 samples, 0.60%)</title><rect x="73.5420%" y="420" width="0.5962%" height="15" fill="rgb(223,111,35)" fg:x="3947" fg:w="32"/><text x="73.7920%" y="430.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (25 samples, 0.47%)</title><rect x="73.6724%" y="436" width="0.4658%" height="15" fill="rgb(229,147,28)" fg:x="3954" fg:w="25"/><text x="73.9224%" y="446.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:58) (20 samples, 0.37%)</title><rect x="73.7656%" y="452" width="0.3726%" height="15" fill="rgb(211,29,28)" fg:x="3959" fg:w="20"/><text x="74.0156%" y="462.50"></text></g><g><title>get_empty_dtype_and_na (pandas/core/internals.py:5274) (16 samples, 0.30%)</title><rect x="74.3805%" y="404" width="0.2981%" height="15" fill="rgb(228,72,33)" fg:x="3992" fg:w="16"/><text x="74.6305%" y="414.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5328) (40 samples, 0.75%)</title><rect x="74.1383%" y="388" width="0.7453%" height="15" fill="rgb(205,214,31)" fg:x="3979" fg:w="40"/><text x="74.3883%" y="398.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5332) (10 samples, 0.19%)</title><rect x="74.8835%" y="388" width="0.1863%" height="15" fill="rgb(224,111,15)" fg:x="4019" fg:w="10"/><text x="75.1335%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:5332) (10 samples, 0.19%)</title><rect x="74.8835%" y="404" width="0.1863%" height="15" fill="rgb(253,21,26)" fg:x="4019" fg:w="10"/><text x="75.1335%" y="414.50"></text></g><g><title>_concat_compat (pandas/core/dtypes/concat.py:136) (16 samples, 0.30%)</title><rect x="75.0699%" y="404" width="0.2981%" height="15" fill="rgb(245,139,43)" fg:x="4029" fg:w="16"/><text x="75.3199%" y="414.50"></text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5203) (77 samples, 1.43%)</title><rect x="74.1383%" y="372" width="1.4347%" height="15" fill="rgb(252,170,7)" fg:x="3979" fg:w="77"/><text x="74.3883%" y="382.50"></text></g><g><title>concatenate_join_units (pandas/core/internals.py:5340) (27 samples, 0.50%)</title><rect x="75.0699%" y="388" width="0.5031%" height="15" fill="rgb(231,118,14)" fg:x="4029" fg:w="27"/><text x="75.3199%" y="398.50"></text></g><g><title>_concat_compat (pandas/core/dtypes/concat.py:168) (10 samples, 0.19%)</title><rect x="75.3866%" y="404" width="0.1863%" height="15" fill="rgb(238,83,0)" fg:x="4046" fg:w="10"/><text x="75.6366%" y="414.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (8 samples, 0.15%)</title><rect x="75.4239%" y="420" width="0.1491%" height="15" fill="rgb(221,39,39)" fg:x="4048" fg:w="8"/><text x="75.6739%" y="430.50"></text></g><g><title>_consolidate_check (pandas/core/internals.py:3533) (11 samples, 0.20%)</title><rect x="75.7965%" y="404" width="0.2050%" height="15" fill="rgb(222,119,46)" fg:x="4068" fg:w="11"/><text x="76.0465%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:3533) (11 samples, 0.20%)</title><rect x="75.7965%" y="420" width="0.2050%" height="15" fill="rgb(222,165,49)" fg:x="4068" fg:w="11"/><text x="76.0465%" y="430.50"></text></g><g><title>ftype (pandas/core/internals.py:313) (11 samples, 0.20%)</title><rect x="75.7965%" y="436" width="0.2050%" height="15" fill="rgb(219,113,52)" fg:x="4068" fg:w="11"/><text x="76.0465%" y="446.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:42) (8 samples, 0.15%)</title><rect x="75.8524%" y="452" width="0.1491%" height="15" fill="rgb(214,7,15)" fg:x="4071" fg:w="8"/><text x="76.1024%" y="462.50"></text></g><g><title>__init__ (pandas/core/internals.py:3035) (14 samples, 0.26%)</title><rect x="75.7965%" y="388" width="0.2609%" height="15" fill="rgb(235,32,4)" fg:x="4068" fg:w="14"/><text x="76.0465%" y="398.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3118) (6 samples, 0.11%)</title><rect x="76.0574%" y="404" width="0.1118%" height="15" fill="rgb(238,90,54)" fg:x="4082" fg:w="6"/><text x="76.3074%" y="414.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals.py:3128) (10 samples, 0.19%)</title><rect x="76.2996%" y="404" width="0.1863%" height="15" fill="rgb(213,208,19)" fg:x="4095" fg:w="10"/><text x="76.5496%" y="414.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:408) (192 samples, 3.58%)</title><rect x="72.9271%" y="356" width="3.5774%" height="15" fill="rgb(233,156,4)" fg:x="3914" fg:w="192"/><text x="73.1771%" y="366.50">get_..</text></g><g><title>concatenate_block_managers (pandas/core/internals.py:5207) (44 samples, 0.82%)</title><rect x="75.6847%" y="372" width="0.8198%" height="15" fill="rgb(207,194,5)" fg:x="4062" fg:w="44"/><text x="75.9347%" y="382.50"></text></g><g><title>__init__ (pandas/core/internals.py:3037) (24 samples, 0.45%)</title><rect x="76.0574%" y="388" width="0.4472%" height="15" fill="rgb(206,111,30)" fg:x="4082" fg:w="24"/><text x="76.3074%" y="398.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:445) (1,035 samples, 19.28%)</title><rect x="57.3691%" y="308" width="19.2845%" height="15" fill="rgb(243,70,54)" fg:x="3079" fg:w="1035"/><text x="57.6191%" y="318.50">_setitem_with_indexer (pandas/..</text></g><g><title>append (pandas/core/frame.py:5194) (332 samples, 6.19%)</title><rect x="70.4677%" y="324" width="6.1860%" height="15" fill="rgb(242,28,8)" fg:x="3782" fg:w="332"/><text x="70.7177%" y="334.50">append (..</text></g><g><title>concat (pandas/core/reshape/concat.py:213) (222 samples, 4.14%)</title><rect x="72.5172%" y="340" width="4.1364%" height="15" fill="rgb(219,106,18)" fg:x="3892" fg:w="222"/><text x="72.7672%" y="350.50">conca..</text></g><g><title>get_result (pandas/core/reshape/concat.py:413) (7 samples, 0.13%)</title><rect x="76.5232%" y="356" width="0.1304%" height="15" fill="rgb(244,222,10)" fg:x="4107" fg:w="7"/><text x="76.7732%" y="366.50"></text></g><g><title>_from_axes (pandas/core/generic.py:338) (6 samples, 0.11%)</title><rect x="76.5418%" y="372" width="0.1118%" height="15" fill="rgb(236,179,52)" fg:x="4108" fg:w="6"/><text x="76.7918%" y="382.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:166) (1,231 samples, 22.94%)</title><rect x="53.8290%" y="276" width="22.9365%" height="15" fill="rgb(213,23,39)" fg:x="2889" fg:w="1231"/><text x="54.0790%" y="286.50">parse_csv_kline_d1 (extension.py:166)</text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (1,152 samples, 21.46%)</title><rect x="55.3009%" y="292" width="21.4645%" height="15" fill="rgb(238,48,10)" fg:x="2968" fg:w="1152"/><text x="55.5509%" y="302.50">__setitem__ (pandas/core/indexing...</text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:446) (6 samples, 0.11%)</title><rect x="76.6536%" y="308" width="0.1118%" height="15" fill="rgb(251,196,23)" fg:x="4114" fg:w="6"/><text x="76.9036%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:167) (11 samples, 0.20%)</title><rect x="76.7654%" y="276" width="0.2050%" height="15" fill="rgb(250,152,24)" fg:x="4120" fg:w="11"/><text x="77.0154%" y="286.50"></text></g><g><title>sort_index (pandas/core/frame.py:3699) (6 samples, 0.11%)</title><rect x="76.8586%" y="292" width="0.1118%" height="15" fill="rgb(209,150,17)" fg:x="4125" fg:w="6"/><text x="77.1086%" y="302.50"></text></g><g><title>replace (pandas/core/internals.py:755) (6 samples, 0.11%)</title><rect x="77.1753%" y="372" width="0.1118%" height="15" fill="rgb(234,202,34)" fg:x="4142" fg:w="6"/><text x="77.4253%" y="382.50"></text></g><g><title>soft_convert_objects (pandas/core/dtypes/cast.py:807) (8 samples, 0.15%)</title><rect x="77.3803%" y="452" width="0.1491%" height="15" fill="rgb(253,148,53)" fg:x="4153" fg:w="8"/><text x="77.6303%" y="462.50"></text></g><g><title>split_and_operate (pandas/core/internals.py:478) (13 samples, 0.24%)</title><rect x="77.3244%" y="420" width="0.2422%" height="15" fill="rgb(218,129,16)" fg:x="4150" fg:w="13"/><text x="77.5744%" y="430.50"></text></g><g><title>f (pandas/core/internals.py:2125) (13 samples, 0.24%)</title><rect x="77.3244%" y="436" width="0.2422%" height="15" fill="rgb(216,85,19)" fg:x="4150" fg:w="13"/><text x="77.5744%" y="446.50"></text></g><g><title>apply (pandas/core/internals.py:3329) (33 samples, 0.61%)</title><rect x="77.0076%" y="324" width="0.6149%" height="15" fill="rgb(235,228,7)" fg:x="4133" fg:w="33"/><text x="77.2576%" y="334.50"></text></g><g><title>replace (pandas/core/internals.py:771) (24 samples, 0.45%)</title><rect x="77.1753%" y="340" width="0.4472%" height="15" fill="rgb(245,175,0)" fg:x="4142" fg:w="24"/><text x="77.4253%" y="350.50"></text></g><g><title>replace (pandas/core/internals.py:2216) (24 samples, 0.45%)</title><rect x="77.1753%" y="356" width="0.4472%" height="15" fill="rgb(208,168,36)" fg:x="4142" fg:w="24"/><text x="77.4253%" y="366.50"></text></g><g><title>replace (pandas/core/internals.py:763) (18 samples, 0.34%)</title><rect x="77.2871%" y="372" width="0.3354%" height="15" fill="rgb(246,171,24)" fg:x="4148" fg:w="18"/><text x="77.5371%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals.py:763) (18 samples, 0.34%)</title><rect x="77.2871%" y="388" width="0.3354%" height="15" fill="rgb(215,142,24)" fg:x="4148" fg:w="18"/><text x="77.5371%" y="398.50"></text></g><g><title>convert (pandas/core/internals.py:2135) (18 samples, 0.34%)</title><rect x="77.2871%" y="404" width="0.3354%" height="15" fill="rgb(250,187,7)" fg:x="4148" fg:w="18"/><text x="77.5371%" y="414.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals.py:3831) (6 samples, 0.11%)</title><rect x="77.6598%" y="340" width="0.1118%" height="15" fill="rgb(228,66,33)" fg:x="4168" fg:w="6"/><text x="77.9098%" y="350.50"></text></g><g><title>replace (pandas/core/generic.py:4612) (42 samples, 0.78%)</title><rect x="77.0076%" y="292" width="0.7826%" height="15" fill="rgb(234,215,21)" fg:x="4133" fg:w="42"/><text x="77.2576%" y="302.50"></text></g><g><title>replace (pandas/core/internals.py:3468) (42 samples, 0.78%)</title><rect x="77.0076%" y="308" width="0.7826%" height="15" fill="rgb(222,191,20)" fg:x="4133" fg:w="42"/><text x="77.2576%" y="318.50"></text></g><g><title>apply (pandas/core/internals.py:3336) (7 samples, 0.13%)</title><rect x="77.6598%" y="324" width="0.1304%" height="15" fill="rgb(245,79,54)" fg:x="4168" fg:w="7"/><text x="77.9098%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:170) (45 samples, 0.84%)</title><rect x="76.9704%" y="276" width="0.8385%" height="15" fill="rgb(240,10,37)" fg:x="4131" fg:w="45"/><text x="77.2204%" y="286.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:171) (9 samples, 0.17%)</title><rect x="77.8088%" y="276" width="0.1677%" height="15" fill="rgb(214,192,32)" fg:x="4176" fg:w="9"/><text x="78.0588%" y="286.50"></text></g><g><title>fillna (pandas/core/frame.py:3035) (9 samples, 0.17%)</title><rect x="77.8088%" y="292" width="0.1677%" height="15" fill="rgb(209,36,54)" fg:x="4176" fg:w="9"/><text x="78.0588%" y="302.50"></text></g><g><title>fillna (pandas/core/generic.py:4309) (8 samples, 0.15%)</title><rect x="77.8275%" y="308" width="0.1491%" height="15" fill="rgb(220,10,11)" fg:x="4177" fg:w="8"/><text x="78.0775%" y="318.50"></text></g><g><title>interpolate (pandas/core/internals.py:3450) (8 samples, 0.15%)</title><rect x="77.8275%" y="324" width="0.1491%" height="15" fill="rgb(221,106,17)" fg:x="4177" fg:w="8"/><text x="78.0775%" y="334.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (7 samples, 0.13%)</title><rect x="78.3678%" y="324" width="0.1304%" height="15" fill="rgb(251,142,44)" fg:x="4206" fg:w="7"/><text x="78.6178%" y="334.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (9 samples, 0.17%)</title><rect x="78.3492%" y="292" width="0.1677%" height="15" fill="rgb(238,13,15)" fg:x="4205" fg:w="9"/><text x="78.5992%" y="302.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (9 samples, 0.17%)</title><rect x="78.3492%" y="308" width="0.1677%" height="15" fill="rgb(208,107,27)" fg:x="4205" fg:w="9"/><text x="78.5992%" y="318.50"></text></g><g><title>__iter__ (pandas/core/indexes/datetimes.py:1189) (75 samples, 1.40%)</title><rect x="78.5541%" y="292" width="1.3974%" height="15" fill="rgb(205,136,37)" fg:x="4216" fg:w="75"/><text x="78.8041%" y="302.50"></text></g><g><title>__iter__ (pandas/core/indexes/datetimes.py:1190) (6 samples, 0.11%)</title><rect x="79.9516%" y="292" width="0.1118%" height="15" fill="rgb(250,205,27)" fg:x="4291" fg:w="6"/><text x="80.2016%" y="302.50"></text></g><g><title>tolist (pandas/core/base.py:812) (6 samples, 0.11%)</title><rect x="80.1565%" y="324" width="0.1118%" height="15" fill="rgb(210,80,43)" fg:x="4302" fg:w="6"/><text x="80.4065%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:175) (120 samples, 2.24%)</title><rect x="78.0511%" y="276" width="2.2359%" height="15" fill="rgb(247,160,36)" fg:x="4189" fg:w="120"/><text x="78.3011%" y="286.50">p..</text></g><g><title>iteritems (pandas/core/series.py:1131) (8 samples, 0.15%)</title><rect x="80.1379%" y="292" width="0.1491%" height="15" fill="rgb(234,13,49)" fg:x="4301" fg:w="8"/><text x="80.3879%" y="302.50"></text></g><g><title>__iter__ (pandas/core/base.py:825) (7 samples, 0.13%)</title><rect x="80.1565%" y="308" width="0.1304%" height="15" fill="rgb(234,122,0)" fg:x="4302" fg:w="7"/><text x="80.4065%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:176) (48 samples, 0.89%)</title><rect x="80.2869%" y="276" width="0.8944%" height="15" fill="rgb(207,146,38)" fg:x="4309" fg:w="48"/><text x="80.5369%" y="286.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (34 samples, 0.63%)</title><rect x="80.5478%" y="292" width="0.6335%" height="15" fill="rgb(207,177,25)" fg:x="4323" fg:w="34"/><text x="80.7978%" y="302.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:53) (16 samples, 0.30%)</title><rect x="80.8832%" y="308" width="0.2981%" height="15" fill="rgb(211,178,42)" fg:x="4341" fg:w="16"/><text x="81.1332%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2121) (15 samples, 0.28%)</title><rect x="81.4980%" y="292" width="0.2795%" height="15" fill="rgb(230,69,54)" fg:x="4374" fg:w="15"/><text x="81.7480%" y="302.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:1696) (8 samples, 0.15%)</title><rect x="81.6285%" y="308" width="0.1491%" height="15" fill="rgb(214,135,41)" fg:x="4381" fg:w="8"/><text x="81.8785%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/generic.py:1843) (6 samples, 0.11%)</title><rect x="81.9452%" y="324" width="0.1118%" height="15" fill="rgb(237,67,25)" fg:x="4398" fg:w="6"/><text x="82.1952%" y="334.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (18 samples, 0.34%)</title><rect x="81.7775%" y="292" width="0.3354%" height="15" fill="rgb(222,189,50)" fg:x="4389" fg:w="18"/><text x="82.0275%" y="302.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (17 samples, 0.32%)</title><rect x="81.7962%" y="308" width="0.3168%" height="15" fill="rgb(245,148,34)" fg:x="4390" fg:w="17"/><text x="82.0462%" y="318.50"></text></g><g><title>_get_axis (pandas/core/generic.py:373) (7 samples, 0.13%)</title><rect x="82.2247%" y="324" width="0.1304%" height="15" fill="rgb(222,29,6)" fg:x="4413" fg:w="7"/><text x="82.4747%" y="334.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1576) (12 samples, 0.22%)</title><rect x="82.1874%" y="308" width="0.2236%" height="15" fill="rgb(221,189,43)" fg:x="4411" fg:w="12"/><text x="82.4374%" y="318.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1582) (6 samples, 0.11%)</title><rect x="82.5042%" y="308" width="0.1118%" height="15" fill="rgb(207,36,27)" fg:x="4428" fg:w="6"/><text x="82.7542%" y="318.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (8 samples, 0.15%)</title><rect x="82.6533%" y="340" width="0.1491%" height="15" fill="rgb(217,90,24)" fg:x="4436" fg:w="8"/><text x="82.9033%" y="350.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1584) (11 samples, 0.20%)</title><rect x="82.6160%" y="308" width="0.2050%" height="15" fill="rgb(224,66,35)" fg:x="4434" fg:w="11"/><text x="82.8660%" y="318.50"></text></g><g><title>is_list_like_indexer (pandas/core/indexing.py:2139) (11 samples, 0.20%)</title><rect x="82.6160%" y="324" width="0.2050%" height="15" fill="rgb(221,13,50)" fg:x="4434" fg:w="11"/><text x="82.8660%" y="334.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1444) (6 samples, 0.11%)</title><rect x="82.8396%" y="324" width="0.1118%" height="15" fill="rgb(236,68,49)" fg:x="4446" fg:w="6"/><text x="83.0896%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexing.py:254) (12 samples, 0.22%)</title><rect x="83.1563%" y="340" width="0.2236%" height="15" fill="rgb(229,146,28)" fg:x="4463" fg:w="12"/><text x="83.4063%" y="350.50"></text></g><g><title>_has_valid_type (pandas/core/indexing.py:1504) (41 samples, 0.76%)</title><rect x="83.1004%" y="324" width="0.7639%" height="15" fill="rgb(225,31,38)" fg:x="4460" fg:w="41"/><text x="83.3504%" y="334.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexing.py:256) (26 samples, 0.48%)</title><rect x="83.3799%" y="340" width="0.4844%" height="15" fill="rgb(250,208,3)" fg:x="4475" fg:w="26"/><text x="83.6299%" y="350.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/datetimelike.py:620) (18 samples, 0.34%)</title><rect x="83.5290%" y="356" width="0.3354%" height="15" fill="rgb(246,54,23)" fg:x="4483" fg:w="18"/><text x="83.7790%" y="366.50"></text></g><g><title>_convert_scalar_indexer (pandas/core/indexes/numeric.py:168) (9 samples, 0.17%)</title><rect x="83.6967%" y="372" width="0.1677%" height="15" fill="rgb(243,76,11)" fg:x="4492" fg:w="9"/><text x="83.9467%" y="382.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1425) (18 samples, 0.34%)</title><rect x="83.9762%" y="356" width="0.3354%" height="15" fill="rgb(245,21,50)" fg:x="4507" fg:w="18"/><text x="84.2262%" y="366.50"></text></g><g><title>__contains__ (pandas/core/indexes/datetimelike.py:252) (40 samples, 0.75%)</title><rect x="83.8830%" y="340" width="0.7453%" height="15" fill="rgb(228,9,43)" fg:x="4502" fg:w="40"/><text x="84.1330%" y="350.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1426) (17 samples, 0.32%)</title><rect x="84.3115%" y="356" width="0.3168%" height="15" fill="rgb(208,100,47)" fg:x="4525" fg:w="17"/><text x="84.5615%" y="366.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:2525) (15 samples, 0.28%)</title><rect x="84.3488%" y="372" width="0.2795%" height="15" fill="rgb(232,26,8)" fg:x="4527" fg:w="15"/><text x="84.5988%" y="382.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1626) (98 samples, 1.83%)</title><rect x="82.8209%" y="308" width="1.8260%" height="15" fill="rgb(216,166,38)" fg:x="4445" fg:w="98"/><text x="83.0709%" y="318.50">_..</text></g><g><title>_has_valid_type (pandas/core/indexing.py:1505) (42 samples, 0.78%)</title><rect x="83.8644%" y="324" width="0.7826%" height="15" fill="rgb(251,202,51)" fg:x="4501" fg:w="42"/><text x="84.1144%" y="334.50"></text></g><g><title>xs (pandas/core/generic.py:2337) (19 samples, 0.35%)</title><rect x="84.7773%" y="340" width="0.3540%" height="15" fill="rgb(254,216,34)" fg:x="4550" fg:w="19"/><text x="85.0273%" y="350.50"></text></g><g><title>_consolidate_inplace (pandas/core/generic.py:3677) (15 samples, 0.28%)</title><rect x="84.8519%" y="356" width="0.2795%" height="15" fill="rgb(251,32,27)" fg:x="4554" fg:w="15"/><text x="85.1019%" y="366.50"></text></g><g><title>_protect_consolidate (pandas/core/generic.py:3666) (13 samples, 0.24%)</title><rect x="84.8891%" y="372" width="0.2422%" height="15" fill="rgb(208,127,28)" fg:x="4556" fg:w="13"/><text x="85.1391%" y="382.50"></text></g><g><title>f (pandas/core/generic.py:3675) (12 samples, 0.22%)</title><rect x="84.9078%" y="388" width="0.2236%" height="15" fill="rgb(224,137,22)" fg:x="4557" fg:w="12"/><text x="85.1578%" y="398.50"></text></g><g><title>get_loc (pandas/core/indexes/datetimes.py:1425) (12 samples, 0.22%)</title><rect x="85.2618%" y="356" width="0.2236%" height="15" fill="rgb(254,70,32)" fg:x="4576" fg:w="12"/><text x="85.5118%" y="366.50"></text></g><g><title>xs (pandas/core/generic.py:2344) (21 samples, 0.39%)</title><rect x="85.1686%" y="340" width="0.3913%" height="15" fill="rgb(229,75,37)" fg:x="4571" fg:w="21"/><text x="85.4186%" y="350.50"></text></g><g><title>xs (pandas/core/generic.py:2357) (11 samples, 0.20%)</title><rect x="85.5972%" y="340" width="0.2050%" height="15" fill="rgb(252,64,23)" fg:x="4594" fg:w="11"/><text x="85.8472%" y="350.50"></text></g><g><title>fast_xs (pandas/core/internals.py:4557) (10 samples, 0.19%)</title><rect x="85.6158%" y="356" width="0.1863%" height="15" fill="rgb(232,162,48)" fg:x="4595" fg:w="10"/><text x="85.8658%" y="366.50"></text></g><g><title>xs (pandas/core/generic.py:2364) (10 samples, 0.19%)</title><rect x="85.8021%" y="340" width="0.1863%" height="15" fill="rgb(246,160,12)" fg:x="4605" fg:w="10"/><text x="86.0521%" y="350.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:266) (10 samples, 0.19%)</title><rect x="85.8021%" y="356" width="0.1863%" height="15" fill="rgb(247,166,0)" fg:x="4605" fg:w="10"/><text x="86.0521%" y="366.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1373) (209 samples, 3.89%)</title><rect x="82.1502%" y="292" width="3.8942%" height="15" fill="rgb(249,219,21)" fg:x="4409" fg:w="209"/><text x="82.4002%" y="302.50">__ge..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:1627) (75 samples, 1.40%)</title><rect x="84.6469%" y="308" width="1.3974%" height="15" fill="rgb(205,209,3)" fg:x="4543" fg:w="75"/><text x="84.8969%" y="318.50"></text></g><g><title>_get_label (pandas/core/indexing.py:139) (74 samples, 1.38%)</title><rect x="84.6655%" y="324" width="1.3788%" height="15" fill="rgb(243,44,1)" fg:x="4544" fg:w="74"/><text x="84.9155%" y="334.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:177) (264 samples, 4.92%)</title><rect x="81.1813%" y="276" width="4.9189%" height="15" fill="rgb(206,159,16)" fg:x="4357" fg:w="264"/><text x="81.4313%" y="286.50">parse_..</text></g><g><title>echo (click/utils.py:256) (6 samples, 0.11%)</title><rect x="86.9201%" y="292" width="0.1118%" height="15" fill="rgb(244,77,30)" fg:x="4665" fg:w="6"/><text x="87.1701%" y="302.50"></text></g><g><title>resolve_color_default (click/globals.py:64) (7 samples, 0.13%)</title><rect x="87.1623%" y="308" width="0.1304%" height="15" fill="rgb(218,69,12)" fg:x="4678" fg:w="7"/><text x="87.4123%" y="318.50"></text></g><g><title>echo (click/utils.py:288) (9 samples, 0.17%)</title><rect x="87.1437%" y="292" width="0.1677%" height="15" fill="rgb(212,87,7)" fg:x="4677" fg:w="9"/><text x="87.3937%" y="302.50"></text></g><g><title>echo (click/utils.py:290) (16 samples, 0.30%)</title><rect x="87.3113%" y="292" width="0.2981%" height="15" fill="rgb(245,114,25)" fg:x="4686" fg:w="16"/><text x="87.5613%" y="302.50"></text></g><g><title>should_strip_ansi (click/_compat.py:510) (16 samples, 0.30%)</title><rect x="87.3113%" y="308" width="0.2981%" height="15" fill="rgb(210,61,42)" fg:x="4686" fg:w="16"/><text x="87.5613%" y="318.50"></text></g><g><title>isatty (click/_compat.py:582) (13 samples, 0.24%)</title><rect x="87.3672%" y="324" width="0.2422%" height="15" fill="rgb(211,52,33)" fg:x="4689" fg:w="13"/><text x="87.6172%" y="334.50"></text></g><g><title>echo (click/utils.py:291) (12 samples, 0.22%)</title><rect x="87.6095%" y="292" width="0.2236%" height="15" fill="rgb(234,58,33)" fg:x="4702" fg:w="12"/><text x="87.8595%" y="302.50"></text></g><g><title>strip_ansi (click/_compat.py:494) (9 samples, 0.17%)</title><rect x="87.6654%" y="308" width="0.1677%" height="15" fill="rgb(220,115,36)" fg:x="4705" fg:w="9"/><text x="87.9154%" y="318.50"></text></g><g><title>parse_csv_kline_d1 (extension.py:179) (209 samples, 3.89%)</title><rect x="86.1002%" y="276" width="3.8942%" height="15" fill="rgb(243,153,54)" fg:x="4621" fg:w="209"/><text x="86.3502%" y="286.50">pars..</text></g><g><title>echo (click/utils.py:299) (114 samples, 2.12%)</title><rect x="87.8703%" y="292" width="2.1241%" height="15" fill="rgb(251,47,18)" fg:x="4716" fg:w="114"/><text x="88.1203%" y="302.50">e..</text></g><g><title>&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:198) (4,499 samples, 83.83%)</title><rect x="6.2418%" y="260" width="83.8271%" height="15" fill="rgb(242,102,42)" fg:x="335" fg:w="4499"/><text x="6.4918%" y="270.50">&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:198)</text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1496) (20 samples, 0.37%)</title><rect x="90.1621%" y="404" width="0.3726%" height="15" fill="rgb(234,31,38)" fg:x="4839" fg:w="20"/><text x="90.4121%" y="414.50"></text></g><g><title>inferred_freq (pandas/core/indexes/datetimelike.py:323) (20 samples, 0.37%)</title><rect x="90.1621%" y="420" width="0.3726%" height="15" fill="rgb(221,117,51)" fg:x="4839" fg:w="20"/><text x="90.4121%" y="430.50"></text></g><g><title>infer_freq (pandas/tseries/frequencies.py:607) (19 samples, 0.35%)</title><rect x="90.1807%" y="436" width="0.3540%" height="15" fill="rgb(212,20,18)" fg:x="4840" fg:w="19"/><text x="90.4307%" y="446.50"></text></g><g><title>get_freq (pandas/tseries/frequencies.py:663) (18 samples, 0.34%)</title><rect x="90.1994%" y="452" width="0.3354%" height="15" fill="rgb(245,133,36)" fg:x="4841" fg:w="18"/><text x="90.4494%" y="462.50"></text></g><g><title>_infer_daily_rule (pandas/tseries/frequencies.py:792) (11 samples, 0.20%)</title><rect x="90.3298%" y="468" width="0.2050%" height="15" fill="rgb(212,6,19)" fg:x="4848" fg:w="11"/><text x="90.5798%" y="478.50"></text></g><g><title>_get_wom_rule (pandas/tseries/frequencies.py:844) (11 samples, 0.20%)</title><rect x="90.3298%" y="484" width="0.2050%" height="15" fill="rgb(218,1,36)" fg:x="4848" fg:w="11"/><text x="90.5798%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.13%)</title><rect x="90.6279%" y="420" width="0.1304%" height="15" fill="rgb(246,84,54)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (7 samples, 0.13%)</title><rect x="90.6279%" y="436" width="0.1304%" height="15" fill="rgb(242,110,6)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.13%)</title><rect x="90.6279%" y="452" width="0.1304%" height="15" fill="rgb(214,47,5)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.13%)</title><rect x="90.6279%" y="468" width="0.1304%" height="15" fill="rgb(218,159,25)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (7 samples, 0.13%)</title><rect x="90.6279%" y="484" width="0.1304%" height="15" fill="rgb(215,211,28)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.13%)</title><rect x="90.6279%" y="500" width="0.1304%" height="15" fill="rgb(238,59,32)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (7 samples, 0.13%)</title><rect x="90.6279%" y="516" width="0.1304%" height="15" fill="rgb(226,82,3)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:951) (7 samples, 0.13%)</title><rect x="90.6279%" y="532" width="0.1304%" height="15" fill="rgb(240,164,32)" fg:x="4864" fg:w="7"/><text x="90.8779%" y="542.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:894) (6 samples, 0.11%)</title><rect x="90.6465%" y="548" width="0.1118%" height="15" fill="rgb(232,46,7)" fg:x="4865" fg:w="6"/><text x="90.8965%" y="558.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (36 samples, 0.67%)</title><rect x="90.1621%" y="372" width="0.6708%" height="15" fill="rgb(229,129,53)" fg:x="4839" fg:w="36"/><text x="90.4121%" y="382.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (36 samples, 0.67%)</title><rect x="90.1621%" y="388" width="0.6708%" height="15" fill="rgb(234,188,29)" fg:x="4839" fg:w="36"/><text x="90.4121%" y="398.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (16 samples, 0.30%)</title><rect x="90.5347%" y="404" width="0.2981%" height="15" fill="rgb(246,141,4)" fg:x="4859" fg:w="16"/><text x="90.7847%" y="414.50"></text></g><g><title>insert (pandas/core/internals.py:4069) (6 samples, 0.11%)</title><rect x="90.9447%" y="436" width="0.1118%" height="15" fill="rgb(229,23,39)" fg:x="4881" fg:w="6"/><text x="91.1947%" y="446.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (15 samples, 0.28%)</title><rect x="90.8329%" y="372" width="0.2795%" height="15" fill="rgb(206,12,3)" fg:x="4875" fg:w="15"/><text x="91.0829%" y="382.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (11 samples, 0.20%)</title><rect x="90.9074%" y="388" width="0.2050%" height="15" fill="rgb(252,226,20)" fg:x="4879" fg:w="11"/><text x="91.1574%" y="398.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (11 samples, 0.20%)</title><rect x="90.9074%" y="404" width="0.2050%" height="15" fill="rgb(216,123,35)" fg:x="4879" fg:w="11"/><text x="91.1574%" y="414.50"></text></g><g><title>set (pandas/core/internals.py:3971) (9 samples, 0.17%)</title><rect x="90.9447%" y="420" width="0.1677%" height="15" fill="rgb(212,68,40)" fg:x="4881" fg:w="9"/><text x="91.1947%" y="430.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:357) (53 samples, 0.99%)</title><rect x="90.1621%" y="356" width="0.9875%" height="15" fill="rgb(254,125,32)" fg:x="4839" fg:w="53"/><text x="90.4121%" y="366.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (8 samples, 0.15%)</title><rect x="91.3732%" y="420" width="0.1491%" height="15" fill="rgb(253,97,22)" fg:x="4904" fg:w="8"/><text x="91.6232%" y="430.50"></text></g><g><title>set (pandas/core/internals.py:3998) (7 samples, 0.13%)</title><rect x="91.3918%" y="436" width="0.1304%" height="15" fill="rgb(241,101,14)" fg:x="4905" fg:w="7"/><text x="91.6418%" y="446.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:194) (74 samples, 1.38%)</title><rect x="90.1621%" y="340" width="1.3788%" height="15" fill="rgb(238,103,29)" fg:x="4839" fg:w="74"/><text x="90.4121%" y="350.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:361) (20 samples, 0.37%)</title><rect x="91.1683%" y="356" width="0.3726%" height="15" fill="rgb(233,195,47)" fg:x="4893" fg:w="20"/><text x="91.4183%" y="366.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:621) (13 samples, 0.24%)</title><rect x="91.2987%" y="372" width="0.2422%" height="15" fill="rgb(246,218,30)" fg:x="4900" fg:w="13"/><text x="91.5487%" y="382.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (13 samples, 0.24%)</title><rect x="91.2987%" y="388" width="0.2422%" height="15" fill="rgb(219,145,47)" fg:x="4900" fg:w="13"/><text x="91.5487%" y="398.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (9 samples, 0.17%)</title><rect x="91.3732%" y="404" width="0.1677%" height="15" fill="rgb(243,12,26)" fg:x="4904" fg:w="9"/><text x="91.6232%" y="414.50"></text></g><g><title>_set_axis (pandas/core/series.py:304) (9 samples, 0.17%)</title><rect x="92.6775%" y="372" width="0.1677%" height="15" fill="rgb(214,87,16)" fg:x="4974" fg:w="9"/><text x="92.9275%" y="382.50"></text></g><g><title>_ensure_index (pandas/core/indexes/base.py:4185) (7 samples, 0.13%)</title><rect x="92.7147%" y="388" width="0.1304%" height="15" fill="rgb(208,99,42)" fg:x="4976" fg:w="7"/><text x="92.9647%" y="398.50"></text></g><g><title>_set_axis (pandas/core/series.py:320) (7 samples, 0.13%)</title><rect x="92.9011%" y="372" width="0.1304%" height="15" fill="rgb(253,99,2)" fg:x="4986" fg:w="7"/><text x="93.1511%" y="382.50"></text></g><g><title>set_axis (pandas/core/internals.py:3067) (6 samples, 0.11%)</title><rect x="93.2551%" y="388" width="0.1118%" height="15" fill="rgb(220,168,23)" fg:x="5005" fg:w="6"/><text x="93.5051%" y="398.50"></text></g><g><title>set_axis (pandas/core/internals.py:3068) (6 samples, 0.11%)</title><rect x="93.3669%" y="388" width="0.1118%" height="15" fill="rgb(242,38,24)" fg:x="5011" fg:w="6"/><text x="93.6169%" y="398.50"></text></g><g><title>_set_axis (pandas/core/series.py:324) (28 samples, 0.52%)</title><rect x="93.1060%" y="372" width="0.5217%" height="15" fill="rgb(225,182,9)" fg:x="4997" fg:w="28"/><text x="93.3560%" y="382.50"></text></g><g><title>name (pandas/core/series.py:342) (7 samples, 0.13%)</title><rect x="93.6277%" y="372" width="0.1304%" height="15" fill="rgb(243,178,37)" fg:x="5025" fg:w="7"/><text x="93.8777%" y="382.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:112) (202 samples, 3.76%)</title><rect x="90.1248%" y="324" width="3.7637%" height="15" fill="rgb(232,139,19)" fg:x="4837" fg:w="202"/><text x="90.3748%" y="334.50">wins..</text></g><g><title>apply (pandas/core/frame.py:4877) (125 samples, 2.33%)</title><rect x="91.5595%" y="340" width="2.3290%" height="15" fill="rgb(225,201,24)" fg:x="4914" fg:w="125"/><text x="91.8095%" y="350.50">a..</text></g><g><title>_apply_standard (pandas/core/frame.py:4933) (120 samples, 2.24%)</title><rect x="91.6527%" y="356" width="2.2359%" height="15" fill="rgb(221,47,46)" fg:x="4919" fg:w="120"/><text x="91.9027%" y="366.50">_..</text></g><g><title>name (pandas/core/series.py:344) (7 samples, 0.13%)</title><rect x="93.7582%" y="372" width="0.1304%" height="15" fill="rgb(249,23,13)" fg:x="5032" fg:w="7"/><text x="94.0082%" y="382.50"></text></g><g><title>_convert_to_indexer (pandas/core/indexing.py:1256) (7 samples, 0.13%)</title><rect x="94.0935%" y="372" width="0.1304%" height="15" fill="rgb(219,9,5)" fg:x="5050" fg:w="7"/><text x="94.3435%" y="382.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2177) (18 samples, 0.34%)</title><rect x="93.9258%" y="356" width="0.3354%" height="15" fill="rgb(254,171,16)" fg:x="5041" fg:w="18"/><text x="94.1758%" y="366.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4146) (7 samples, 0.13%)</title><rect x="94.3171%" y="404" width="0.1304%" height="15" fill="rgb(230,171,20)" fg:x="5062" fg:w="7"/><text x="94.5671%" y="414.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (12 samples, 0.22%)</title><rect x="94.2612%" y="372" width="0.2236%" height="15" fill="rgb(210,71,41)" fg:x="5059" fg:w="12"/><text x="94.5112%" y="382.50"></text></g><g><title>take (pandas/core/internals.py:4264) (10 samples, 0.19%)</title><rect x="94.2985%" y="388" width="0.1863%" height="15" fill="rgb(206,173,20)" fg:x="5061" fg:w="10"/><text x="94.5485%" y="398.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (35 samples, 0.65%)</title><rect x="93.8886%" y="340" width="0.6521%" height="15" fill="rgb(233,88,34)" fg:x="5039" fg:w="35"/><text x="94.1386%" y="350.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (15 samples, 0.28%)</title><rect x="94.2612%" y="356" width="0.2795%" height="15" fill="rgb(223,209,46)" fg:x="5059" fg:w="15"/><text x="94.5112%" y="366.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:87) (47 samples, 0.88%)</title><rect x="93.8886%" y="324" width="0.8757%" height="15" fill="rgb(250,43,18)" fg:x="5039" fg:w="47"/><text x="94.1386%" y="334.50"></text></g><g><title>f (pandas/core/ops.py:1336) (7 samples, 0.13%)</title><rect x="94.6339%" y="340" width="0.1304%" height="15" fill="rgb(208,13,10)" fg:x="5079" fg:w="7"/><text x="94.8839%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4146) (7 samples, 0.13%)</title><rect x="94.9506%" y="404" width="0.1304%" height="15" fill="rgb(212,200,36)" fg:x="5096" fg:w="7"/><text x="95.2006%" y="414.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (11 samples, 0.20%)</title><rect x="94.8947%" y="372" width="0.2050%" height="15" fill="rgb(225,90,30)" fg:x="5093" fg:w="11"/><text x="95.1447%" y="382.50"></text></g><g><title>take (pandas/core/internals.py:4264) (8 samples, 0.15%)</title><rect x="94.9506%" y="388" width="0.1491%" height="15" fill="rgb(236,182,39)" fg:x="5096" fg:w="8"/><text x="95.2006%" y="398.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (20 samples, 0.37%)</title><rect x="94.7643%" y="340" width="0.3726%" height="15" fill="rgb(212,144,35)" fg:x="5086" fg:w="20"/><text x="95.0143%" y="350.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (14 samples, 0.26%)</title><rect x="94.8761%" y="356" width="0.2609%" height="15" fill="rgb(228,63,44)" fg:x="5092" fg:w="14"/><text x="95.1261%" y="366.50"></text></g><g><title>f (pandas/core/ops.py:223) (6 samples, 0.11%)</title><rect x="95.1369%" y="340" width="0.1118%" height="15" fill="rgb(228,109,6)" fg:x="5106" fg:w="6"/><text x="95.3869%" y="350.50"></text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:90) (35 samples, 0.65%)</title><rect x="94.7643%" y="324" width="0.6521%" height="15" fill="rgb(238,117,24)" fg:x="5086" fg:w="35"/><text x="95.0143%" y="334.50"></text></g><g><title>isnull (pandas/core/frame.py:3394) (6 samples, 0.11%)</title><rect x="95.3046%" y="340" width="0.1118%" height="15" fill="rgb(242,26,26)" fg:x="5115" fg:w="6"/><text x="95.5546%" y="350.50"></text></g><g><title>isnull (pandas/core/generic.py:4899) (6 samples, 0.11%)</title><rect x="95.3046%" y="356" width="0.1118%" height="15" fill="rgb(221,92,48)" fg:x="5115" fg:w="6"/><text x="95.5546%" y="366.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:45) (6 samples, 0.11%)</title><rect x="95.3046%" y="372" width="0.1118%" height="15" fill="rgb(209,209,32)" fg:x="5115" fg:w="6"/><text x="95.5546%" y="382.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:60) (6 samples, 0.11%)</title><rect x="95.3046%" y="388" width="0.1118%" height="15" fill="rgb(221,70,22)" fg:x="5115" fg:w="6"/><text x="95.5546%" y="398.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:364) (286 samples, 5.33%)</title><rect x="90.1062%" y="292" width="5.3289%" height="15" fill="rgb(248,145,5)" fg:x="4836" fg:w="286"/><text x="90.3562%" y="302.50">to_ctab..</text></g><g><title>winsorise_uint32 (zipline/data/bcolz_daily_bars.py:71) (285 samples, 5.31%)</title><rect x="90.1248%" y="308" width="5.3102%" height="15" fill="rgb(226,116,26)" fg:x="4837" fg:w="285"/><text x="90.3748%" y="318.50">winsori..</text></g><g><title>_getitem_array (pandas/core/frame.py:2177) (10 samples, 0.19%)</title><rect x="95.4537%" y="324" width="0.1863%" height="15" fill="rgb(244,5,17)" fg:x="5123" fg:w="10"/><text x="95.7037%" y="334.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals.py:4192) (6 samples, 0.11%)</title><rect x="95.6959%" y="388" width="0.1118%" height="15" fill="rgb(252,159,33)" fg:x="5136" fg:w="6"/><text x="95.9459%" y="398.50"></text></g><g><title>reindex_indexer (pandas/core/internals.py:4146) (9 samples, 0.17%)</title><rect x="95.6959%" y="372" width="0.1677%" height="15" fill="rgb(206,71,0)" fg:x="5136" fg:w="9"/><text x="95.9459%" y="382.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2133) (25 samples, 0.47%)</title><rect x="95.4537%" y="308" width="0.4658%" height="15" fill="rgb(233,118,54)" fg:x="5123" fg:w="25"/><text x="95.7037%" y="318.50"></text></g><g><title>_getitem_array (pandas/core/frame.py:2178) (15 samples, 0.28%)</title><rect x="95.6400%" y="324" width="0.2795%" height="15" fill="rgb(234,83,48)" fg:x="5133" fg:w="15"/><text x="95.8900%" y="334.50"></text></g><g><title>_take (pandas/core/generic.py:2150) (15 samples, 0.28%)</title><rect x="95.6400%" y="340" width="0.2795%" height="15" fill="rgb(228,3,54)" fg:x="5133" fg:w="15"/><text x="95.8900%" y="350.50"></text></g><g><title>take (pandas/core/internals.py:4264) (12 samples, 0.22%)</title><rect x="95.6959%" y="356" width="0.2236%" height="15" fill="rgb(226,155,13)" fg:x="5136" fg:w="12"/><text x="95.9459%" y="366.50"></text></g><g><title>round (pandas/core/frame.py:5450) (18 samples, 0.34%)</title><rect x="96.0127%" y="308" width="0.3354%" height="15" fill="rgb(241,28,37)" fg:x="5153" fg:w="18"/><text x="96.2627%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/frame.py:5450) (13 samples, 0.24%)</title><rect x="96.1058%" y="324" width="0.2422%" height="15" fill="rgb(233,93,10)" fg:x="5158" fg:w="13"/><text x="96.3558%" y="334.50"></text></g><g><title>_series_round (pandas/core/frame.py:5437) (10 samples, 0.19%)</title><rect x="96.1617%" y="340" width="0.1863%" height="15" fill="rgb(225,113,19)" fg:x="5161" fg:w="10"/><text x="96.4117%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (12 samples, 0.22%)</title><rect x="96.4226%" y="356" width="0.2236%" height="15" fill="rgb(241,2,18)" fg:x="5175" fg:w="12"/><text x="96.6726%" y="366.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (7 samples, 0.13%)</title><rect x="96.5157%" y="372" width="0.1304%" height="15" fill="rgb(228,207,21)" fg:x="5180" fg:w="7"/><text x="96.7657%" y="382.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:308) (13 samples, 0.24%)</title><rect x="96.4226%" y="340" width="0.2422%" height="15" fill="rgb(213,211,35)" fg:x="5175" fg:w="13"/><text x="96.6726%" y="350.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:212) (22 samples, 0.41%)</title><rect x="96.3667%" y="324" width="0.4099%" height="15" fill="rgb(209,83,10)" fg:x="5172" fg:w="22"/><text x="96.6167%" y="334.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4637) (11 samples, 0.20%)</title><rect x="96.8698%" y="404" width="0.2050%" height="15" fill="rgb(209,164,1)" fg:x="5199" fg:w="11"/><text x="97.1198%" y="414.50"></text></g><g><title>round (pandas/core/frame.py:5456) (46 samples, 0.86%)</title><rect x="96.3481%" y="308" width="0.8571%" height="15" fill="rgb(213,184,43)" fg:x="5171" fg:w="46"/><text x="96.5981%" y="318.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:213) (23 samples, 0.43%)</title><rect x="96.7766%" y="324" width="0.4285%" height="15" fill="rgb(231,61,34)" fg:x="5194" fg:w="23"/><text x="97.0266%" y="334.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:385) (23 samples, 0.43%)</title><rect x="96.7766%" y="340" width="0.4285%" height="15" fill="rgb(235,75,3)" fg:x="5194" fg:w="23"/><text x="97.0266%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:330) (23 samples, 0.43%)</title><rect x="96.7766%" y="356" width="0.4285%" height="15" fill="rgb(220,106,47)" fg:x="5194" fg:w="23"/><text x="97.0266%" y="366.50"></text></g><g><title>_init_dict (pandas/core/frame.py:461) (18 samples, 0.34%)</title><rect x="96.8698%" y="372" width="0.3354%" height="15" fill="rgb(210,196,33)" fg:x="5199" fg:w="18"/><text x="97.1198%" y="382.50"></text></g><g><title>_arrays_to_mgr (pandas/core/frame.py:6173) (18 samples, 0.34%)</title><rect x="96.8698%" y="388" width="0.3354%" height="15" fill="rgb(229,154,42)" fg:x="5199" fg:w="18"/><text x="97.1198%" y="398.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals.py:4638) (7 samples, 0.13%)</title><rect x="97.0747%" y="404" width="0.1304%" height="15" fill="rgb(228,114,26)" fg:x="5210" fg:w="7"/><text x="97.3247%" y="414.50"></text></g><g><title>round (pandas/core/frame.py:5458) (7 samples, 0.13%)</title><rect x="97.2051%" y="308" width="0.1304%" height="15" fill="rgb(208,144,1)" fg:x="5217" fg:w="7"/><text x="97.4551%" y="318.50"></text></g><g><title>__init__ (pandas/core/frame.py:328) (7 samples, 0.13%)</title><rect x="97.2051%" y="324" width="0.1304%" height="15" fill="rgb(239,112,37)" fg:x="5217" fg:w="7"/><text x="97.4551%" y="334.50"></text></g><g><title>_init_mgr (pandas/core/generic.py:168) (6 samples, 0.11%)</title><rect x="97.2238%" y="340" width="0.1118%" height="15" fill="rgb(210,96,50)" fg:x="5218" fg:w="6"/><text x="97.4738%" y="350.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:365) (108 samples, 2.01%)</title><rect x="95.4351%" y="292" width="2.0123%" height="15" fill="rgb(222,178,2)" fg:x="5122" fg:w="108"/><text x="95.6851%" y="302.50">t..</text></g><g><title>wrapper (pandas/util/_decorators.py:118) (6 samples, 0.11%)</title><rect x="97.3356%" y="308" width="0.1118%" height="15" fill="rgb(226,74,18)" fg:x="5224" fg:w="6"/><text x="97.5856%" y="318.50"></text></g><g><title>astype (pandas/core/generic.py:4004) (6 samples, 0.11%)</title><rect x="97.3356%" y="324" width="0.1118%" height="15" fill="rgb(225,67,54)" fg:x="5224" fg:w="6"/><text x="97.5856%" y="334.50"></text></g><g><title>astype (pandas/core/internals.py:3462) (6 samples, 0.11%)</title><rect x="97.3356%" y="340" width="0.1118%" height="15" fill="rgb(251,92,32)" fg:x="5224" fg:w="6"/><text x="97.5856%" y="350.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (19 samples, 0.35%)</title><rect x="97.5405%" y="308" width="0.3540%" height="15" fill="rgb(228,149,22)" fg:x="5235" fg:w="19"/><text x="97.7905%" y="318.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (19 samples, 0.35%)</title><rect x="97.5405%" y="324" width="0.3540%" height="15" fill="rgb(243,54,13)" fg:x="5235" fg:w="19"/><text x="97.7905%" y="334.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (18 samples, 0.34%)</title><rect x="97.5592%" y="340" width="0.3354%" height="15" fill="rgb(243,180,28)" fg:x="5236" fg:w="18"/><text x="97.8092%" y="350.50"></text></g><g><title>insert (pandas/core/indexes/base.py:3720) (6 samples, 0.11%)</title><rect x="97.9877%" y="388" width="0.1118%" height="15" fill="rgb(208,167,24)" fg:x="5259" fg:w="6"/><text x="98.2377%" y="398.50"></text></g><g><title>_coerce_scalar_to_index (pandas/core/indexes/base.py:764) (6 samples, 0.11%)</title><rect x="97.9877%" y="404" width="0.1118%" height="15" fill="rgb(245,73,45)" fg:x="5259" fg:w="6"/><text x="98.2377%" y="414.50"></text></g><g><title>insert (pandas/core/internals.py:4069) (12 samples, 0.22%)</title><rect x="97.9504%" y="372" width="0.2236%" height="15" fill="rgb(237,203,48)" fg:x="5257" fg:w="12"/><text x="98.2004%" y="382.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:368) (38 samples, 0.71%)</title><rect x="97.5219%" y="292" width="0.7080%" height="15" fill="rgb(211,197,16)" fg:x="5234" fg:w="38"/><text x="97.7719%" y="302.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (17 samples, 0.32%)</title><rect x="97.9132%" y="308" width="0.3168%" height="15" fill="rgb(243,99,51)" fg:x="5255" fg:w="17"/><text x="98.1632%" y="318.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (16 samples, 0.30%)</title><rect x="97.9318%" y="324" width="0.2981%" height="15" fill="rgb(215,123,29)" fg:x="5256" fg:w="16"/><text x="98.1818%" y="334.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (16 samples, 0.30%)</title><rect x="97.9318%" y="340" width="0.2981%" height="15" fill="rgb(239,186,37)" fg:x="5256" fg:w="16"/><text x="98.1818%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3971) (15 samples, 0.28%)</title><rect x="97.9504%" y="356" width="0.2795%" height="15" fill="rgb(252,136,39)" fg:x="5257" fg:w="15"/><text x="98.2004%" y="366.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:3613) (6 samples, 0.11%)</title><rect x="98.2672%" y="308" width="0.1118%" height="15" fill="rgb(223,213,32)" fg:x="5274" fg:w="6"/><text x="98.5172%" y="318.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2509) (10 samples, 0.19%)</title><rect x="98.3790%" y="308" width="0.1863%" height="15" fill="rgb(233,115,5)" fg:x="5280" fg:w="10"/><text x="98.6290%" y="318.50"></text></g><g><title>convert_to_index_sliceable (pandas/core/indexing.py:1992) (9 samples, 0.17%)</title><rect x="98.3976%" y="324" width="0.1677%" height="15" fill="rgb(207,226,44)" fg:x="5281" fg:w="9"/><text x="98.6476%" y="334.50"></text></g><g><title>_get_string_slice (pandas/core/indexes/datetimes.py:1497) (9 samples, 0.17%)</title><rect x="98.3976%" y="340" width="0.1677%" height="15" fill="rgb(208,126,0)" fg:x="5281" fg:w="9"/><text x="98.6476%" y="350.50"></text></g><g><title>_set_item (pandas/core/frame.py:2586) (7 samples, 0.13%)</title><rect x="98.5839%" y="324" width="0.1304%" height="15" fill="rgb(244,66,21)" fg:x="5291" fg:w="7"/><text x="98.8339%" y="334.50"></text></g><g><title>_set_item (pandas/core/generic.py:1954) (7 samples, 0.13%)</title><rect x="98.5839%" y="340" width="0.1304%" height="15" fill="rgb(222,97,12)" fg:x="5291" fg:w="7"/><text x="98.8339%" y="350.50"></text></g><g><title>set (pandas/core/internals.py:3971) (6 samples, 0.11%)</title><rect x="98.6026%" y="356" width="0.1118%" height="15" fill="rgb(219,213,19)" fg:x="5292" fg:w="6"/><text x="98.8526%" y="366.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:2519) (9 samples, 0.17%)</title><rect x="98.5653%" y="308" width="0.1677%" height="15" fill="rgb(252,169,30)" fg:x="5290" fg:w="9"/><text x="98.8153%" y="318.50"></text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:369) (32 samples, 0.60%)</title><rect x="98.2299%" y="292" width="0.5962%" height="15" fill="rgb(206,32,51)" fg:x="5272" fg:w="32"/><text x="98.4799%" y="302.50"></text></g><g><title>fromdataframe (bcolz/ctable.py:692) (10 samples, 0.19%)</title><rect x="98.8634%" y="308" width="0.1863%" height="15" fill="rgb(250,172,42)" fg:x="5306" fg:w="10"/><text x="99.1134%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:2122) (10 samples, 0.19%)</title><rect x="98.8634%" y="324" width="0.1863%" height="15" fill="rgb(209,34,43)" fg:x="5306" fg:w="10"/><text x="99.1134%" y="334.50"></text></g><g><title>_getitem_column (pandas/core/frame.py:2146) (10 samples, 0.19%)</title><rect x="98.8634%" y="340" width="0.1863%" height="15" fill="rgb(223,11,35)" fg:x="5306" fg:w="10"/><text x="99.1134%" y="350.50"></text></g><g><title>__init__ (bcolz/ctable.py:270) (6 samples, 0.11%)</title><rect x="99.0870%" y="324" width="0.1118%" height="15" fill="rgb(251,219,26)" fg:x="5318" fg:w="6"/><text x="99.3370%" y="334.50"></text></g><g><title>generator (click/_termui_impl.py:328) (4,992 samples, 93.01%)</title><rect x="6.2418%" y="244" width="93.0129%" height="15" fill="rgb(231,119,3)" fg:x="335" fg:w="4992"/><text x="6.4918%" y="254.50">generator (click/_termui_impl.py:328)</text></g><g><title>&lt;genexpr&gt; (zipline/data/bcolz_daily_bars.py:199) (493 samples, 9.19%)</title><rect x="90.0689%" y="260" width="9.1858%" height="15" fill="rgb(216,97,11)" fg:x="4834" fg:w="493"/><text x="90.3189%" y="270.50">&lt;genexpr&gt; (zi..</text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:362) (492 samples, 9.17%)</title><rect x="90.0876%" y="276" width="9.1671%" height="15" fill="rgb(223,59,9)" fg:x="4835" fg:w="492"/><text x="90.3376%" y="286.50">to_ctable (zi..</text></g><g><title>to_ctable (zipline/data/bcolz_daily_bars.py:370) (23 samples, 0.43%)</title><rect x="98.8262%" y="292" width="0.4285%" height="15" fill="rgb(233,93,31)" fg:x="5304" fg:w="23"/><text x="99.0762%" y="302.50"></text></g><g><title>fromdataframe (bcolz/ctable.py:712) (11 samples, 0.20%)</title><rect x="99.0497%" y="308" width="0.2050%" height="15" fill="rgb(239,81,33)" fg:x="5316" fg:w="11"/><text x="99.2997%" y="318.50"></text></g><g><title>_write_internal (zipline/data/bcolz_daily_bars.py:267) (5,000 samples, 93.16%)</title><rect x="6.2232%" y="228" width="93.1619%" height="15" fill="rgb(213,120,34)" fg:x="334" fg:w="5000"/><text x="6.4732%" y="238.50">_write_internal (zipline/data/bcolz_daily_bars.py:267)</text></g><g><title>_write_internal (zipline/data/bcolz_daily_bars.py:278) (12 samples, 0.22%)</title><rect x="99.3851%" y="228" width="0.2236%" height="15" fill="rgb(243,49,53)" fg:x="5334" fg:w="12"/><text x="99.6351%" y="238.50"></text></g><g><title>ingest (zipline/data/bundles/core.py:443) (5,317 samples, 99.07%)</title><rect x="0.8944%" y="180" width="99.0684%" height="15" fill="rgb(247,216,33)" fg:x="48" fg:w="5317"/><text x="1.1444%" y="190.50">ingest (zipline/data/bundles/core.py:443)</text></g><g><title>ingest_bundle (extension.py:60) (5,031 samples, 93.74%)</title><rect x="6.2232%" y="196" width="93.7395%" height="15" fill="rgb(226,26,14)" fg:x="334" fg:w="5031"/><text x="6.4732%" y="206.50">ingest_bundle (extension.py:60)</text></g><g><title>write (zipline/data/bcolz_daily_bars.py:207) (5,031 samples, 93.74%)</title><rect x="6.2232%" y="212" width="93.7395%" height="15" fill="rgb(215,49,53)" fg:x="334" fg:w="5031"/><text x="6.4732%" y="222.50">write (zipline/data/bcolz_daily_bars.py:207)</text></g><g><title>all (5,367 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(245,162,40)" fg:x="0" fg:w="5367"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (zipline:8) (5,367 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(229,68,17)" fg:x="0" fg:w="5367"/><text x="0.2500%" y="78.50">&lt;module&gt; (zipline:8)</text></g><g><title>__call__ (click/core.py:1137) (5,367 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(213,182,10)" fg:x="0" fg:w="5367"/><text x="0.2500%" y="94.50">__call__ (click/core.py:1137)</text></g><g><title>main (click/core.py:1062) (5,367 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(245,125,30)" fg:x="0" fg:w="5367"/><text x="0.2500%" y="110.50">main (click/core.py:1062)</text></g><g><title>invoke (click/core.py:1668) (5,334 samples, 99.39%)</title><rect x="0.6149%" y="116" width="99.3851%" height="15" fill="rgb(232,202,2)" fg:x="33" fg:w="5334"/><text x="0.8649%" y="126.50">invoke (click/core.py:1668)</text></g><g><title>invoke (click/core.py:1404) (5,334 samples, 99.39%)</title><rect x="0.6149%" y="132" width="99.3851%" height="15" fill="rgb(237,140,51)" fg:x="33" fg:w="5334"/><text x="0.8649%" y="142.50">invoke (click/core.py:1404)</text></g><g><title>invoke (click/core.py:763) (5,334 samples, 99.39%)</title><rect x="0.6149%" y="148" width="99.3851%" height="15" fill="rgb(236,157,25)" fg:x="33" fg:w="5334"/><text x="0.8649%" y="158.50">invoke (click/core.py:763)</text></g><g><title>ingest (zipline/__main__.py:385) (5,334 samples, 99.39%)</title><rect x="0.6149%" y="164" width="99.3851%" height="15" fill="rgb(219,209,0)" fg:x="33" fg:w="5334"/><text x="0.8649%" y="174.50">ingest (zipline/__main__.py:385)</text></g></svg></svg>